Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    startup_stm32g030xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32g030xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32g030xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32g030xx.o(RESET) refers to startup_stm32g030xx.o(STACK) for __initial_sp
    startup_stm32g030xx.o(RESET) refers to startup_stm32g030xx.o(.text) for Reset_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_mc_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_it.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_it.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_mc_it.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler) for EXTI4_15_IRQHandler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_mc_it.o(.text.DMA1_Channel1_IRQHandler) for DMA1_Channel1_IRQHandler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_mc_it.o(.text.DMA1_Channel2_3_IRQHandler) for DMA1_Channel2_3_IRQHandler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) for TIM1_BRK_UP_TRG_COM_IRQHandler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_it.o(.text.TIM14_IRQHandler) for TIM14_IRQHandler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_mc_it.o(.text.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32g030xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32g030xx.o(.text) refers to system_stm32g0xx.o(.text.SystemInit) for SystemInit
    startup_stm32g030xx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32g030xx.o(.text) refers to startup_stm32g030xx.o(HEAP) for Heap_Mem
    startup_stm32g030xx.o(.text) refers to startup_stm32g030xx.o(STACK) for Stack_Mem
    main.o(.text.millis) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    main.o(.ARM.exidx.text.millis) refers to main.o(.text.millis) for [Anonymous Symbol]
    main.o(.ARM.exidx.text._sys_exit) refers to main.o(.text._sys_exit) for [Anonymous Symbol]
    main.o(.ARM.exidx.text._ttywrch) refers to main.o(.text._ttywrch) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.fputc) refers to main.o(.text.fputc) for [Anonymous Symbol]
    main.o(.text.main) refers to stm32g0xx_hal.o(.text.HAL_Init) for HAL_Init
    main.o(.text.main) refers to main.o(.text.SystemClock_Config) for SystemClock_Config
    main.o(.text.main) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    main.o(.text.main) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_Init) for LL_ADC_Init
    main.o(.text.main) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init) for LL_ADC_REG_Init
    main.o(.text.main) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_Init) for LL_TIM_Init
    main.o(.text.main) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init) for LL_TIM_OC_Init
    main.o(.text.main) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init) for LL_TIM_BDTR_Init
    main.o(.text.main) refers to stm32g0xx_ll_usart.o(.text.LL_USART_Init) for LL_USART_Init
    main.o(.text.main) refers to motorcontrol.o(.text.MX_MotorControl_Init) for MX_MotorControl_Init
    main.o(.text.main) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init) for HAL_TIM_Base_Init
    main.o(.text.main) refers to app_handle.o(.text.work_mode_init) for work_mode_init
    main.o(.text.main) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    main.o(.text.main) refers to led_key.o(.text.exe_key_func) for exe_key_func
    main.o(.text.main) refers to main.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock) for LL_SetSystemCoreClock
    main.o(.text.SystemClock_Config) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Error_Handler) refers to main.o(.text.Error_Handler) for [Anonymous Symbol]
    motorcontrol.o(.text.MX_MotorControl_Init) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    motorcontrol.o(.text.MX_MotorControl_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    motorcontrol.o(.text.MX_MotorControl_Init) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    motorcontrol.o(.text.MX_MotorControl_Init) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    motorcontrol.o(.text.MX_MotorControl_Init) refers to mc_tasks.o(.text.MCboot) for MCboot
    motorcontrol.o(.text.MX_MotorControl_Init) refers to mc_tasks.o(.text.mc_lock_pins) for mc_lock_pins
    motorcontrol.o(.text.MX_MotorControl_Init) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for uwTickPrio
    motorcontrol.o(.text.MX_MotorControl_Init) refers to motorcontrol.o(.bss.pMCI) for pMCI
    motorcontrol.o(.ARM.exidx.text.MX_MotorControl_Init) refers to motorcontrol.o(.text.MX_MotorControl_Init) for [Anonymous Symbol]
    mc_api.o(.text.MC_StartMotor1) refers to mc_interface.o(.text.MCI_StartMotor) for MCI_StartMotor
    mc_api.o(.text.MC_StartMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_StartMotor1) refers to mc_api.o(.text.MC_StartMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_StopMotor1) refers to mc_interface.o(.text.MCI_StopMotor) for MCI_StopMotor
    mc_api.o(.text.MC_StopMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_StopMotor1) refers to mc_api.o(.text.MC_StopMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_ProgramSpeedRampMotor1) refers to mc_interface.o(.text.MCI_ExecSpeedRamp) for MCI_ExecSpeedRamp
    mc_api.o(.text.MC_ProgramSpeedRampMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_ProgramSpeedRampMotor1) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_ProgramSpeedRampMotor1_F) refers to mc_interface.o(.text.MCI_ExecSpeedRamp_F) for MCI_ExecSpeedRamp_F
    mc_api.o(.text.MC_ProgramSpeedRampMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_ProgramSpeedRampMotor1_F) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_ProgramTorqueRampMotor1) refers to mc_interface.o(.text.MCI_ExecTorqueRamp) for MCI_ExecTorqueRamp
    mc_api.o(.text.MC_ProgramTorqueRampMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_ProgramTorqueRampMotor1) refers to mc_api.o(.text.MC_ProgramTorqueRampMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_ProgramTorqueRampMotor1_F) refers to mc_interface.o(.text.MCI_ExecTorqueRamp_F) for MCI_ExecTorqueRamp_F
    mc_api.o(.text.MC_ProgramTorqueRampMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_ProgramTorqueRampMotor1_F) refers to mc_api.o(.text.MC_ProgramTorqueRampMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_SetCurrentReferenceMotor1) refers to mc_interface.o(.text.MCI_SetCurrentReferences) for MCI_SetCurrentReferences
    mc_api.o(.text.MC_SetCurrentReferenceMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_SetCurrentReferenceMotor1) refers to mc_api.o(.text.MC_SetCurrentReferenceMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_SetCurrentReferenceMotor1_F) refers to mc_interface.o(.text.MCI_SetCurrentReferences_F) for MCI_SetCurrentReferences_F
    mc_api.o(.text.MC_SetCurrentReferenceMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_SetCurrentReferenceMotor1_F) refers to mc_api.o(.text.MC_SetCurrentReferenceMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetCommandStateMotor1) refers to mc_interface.o(.text.MCI_IsCommandAcknowledged) for MCI_IsCommandAcknowledged
    mc_api.o(.text.MC_GetCommandStateMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetCommandStateMotor1) refers to mc_api.o(.text.MC_GetCommandStateMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_StopSpeedRampMotor1) refers to mc_interface.o(.text.MCI_StopSpeedRamp) for MCI_StopSpeedRamp
    mc_api.o(.text.MC_StopSpeedRampMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_StopSpeedRampMotor1) refers to mc_api.o(.text.MC_StopSpeedRampMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_StopRampMotor1) refers to mc_interface.o(.text.MCI_StopRamp) for MCI_StopRamp
    mc_api.o(.text.MC_StopRampMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_StopRampMotor1) refers to mc_api.o(.text.MC_StopRampMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_HasRampCompletedMotor1) refers to mc_interface.o(.text.MCI_RampCompleted) for MCI_RampCompleted
    mc_api.o(.text.MC_HasRampCompletedMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_HasRampCompletedMotor1) refers to mc_api.o(.text.MC_HasRampCompletedMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetMecSpeedReferenceMotor1) refers to mc_interface.o(.text.MCI_GetMecSpeedRefUnit) for MCI_GetMecSpeedRefUnit
    mc_api.o(.text.MC_GetMecSpeedReferenceMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetMecSpeedReferenceMotor1) refers to mc_api.o(.text.MC_GetMecSpeedReferenceMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetMecSpeedAverageMotor1) refers to mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit) for MCI_GetAvrgMecSpeedUnit
    mc_api.o(.text.MC_GetMecSpeedAverageMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetMecSpeedAverageMotor1) refers to mc_api.o(.text.MC_GetMecSpeedAverageMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1) refers to mc_interface.o(.text.MCI_GetLastRampFinalSpeed) for MCI_GetLastRampFinalSpeed
    mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetLastRampFinalSpeedMotor1) refers to mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1_F) refers to mc_interface.o(.text.MCI_GetLastRampFinalSpeed_F) for MCI_GetLastRampFinalSpeed_F
    mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetLastRampFinalSpeedMotor1_F) refers to mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetControlModeMotor1) refers to mc_interface.o(.text.MCI_GetControlMode) for MCI_GetControlMode
    mc_api.o(.text.MC_GetControlModeMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetControlModeMotor1) refers to mc_api.o(.text.MC_GetControlModeMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetImposedDirectionMotor1) refers to mc_interface.o(.text.MCI_GetImposedMotorDirection) for MCI_GetImposedMotorDirection
    mc_api.o(.text.MC_GetImposedDirectionMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetImposedDirectionMotor1) refers to mc_api.o(.text.MC_GetImposedDirectionMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetSpeedSensorReliabilityMotor1) refers to mc_interface.o(.text.MCI_GetSpdSensorReliability) for MCI_GetSpdSensorReliability
    mc_api.o(.text.MC_GetSpeedSensorReliabilityMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetSpeedSensorReliabilityMotor1) refers to mc_api.o(.text.MC_GetSpeedSensorReliabilityMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetPhaseCurrentAmplitudeMotor1) refers to mc_interface.o(.text.MCI_GetPhaseCurrentAmplitude) for MCI_GetPhaseCurrentAmplitude
    mc_api.o(.text.MC_GetPhaseCurrentAmplitudeMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetPhaseCurrentAmplitudeMotor1) refers to mc_api.o(.text.MC_GetPhaseCurrentAmplitudeMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetPhaseVoltageAmplitudeMotor1) refers to mc_interface.o(.text.MCI_GetPhaseVoltageAmplitude) for MCI_GetPhaseVoltageAmplitude
    mc_api.o(.text.MC_GetPhaseVoltageAmplitudeMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetPhaseVoltageAmplitudeMotor1) refers to mc_api.o(.text.MC_GetPhaseVoltageAmplitudeMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIabMotor1) refers to mc_interface.o(.text.MCI_GetIab) for MCI_GetIab
    mc_api.o(.text.MC_GetIabMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetIabMotor1) refers to mc_api.o(.text.MC_GetIabMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIabMotor1_F) refers to mc_interface.o(.text.MCI_GetIab_F) for MCI_GetIab_F
    mc_api.o(.text.MC_GetIabMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetIabMotor1_F) refers to mc_api.o(.text.MC_GetIabMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIalphabetaMotor1) refers to mc_interface.o(.text.MCI_GetIalphabeta) for MCI_GetIalphabeta
    mc_api.o(.text.MC_GetIalphabetaMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetIalphabetaMotor1) refers to mc_api.o(.text.MC_GetIalphabetaMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIqdMotor1) refers to mc_interface.o(.text.MCI_GetIqd) for MCI_GetIqd
    mc_api.o(.text.MC_GetIqdMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetIqdMotor1) refers to mc_api.o(.text.MC_GetIqdMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIqdMotor1_F) refers to mc_interface.o(.text.MCI_GetIqd_F) for MCI_GetIqd_F
    mc_api.o(.text.MC_GetIqdMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetIqdMotor1_F) refers to mc_api.o(.text.MC_GetIqdMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIqdrefMotor1) refers to mc_interface.o(.text.MCI_GetIqdref) for MCI_GetIqdref
    mc_api.o(.text.MC_GetIqdrefMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetIqdrefMotor1) refers to mc_api.o(.text.MC_GetIqdrefMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIqdrefMotor1_F) refers to mc_interface.o(.text.MCI_GetIqdref_F) for MCI_GetIqdref_F
    mc_api.o(.text.MC_GetIqdrefMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetIqdrefMotor1_F) refers to mc_api.o(.text.MC_GetIqdrefMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetVqdMotor1) refers to mc_interface.o(.text.MCI_GetVqd) for MCI_GetVqd
    mc_api.o(.text.MC_GetVqdMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetVqdMotor1) refers to mc_api.o(.text.MC_GetVqdMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetValphabetaMotor1) refers to mc_interface.o(.text.MCI_GetValphabeta) for MCI_GetValphabeta
    mc_api.o(.text.MC_GetValphabetaMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetValphabetaMotor1) refers to mc_api.o(.text.MC_GetValphabetaMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetElAngledppMotor1) refers to mc_interface.o(.text.MCI_GetElAngledpp) for MCI_GetElAngledpp
    mc_api.o(.text.MC_GetElAngledppMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetElAngledppMotor1) refers to mc_api.o(.text.MC_GetElAngledppMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetTerefMotor1) refers to mc_interface.o(.text.MCI_GetTeref) for MCI_GetTeref
    mc_api.o(.text.MC_GetTerefMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetTerefMotor1) refers to mc_api.o(.text.MC_GetTerefMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetTerefMotor1_F) refers to mc_interface.o(.text.MCI_GetTeref_F) for MCI_GetTeref_F
    mc_api.o(.text.MC_GetTerefMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetTerefMotor1_F) refers to mc_api.o(.text.MC_GetTerefMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_Clear_IqdrefMotor1) refers to mc_interface.o(.text.MCI_Clear_Iqdref) for MCI_Clear_Iqdref
    mc_api.o(.text.MC_Clear_IqdrefMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_Clear_IqdrefMotor1) refers to mc_api.o(.text.MC_Clear_IqdrefMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_AcknowledgeFaultMotor1) refers to mc_interface.o(.text.MCI_FaultAcknowledged) for MCI_FaultAcknowledged
    mc_api.o(.text.MC_AcknowledgeFaultMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_AcknowledgeFaultMotor1) refers to mc_api.o(.text.MC_AcknowledgeFaultMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetOccurredFaultsMotor1) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_api.o(.text.MC_GetOccurredFaultsMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetOccurredFaultsMotor1) refers to mc_api.o(.text.MC_GetOccurredFaultsMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetCurrentFaultsMotor1) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_api.o(.text.MC_GetCurrentFaultsMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetCurrentFaultsMotor1) refers to mc_api.o(.text.MC_GetCurrentFaultsMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetSTMStateMotor1) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_api.o(.text.MC_GetSTMStateMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetSTMStateMotor1) refers to mc_api.o(.text.MC_GetSTMStateMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_SetPolarizationOffsetsMotor1) refers to mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) for MCI_SetCalibratedOffsetsMotor
    mc_api.o(.text.MC_SetPolarizationOffsetsMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_SetPolarizationOffsetsMotor1) refers to mc_api.o(.text.MC_SetPolarizationOffsetsMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetPolarizationOffsetsMotor1) refers to mc_interface.o(.text.MCI_GetCalibratedOffsetsMotor) for MCI_GetCalibratedOffsetsMotor
    mc_api.o(.text.MC_GetPolarizationOffsetsMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetPolarizationOffsetsMotor1) refers to mc_api.o(.text.MC_GetPolarizationOffsetsMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_StartPolarizationOffsetsMeasurementMotor1) refers to mc_interface.o(.text.MCI_StartOffsetMeasurments) for MCI_StartOffsetMeasurments
    mc_api.o(.text.MC_StartPolarizationOffsetsMeasurementMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_StartPolarizationOffsetsMeasurementMotor1) refers to mc_api.o(.text.MC_StartPolarizationOffsetsMeasurementMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetAveragePowerMotor1_F) refers to pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW) for PQD_GetAvrgElMotorPowerW
    mc_api.o(.text.MC_GetAveragePowerMotor1_F) refers to mc_config.o(.data.pMPM) for pMPM
    mc_api.o(.ARM.exidx.text.MC_GetAveragePowerMotor1_F) refers to mc_api.o(.text.MC_GetAveragePowerMotor1_F) for [Anonymous Symbol]
    mc_api.o(.ARM.exidx.text.MC_ProfilerCommand) refers to mc_api.o(.text.MC_ProfilerCommand) for [Anonymous Symbol]
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents) for R3_1_GetPhaseCurrents
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for R3_1_SwitchOffPWM
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM) for R3_1_SwitchOnPWM
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) for R3_1_CurrentReadingCalibration
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides) for R3_1_TurnOnLowSides
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX) for R3_1_SetADCSampPointSectX
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_IsOverCurrentOccurred) for R3_1_IsOverCurrentOccurred
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetOffsetCalib) for R3_1_SetOffsetCalib
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetOffsetCalib) for R3_1_GetOffsetCalib
    mc_config.o(.data.PWM_Handle_M1) refers to mc_parameters.o(.rodata.R3_1_Params) for R3_1_Params
    mc_config.o(.data.STO_M1) refers to mc_config.o(.data.STO_PLL_M1) for STO_PLL_M1
    mc_config.o(.data.STO_M1) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_ForceConvergency1) for STO_PLL_ForceConvergency1
    mc_config.o(.data.STO_M1) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_ForceConvergency2) for STO_PLL_ForceConvergency2
    mc_config.o(.data.STO_M1) refers to sto_pll_speed_pos_fdbk.o(.text.STO_OTF_ResetPLL) for STO_OTF_ResetPLL
    mc_config.o(.data.STO_M1) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsVarianceTight) for STO_PLL_IsVarianceTight
    mc_config.o(.data.BusVoltageSensor_M1) refers to mc_config.o(.bss.RealBusVoltageSensorFilterBufferM1) for [Anonymous Symbol]
    mc_config.o(.data.pSTC) refers to mc_config.o(.data.SpeednTorqCtrlM1) for SpeednTorqCtrlM1
    mc_config.o(.data.pTemperatureSensor) refers to mc_config.o(.data.TempSensor_M1) for TempSensor_M1
    mc_config.o(.data.pPIDIq) refers to mc_config.o(.data.PIDIqHandle_M1) for PIDIqHandle_M1
    mc_config.o(.data.pPIDId) refers to mc_config.o(.data.PIDIdHandle_M1) for PIDIdHandle_M1
    mc_config.o(.data.pMPM) refers to mc_config.o(.data.PQD_MotorPowMeasM1) for PQD_MotorPowMeasM1
    mc_config.o(.data.pFW) refers to mc_config.o(.data.FW_M1) for FW_M1
    mcp_config.o(.data.aspepOverUartA) refers to aspep.o(.text.ASPEP_getBuffer) for ASPEP_getBuffer
    mcp_config.o(.data.aspepOverUartA) refers to aspep.o(.text.ASPEP_sendPacket) for ASPEP_sendPacket
    mcp_config.o(.data.aspepOverUartA) refers to aspep.o(.text.ASPEP_RXframeProcess) for ASPEP_RXframeProcess
    mcp_config.o(.data.aspepOverUartA) refers to mcp_config.o(.data.UASPEP_A) for [Anonymous Symbol]
    mcp_config.o(.data.aspepOverUartA) refers to mcp_config.o(.bss.MCPSyncRXBuff) for [Anonymous Symbol]
    mcp_config.o(.data.aspepOverUartA) refers to mcp_config.o(.bss.MCPSyncTxBuff) for [Anonymous Symbol]
    mcp_config.o(.data.aspepOverUartA) refers to mcp_config.o(.bss.MCPAsyncBuffUARTA_A) for [Anonymous Symbol]
    mcp_config.o(.data.aspepOverUartA) refers to mcp_config.o(.bss.MCPAsyncBuffUARTA_B) for [Anonymous Symbol]
    mcp_config.o(.data.aspepOverUartA) refers to usart_aspep_driver.o(.text.UASPEP_INIT) for UASPEP_INIT
    mcp_config.o(.data.aspepOverUartA) refers to usart_aspep_driver.o(.text.UASPEP_IDLE_ENABLE) for UASPEP_IDLE_ENABLE
    mcp_config.o(.data.aspepOverUartA) refers to usart_aspep_driver.o(.text.UASPEP_RECEIVE_BUFFER) for UASPEP_RECEIVE_BUFFER
    mcp_config.o(.data.aspepOverUartA) refers to usart_aspep_driver.o(.text.UASPEP_SEND_PACKET) for UASPEP_SEND_PACKET
    mcp_config.o(.data.MCP_Over_UartA) refers to mcp_config.o(.data.aspepOverUartA) for aspepOverUartA
    mcp_config.o(.data.MCPA_UART_A) refers to mcp_config.o(.data.aspepOverUartA) for aspepOverUartA
    mcp_config.o(.data.MCPA_UART_A) refers to mcp_config.o(.bss.dataPtrTableA) for dataPtrTableA
    mcp_config.o(.data.MCPA_UART_A) refers to mcp_config.o(.bss.dataPtrTableBuffA) for dataPtrTableBuffA
    mcp_config.o(.data.MCPA_UART_A) refers to mcp_config.o(.bss.dataSizeTableA) for dataSizeTableA
    mcp_config.o(.data.MCPA_UART_A) refers to mcp_config.o(.bss.dataSizeTableBuffA) for dataSizeTableBuffA
    mc_tasks.o(.text.MCboot) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init) for R3_1_Init
    mc_tasks.o(.text.MCboot) refers to aspep.o(.text.ASPEP_start) for ASPEP_start
    mc_tasks.o(.text.MCboot) refers to pid_regulator.o(.text.PID_HandleInit) for PID_HandleInit
    mc_tasks.o(.text.MCboot) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init) for STO_PLL_Init
    mc_tasks.o(.text.MCboot) refers to speed_torq_ctrl.o(.text.STC_Init) for STC_Init
    mc_tasks.o(.text.MCboot) refers to virtual_speed_sensor.o(.text.VSS_Init) for VSS_Init
    mc_tasks.o(.text.MCboot) refers to revup_ctrl.o(.text.RUC_Init) for RUC_Init
    mc_tasks.o(.text.MCboot) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_Init) for RVBS_Init
    mc_tasks.o(.text.MCboot) refers to ntc_temperature_sensor.o(.text.NTC_Init) for NTC_Init
    mc_tasks.o(.text.MCboot) refers to ramp_ext_mngr.o(.text.REMNG_Init) for REMNG_Init
    mc_tasks.o(.text.MCboot) refers to mc_tasks.o(.text.FOC_Clear) for FOC_Clear
    mc_tasks.o(.text.MCboot) refers to speed_torq_ctrl.o(.text.STC_GetDefaultIqdref) for STC_GetDefaultIqdref
    mc_tasks.o(.text.MCboot) refers to mc_interface.o(.text.MCI_Init) for MCI_Init
    mc_tasks.o(.text.MCboot) refers to mc_interface.o(.text.MCI_ExecSpeedRamp) for MCI_ExecSpeedRamp
    mc_tasks.o(.text.MCboot) refers to mc_app_hooks.o(.text.MC_APP_BootHook) for MC_APP_BootHook
    mc_tasks.o(.text.MCboot) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.PWM_Handle_M1) for PWM_Handle_M1
    mc_tasks.o(.text.MCboot) refers to mcp_config.o(.data.aspepOverUartA) for aspepOverUartA
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.PIDSpeedHandle_M1) for PIDSpeedHandle_M1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.STO_PLL_M1) for STO_PLL_M1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.pSTC) for pSTC
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.VirtualSpeedSensorM1) for VirtualSpeedSensorM1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.RevUpControlM1) for RevUpControlM1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.STO_M1) for STO_M1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.PIDIqHandle_M1) for PIDIqHandle_M1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.PIDIdHandle_M1) for PIDIdHandle_M1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.BusVoltageSensor_M1) for BusVoltageSensor_M1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.pMPM) for pMPM
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.TempSensor_M1) for TempSensor_M1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.RampExtMngrHFParamsM1) for RampExtMngrHFParamsM1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.ARM.exidx.text.MCboot) refers to mc_tasks.o(.text.MCboot) for [Anonymous Symbol]
    mc_tasks.o(.text.FOC_Clear) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    mc_tasks.o(.text.FOC_Clear) refers to speed_torq_ctrl.o(.text.STC_Clear) for STC_Clear
    mc_tasks.o(.text.FOC_Clear) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM) for PWMC_SwitchOffPWM
    mc_tasks.o(.text.FOC_Clear) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.FOC_Clear) refers to mc_config.o(.data.pPIDIq) for pPIDIq
    mc_tasks.o(.text.FOC_Clear) refers to mc_config.o(.data.pPIDId) for pPIDId
    mc_tasks.o(.text.FOC_Clear) refers to mc_config.o(.data.pSTC) for pSTC
    mc_tasks.o(.ARM.exidx.text.FOC_Clear) refers to mc_tasks.o(.text.FOC_Clear) for [Anonymous Symbol]
    mc_tasks.o(.text.MC_RunMotorControlTasks) refers to mc_tasks.o(.text.MC_Scheduler) for MC_Scheduler
    mc_tasks.o(.text.MC_RunMotorControlTasks) refers to mc_tasks.o(.text.TSK_SafetyTask) for TSK_SafetyTask
    mc_tasks.o(.text.MC_RunMotorControlTasks) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.MC_RunMotorControlTasks) refers to mc_tasks.o(.text.MC_RunMotorControlTasks) for [Anonymous Symbol]
    mc_tasks.o(.text.MC_Scheduler) refers to mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) for TSK_MediumFrequencyTaskM1
    mc_tasks.o(.text.MC_Scheduler) refers to mc_app_hooks.o(.text.MC_APP_PostMediumFrequencyHook_M1) for MC_APP_PostMediumFrequencyHook_M1
    mc_tasks.o(.text.MC_Scheduler) refers to mcp.o(.text.MCP_ReceivedPacket) for MCP_ReceivedPacket
    mc_tasks.o(.text.MC_Scheduler) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.MC_Scheduler) refers to mcp_config.o(.data.MCP_Over_UartA) for MCP_Over_UartA
    mc_tasks.o(.ARM.exidx.text.MC_Scheduler) refers to mc_tasks.o(.text.MC_Scheduler) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_SafetyTask) refers to mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) for TSK_SafetyTask_PWMOFF
    mc_tasks.o(.text.TSK_SafetyTask) refers to regular_conversion_manager.o(.text.RCM_ExecUserConv) for RCM_ExecUserConv
    mc_tasks.o(.text.TSK_SafetyTask) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.TSK_SafetyTask) refers to mc_tasks.o(.text.TSK_SafetyTask) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for R3_1_SwitchOffPWM
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to mc_tasks.o(.text.FOC_Clear) for FOC_Clear
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to pqd_motor_power_measurement.o(.text.PQD_Clear) for PQD_Clear
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to mc_tasks.o(.text.TSK_SetStopPermanencyTimeM1) for TSK_SetStopPermanencyTimeM1
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to mc_config.o(.data.pMPM) for pMPM
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.ARM.exidx.text.TSK_MF_StopProcessing) refers to mc_tasks.o(.text.TSK_MF_StopProcessing) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_SetStopPermanencyTimeM1) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.TSK_SetStopPermanencyTimeM1) refers to mc_tasks.o(.text.TSK_SetStopPermanencyTimeM1) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgMecSpeedUnit) for STO_PLL_CalcAvrgMecSpeedUnit
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to pqd_motor_power_measurement.o(.text.PQD_CalcElMotorPower) for PQD_CalcElMotorPower
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_interface.o(.text.MCI_GetImposedMotorDirection) for MCI_GetImposedMotorDirection
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to revup_ctrl.o(.text.RUC_Clear) for RUC_Clear
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to pwm_curr_fdbk.o(.text.PWMC_CurrentReadingCalibr) for PWMC_CurrentReadingCalibr
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides) for R3_1_TurnOnLowSides
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.TSK_SetChargeBootCapDelayM1) for TSK_SetChargeBootCapDelayM1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.TSK_MF_StopProcessing) for TSK_MF_StopProcessing
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.TSK_StopPermanencyTimeHasElapsedM1) for TSK_StopPermanencyTimeHasElapsedM1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to speed_torq_ctrl.o(.text.STC_SetSpeedSensor) for STC_SetSpeedSensor
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to virtual_speed_sensor.o(.text.VSS_Clear) for VSS_Clear
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to revup_ctrl.o(.text.RUC_Exec) for RUC_Exec
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to speed_torq_ctrl.o(.text.STC_CalcTorqueReference) for STC_CalcTorqueReference
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_interface.o(.text.MCI_ExecBufferedCommands) for MCI_ExecBufferedCommands
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.FOC_CalcCurrRef) for FOC_CalcCurrRef
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_interface.o(.text.MCI_FaultProcessing) for MCI_FaultProcessing
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.TSK_ChargeBootCapDelayHasElapsedM1) for TSK_ChargeBootCapDelayHasElapsedM1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for R3_1_SwitchOffPWM
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Clear) for STO_PLL_Clear
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.FOC_Clear) for FOC_Clear
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOnPWM) for PWMC_SwitchOnPWM
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to pqd_motor_power_measurement.o(.text.PQD_Clear) for PQD_Clear
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to virtual_speed_sensor.o(.text.VSS_CalcAvrgMecSpeedUnit) for VSS_CalcAvrgMecSpeedUnit
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to virtual_speed_sensor.o(.text.VSS_TransitionEnded) for VSS_TransitionEnded
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to pid_regulator.o(.text.PID_GetKIDivisor) for PID_GetKIDivisor
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.FOC_InitAdditionalMethods) for FOC_InitAdditionalMethods
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to speed_torq_ctrl.o(.text.STC_ForceSpeedReferenceToCurrentSpeed) for STC_ForceSpeedReferenceToCurrentSpeed
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to revup_ctrl.o(.text.RUC_FirstAccelerationStageReached) for RUC_FirstAccelerationStageReached
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsObserverConverged) for STO_PLL_IsObserverConverged
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers (Weak) to sto_pll_speed_pos_fdbk.o(.text.STO_SetDirection) for STO_SetDirection
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to virtual_speed_sensor.o(.text.VSS_SetStartTransition) for VSS_SetStartTransition
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to speed_pos_fdbk.o(.text.SPD_GetElAngle) for SPD_GetElAngle
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_math.o(.text.MCM_Park) for MCM_Park
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to ramp_ext_mngr.o(.text.REMNG_Init) for REMNG_Init
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to ramp_ext_mngr.o(.text.REMNG_ExecRamp) for REMNG_ExecRamp
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.STO_PLL_M1) for STO_PLL_M1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to watch_data.o(.bss.watch_data) for watch_data
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.pMPM) for pMPM
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.pSTC) for pSTC
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.VirtualSpeedSensorM1) for VirtualSpeedSensorM1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.RevUpControlM1) for RevUpControlM1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.PIDSpeedHandle_M1) for PIDSpeedHandle_M1
    mc_tasks.o(.ARM.exidx.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_SetChargeBootCapDelayM1) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.TSK_SetChargeBootCapDelayM1) refers to mc_tasks.o(.text.TSK_SetChargeBootCapDelayM1) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_ChargeBootCapDelayHasElapsedM1) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.TSK_ChargeBootCapDelayHasElapsedM1) refers to mc_tasks.o(.text.TSK_ChargeBootCapDelayHasElapsedM1) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.FOC_InitAdditionalMethods) refers to mc_tasks.o(.text.FOC_InitAdditionalMethods) for [Anonymous Symbol]
    mc_tasks.o(.text.FOC_CalcCurrRef) refers to speed_torq_ctrl.o(.text.STC_CalcTorqueReference) for STC_CalcTorqueReference
    mc_tasks.o(.text.FOC_CalcCurrRef) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.FOC_CalcCurrRef) refers to mc_config.o(.data.pSTC) for pSTC
    mc_tasks.o(.ARM.exidx.text.FOC_CalcCurrRef) refers to mc_tasks.o(.text.FOC_CalcCurrRef) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_StopPermanencyTimeHasElapsedM1) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.TSK_StopPermanencyTimeHasElapsedM1) refers to mc_tasks.o(.text.TSK_StopPermanencyTimeHasElapsedM1) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to ramp_ext_mngr.o(.text.REMNG_RampCompleted) for REMNG_RampCompleted
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to ramp_ext_mngr.o(.text.REMNG_Calc) for REMNG_Calc
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for STC_GetSpeedSensor
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to speed_pos_fdbk.o(.text.SPD_GetElAngle) for SPD_GetElAngle
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to speed_pos_fdbk.o(.text.SPD_GetInstElSpeedDpp) for SPD_GetInstElSpeedDpp
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to pwm_curr_fdbk.o(.text.PWMC_GetPhaseCurrents) for PWMC_GetPhaseCurrents
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to regular_conversion_manager.o(.text.RCM_ExecNextConv) for RCM_ExecNextConv
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_math.o(.text.MCM_Clarke) for MCM_Clarke
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_math.o(.text.MCM_Park) for MCM_Park
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to pid_regulator.o(.text.PI_Controller) for PI_Controller
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to circle_limitation.o(.text.Circle_Limitation) for Circle_Limitation
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_math.o(.text.MCM_Rev_Park) for MCM_Rev_Park
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to regular_conversion_manager.o(.text.RCM_ReadOngoingConv) for RCM_ReadOngoingConv
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to pwm_curr_fdbk.o(.text.PWMC_SetPhaseVoltage) for PWMC_SetPhaseVoltage
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to fflti.o(.text) for __aeabi_i2f
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_interface.o(.text.MCI_FaultProcessing) for MCI_FaultProcessing
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to revup_ctrl.o(.text.RUC_FirstAccelerationStageReached) for RUC_FirstAccelerationStageReached
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_d) for VBS_GetAvBusVoltage_d
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcElAngle) for STO_PLL_CalcElAngle
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgElSpeedDpp) for STO_PLL_CalcAvrgElSpeedDpp
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to sto_pll_speed_pos_fdbk.o(.text.STO_ResetPLL) for STO_ResetPLL
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to virtual_speed_sensor.o(.text.VSS_CalcElAngle) for VSS_CalcElAngle
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mcpa.o(.text.MCPA_dataLog) for MCPA_dataLog
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.pSTC) for pSTC
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.pPIDIq) for pPIDIq
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.pPIDId) for pPIDId
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.CircleLimitationM1) for CircleLimitationM1
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to watch_data.o(.bss.watch_data) for watch_data
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.RevUpControlM1) for RevUpControlM1
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.BusVoltageSensor_M1) for BusVoltageSensor_M1
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.STO_PLL_M1) for STO_PLL_M1
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.VirtualSpeedSensorM1) for VirtualSpeedSensorM1
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mcpa.o(.bss.GLOBAL_TIMESTAMP) for GLOBAL_TIMESTAMP
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mcp_config.o(.data.MCPA_UART_A) for MCPA_UART_A
    mc_tasks.o(.ARM.exidx.text.TSK_HighFrequencyTask) refers to mc_tasks.o(.text.TSK_HighFrequencyTask) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to ntc_temperature_sensor.o(.text.NTC_CalcAvTemp) for NTC_CalcAvTemp
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to pwm_curr_fdbk.o(.text.PWMC_CheckOverCurrent) for PWMC_CheckOverCurrent
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus) for RVBS_CalcAvVbus
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_interface.o(.text.MCI_FaultProcessing) for MCI_FaultProcessing
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_interface.o(.text.MCI_GetFaultState) for MCI_GetFaultState
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM) for PWMC_SwitchOffPWM
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mcpa.o(.text.MCPA_flushDataLog) for MCPA_flushDataLog
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_tasks.o(.text.FOC_Clear) for FOC_Clear
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to pqd_motor_power_measurement.o(.text.PQD_Clear) for PQD_Clear
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_config.o(.data.pTemperatureSensor) for pTemperatureSensor
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_config.o(.data.BusVoltageSensor_M1) for BusVoltageSensor_M1
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mcp_config.o(.data.MCPA_UART_A) for MCPA_UART_A
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_config.o(.data.pMPM) for pMPM
    mc_tasks.o(.ARM.exidx.text.TSK_SafetyTask_PWMOFF) refers to mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) for [Anonymous Symbol]
    mc_tasks.o(.text.GetMCI) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.ARM.exidx.text.GetMCI) refers to mc_tasks.o(.text.GetMCI) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_HardwareFaultTask) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for R3_1_SwitchOffPWM
    mc_tasks.o(.text.TSK_HardwareFaultTask) refers to mc_interface.o(.text.MCI_FaultProcessing) for MCI_FaultProcessing
    mc_tasks.o(.text.TSK_HardwareFaultTask) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_HardwareFaultTask) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.ARM.exidx.text.TSK_HardwareFaultTask) refers to mc_tasks.o(.text.TSK_HardwareFaultTask) for [Anonymous Symbol]
    mc_tasks.o(.text.UI_HandleStartStopButton_cb) refers to mc_api.o(.text.MC_GetSTMStateMotor1) for MC_GetSTMStateMotor1
    mc_tasks.o(.text.UI_HandleStartStopButton_cb) refers to mc_api.o(.text.MC_StopMotor1) for MC_StopMotor1
    mc_tasks.o(.text.UI_HandleStartStopButton_cb) refers to mc_api.o(.text.MC_StartMotor1) for MC_StartMotor1
    mc_tasks.o(.ARM.exidx.text.UI_HandleStartStopButton_cb) refers to mc_tasks.o(.text.UI_HandleStartStopButton_cb) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.mc_lock_pins) refers to mc_tasks.o(.text.mc_lock_pins) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_Clear) refers to pwm_curr_fdbk.o(.text.PWMC_Clear) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetOffsetCalib) refers to pwm_curr_fdbk.o(.text.PWMC_SetOffsetCalib) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetOffsetCalib) refers to pwm_curr_fdbk.o(.text.PWMC_GetOffsetCalib) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetPhaseCurrents) refers to pwm_curr_fdbk.o(.text.PWMC_GetPhaseCurrents) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.text.PWMC_SetPhaseVoltage) refers to pwm_curr_fdbk.o(.bss.test_max) for test_max
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetPhaseVoltage) refers to pwm_curr_fdbk.o(.text.PWMC_SetPhaseVoltage) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SwitchOffPWM) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SwitchOnPWM) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOnPWM) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.text.PWMC_CurrentReadingCalibr) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM) for PWMC_SwitchOffPWM
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_CurrentReadingCalibr) refers to pwm_curr_fdbk.o(.text.PWMC_CurrentReadingCalibr) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.text.PWMC_CalcPhaseCurrentsEst) refers to mc_math.o(.text.MCM_Rev_Park) for MCM_Rev_Park
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_CalcPhaseCurrentsEst) refers to pwm_curr_fdbk.o(.text.PWMC_CalcPhaseCurrentsEst) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_TurnOnLowSides) refers to pwm_curr_fdbk.o(.text.PWMC_TurnOnLowSides) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_CheckOverCurrent) refers to pwm_curr_fdbk.o(.text.PWMC_CheckOverCurrent) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_OCPSetReferenceVoltage) refers to pwm_curr_fdbk.o(.text.PWMC_OCPSetReferenceVoltage) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetTurnOnLowSidesAction) refers to pwm_curr_fdbk.o(.text.PWMC_GetTurnOnLowSidesAction) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_DPWM_ModeEnable) refers to pwm_curr_fdbk.o(.text.PWMC_DPWM_ModeEnable) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_DPWM_ModeDisable) refers to pwm_curr_fdbk.o(.text.PWMC_DPWM_ModeDisable) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetDPWM_Mode) refers to pwm_curr_fdbk.o(.text.PWMC_GetDPWM_Mode) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeEnable) refers to pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeEnable) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeDisable) refers to pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeDisable) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeSetDuty) refers to pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeSetDuty) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetAlignFlag) refers to pwm_curr_fdbk.o(.text.PWMC_SetAlignFlag) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterGetPhaseCurrentsCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterGetPhaseCurrentsCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSwitchOffPwmCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterSwitchOffPwmCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSwitchonPwmCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterSwitchonPwmCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterReadingCalibrationCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterReadingCalibrationCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterTurnOnLowSidesCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterTurnOnLowSidesCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSampPointSectXCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterSampPointSectXCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterIsOverCurrentOccurredCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterIsOverCurrentOccurredCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterOCPSetRefVoltageCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterOCPSetRefVoltageCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeEnableCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeEnableCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeDisableCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeDisableCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeSetDutyCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeSetDutyCallBack) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_RegisterRegConv_WithCB) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_RegisterRegConv_WithCB) refers to regular_conversion_manager.o(.text.RCM_RegisterRegConv_WithCB) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_RegisterRegConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_RegisterRegConv) refers to regular_conversion_manager.o(.text.RCM_RegisterRegConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_ExecRegularConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_ExecRegularConv) refers to mc_config.o(.data.PWM_Handle_M1) for PWM_Handle_M1
    regular_conversion_manager.o(.ARM.exidx.text.RCM_ExecRegularConv) refers to regular_conversion_manager.o(.text.RCM_ExecRegularConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_RequestUserConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_RequestUserConv) refers to regular_conversion_manager.o(.text.RCM_RequestUserConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_GetUserConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_GetUserConv) refers to regular_conversion_manager.o(.text.RCM_GetUserConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_ExecUserConv) refers to regular_conversion_manager.o(.text.RCM_ExecRegularConv) for RCM_ExecRegularConv
    regular_conversion_manager.o(.text.RCM_ExecUserConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_ExecUserConv) refers to regular_conversion_manager.o(.text.RCM_ExecUserConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_GetUserConvState) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_GetUserConvState) refers to regular_conversion_manager.o(.text.RCM_GetUserConvState) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_PauseRegularConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_PauseRegularConv) refers to regular_conversion_manager.o(.text.RCM_PauseRegularConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_ExecNextConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_ExecNextConv) refers to regular_conversion_manager.o(.text.RCM_ExecNextConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_ReadOngoingConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_ReadOngoingConv) refers to regular_conversion_manager.o(.text.RCM_ReadOngoingConv) for [Anonymous Symbol]
    mc_math.o(.ARM.exidx.text.MCM_Clarke) refers to mc_math.o(.text.MCM_Clarke) for [Anonymous Symbol]
    mc_math.o(.text.MCM_Park) refers to mc_math.o(.text.MCM_Trig_Functions) for MCM_Trig_Functions
    mc_math.o(.ARM.exidx.text.MCM_Park) refers to mc_math.o(.text.MCM_Park) for [Anonymous Symbol]
    mc_math.o(.text.MCM_Trig_Functions) refers to mc_math.o(.rodata.hSin_Cos_Table) for hSin_Cos_Table
    mc_math.o(.ARM.exidx.text.MCM_Trig_Functions) refers to mc_math.o(.text.MCM_Trig_Functions) for [Anonymous Symbol]
    mc_math.o(.text.MCM_Rev_Park) refers to mc_math.o(.text.MCM_Trig_Functions) for MCM_Trig_Functions
    mc_math.o(.ARM.exidx.text.MCM_Rev_Park) refers to mc_math.o(.text.MCM_Rev_Park) for [Anonymous Symbol]
    mc_math.o(.text.MCM_Sqrt) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    mc_math.o(.ARM.exidx.text.MCM_Sqrt) refers to mc_math.o(.text.MCM_Sqrt) for [Anonymous Symbol]
    mc_math.o(.ARM.exidx.text.MCM_floatToIntBit) refers to mc_math.o(.text.MCM_floatToIntBit) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_Init) refers to mc_interface.o(.text.MCI_Init) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_ExecSpeedRamp) refers to mc_interface.o(.text.MCI_ExecSpeedRamp) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_ExecSpeedRamp_F) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    mc_interface.o(.text.MCI_ExecSpeedRamp_F) refers to fdiv.o(.text) for __aeabi_fdiv
    mc_interface.o(.text.MCI_ExecSpeedRamp_F) refers to ffixi.o(.text) for __aeabi_f2iz
    mc_interface.o(.text.MCI_ExecSpeedRamp_F) refers to mc_interface.o(.text.MCI_ExecSpeedRamp) for MCI_ExecSpeedRamp
    mc_interface.o(.ARM.exidx.text.MCI_ExecSpeedRamp_F) refers to mc_interface.o(.text.MCI_ExecSpeedRamp_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_ExecTorqueRamp) refers to mc_interface.o(.text.MCI_ExecTorqueRamp) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_ExecTorqueRamp_F) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    mc_interface.o(.text.MCI_ExecTorqueRamp_F) refers to ffixi.o(.text) for __aeabi_f2iz
    mc_interface.o(.text.MCI_ExecTorqueRamp_F) refers to mc_interface.o(.text.MCI_ExecTorqueRamp) for MCI_ExecTorqueRamp
    mc_interface.o(.ARM.exidx.text.MCI_ExecTorqueRamp_F) refers to mc_interface.o(.text.MCI_ExecTorqueRamp_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_SetCurrentReferences) refers to mc_interface.o(.text.MCI_SetCurrentReferences) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_SetCurrentReferences_F) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    mc_interface.o(.text.MCI_SetCurrentReferences_F) refers to ffixi.o(.text) for __aeabi_f2iz
    mc_interface.o(.text.MCI_SetCurrentReferences_F) refers to mc_interface.o(.text.MCI_SetCurrentReferences) for MCI_SetCurrentReferences
    mc_interface.o(.ARM.exidx.text.MCI_SetCurrentReferences_F) refers to mc_interface.o(.text.MCI_SetCurrentReferences_F) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_SetSpeedMode) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for STC_SetControlMode
    mc_interface.o(.ARM.exidx.text.MCI_SetSpeedMode) refers to mc_interface.o(.text.MCI_SetSpeedMode) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_SetOpenLoopCurrent) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for STC_SetControlMode
    mc_interface.o(.ARM.exidx.text.MCI_SetOpenLoopCurrent) refers to mc_interface.o(.text.MCI_SetOpenLoopCurrent) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_SetOpenLoopVoltage) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for STC_SetControlMode
    mc_interface.o(.ARM.exidx.text.MCI_SetOpenLoopVoltage) refers to mc_interface.o(.text.MCI_SetOpenLoopVoltage) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StartMotor) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_StartMotor) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_interface.o(.text.MCI_StartMotor) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.ARM.exidx.text.MCI_StartMotor) refers to mc_interface.o(.text.MCI_StartMotor) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetSTMState) refers to mc_interface.o(.text.MCI_GetSTMState) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetOccurredFaults) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetCurrentFaults) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StartWithMeasurementOffset) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_StartWithMeasurementOffset) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_interface.o(.text.MCI_StartWithMeasurementOffset) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.ARM.exidx.text.MCI_StartWithMeasurementOffset) refers to mc_interface.o(.text.MCI_StartWithMeasurementOffset) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StartOffsetMeasurments) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_StartOffsetMeasurments) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_interface.o(.text.MCI_StartOffsetMeasurments) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.ARM.exidx.text.MCI_StartOffsetMeasurments) refers to mc_interface.o(.text.MCI_StartOffsetMeasurments) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetCalibratedOffsetsMotor) refers to pwm_curr_fdbk.o(.text.PWMC_GetOffsetCalib) for PWMC_GetOffsetCalib
    mc_interface.o(.ARM.exidx.text.MCI_GetCalibratedOffsetsMotor) refers to mc_interface.o(.text.MCI_GetCalibratedOffsetsMotor) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) refers to pwm_curr_fdbk.o(.text.PWMC_SetOffsetCalib) for PWMC_SetOffsetCalib
    mc_interface.o(.ARM.exidx.text.MCI_SetCalibratedOffsetsMotor) refers to mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StopMotor) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_StopMotor) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_interface.o(.text.MCI_StopMotor) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.ARM.exidx.text.MCI_StopMotor) refers to mc_interface.o(.text.MCI_StopMotor) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_FaultAcknowledged) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_FaultAcknowledged) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.ARM.exidx.text.MCI_FaultAcknowledged) refers to mc_interface.o(.text.MCI_FaultAcknowledged) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_FaultProcessing) refers to mc_interface.o(.text.MCI_FaultProcessing) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_ExecBufferedCommands) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for STC_SetControlMode
    mc_interface.o(.text.MCI_ExecBufferedCommands) refers to speed_torq_ctrl.o(.text.STC_ExecRamp) for STC_ExecRamp
    mc_interface.o(.ARM.exidx.text.MCI_ExecBufferedCommands) refers to mc_interface.o(.text.MCI_ExecBufferedCommands) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_IsCommandAcknowledged) refers to mc_interface.o(.text.MCI_IsCommandAcknowledged) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetFaultState) refers to mc_interface.o(.text.MCI_GetFaultState) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetControlMode) refers to mc_interface.o(.text.MCI_GetControlMode) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetImposedMotorDirection) refers to mc_interface.o(.text.MCI_GetImposedMotorDirection) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalSpeed) refers to mc_interface.o(.text.MCI_GetLastRampFinalSpeed) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalTorque) refers to mc_interface.o(.text.MCI_GetLastRampFinalTorque) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalDuration) refers to mc_interface.o(.text.MCI_GetLastRampFinalDuration) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetLastRampFinalSpeed_F) refers to fflti.o(.text) for __aeabi_i2f
    mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalSpeed_F) refers to mc_interface.o(.text.MCI_GetLastRampFinalSpeed_F) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_RampCompleted) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_RampCompleted) refers to speed_torq_ctrl.o(.text.STC_RampCompleted) for STC_RampCompleted
    mc_interface.o(.ARM.exidx.text.MCI_RampCompleted) refers to mc_interface.o(.text.MCI_RampCompleted) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StopSpeedRamp) refers to speed_torq_ctrl.o(.text.STC_StopSpeedRamp) for STC_StopSpeedRamp
    mc_interface.o(.ARM.exidx.text.MCI_StopSpeedRamp) refers to mc_interface.o(.text.MCI_StopSpeedRamp) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StopRamp) refers to speed_torq_ctrl.o(.text.STC_StopRamp) for STC_StopRamp
    mc_interface.o(.ARM.exidx.text.MCI_StopRamp) refers to mc_interface.o(.text.MCI_StopRamp) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetSpdSensorReliability) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for STC_GetSpeedSensor
    mc_interface.o(.text.MCI_GetSpdSensorReliability) refers to speed_pos_fdbk.o(.text.SPD_Check) for SPD_Check
    mc_interface.o(.ARM.exidx.text.MCI_GetSpdSensorReliability) refers to mc_interface.o(.text.MCI_GetSpdSensorReliability) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for STC_GetSpeedSensor
    mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    mc_interface.o(.ARM.exidx.text.MCI_GetAvrgMecSpeedUnit) refers to mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetAvrgMecSpeed_F) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for STC_GetSpeedSensor
    mc_interface.o(.text.MCI_GetAvrgMecSpeed_F) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    mc_interface.o(.text.MCI_GetAvrgMecSpeed_F) refers to fflti.o(.text) for __aeabi_i2f
    mc_interface.o(.ARM.exidx.text.MCI_GetAvrgMecSpeed_F) refers to mc_interface.o(.text.MCI_GetAvrgMecSpeed_F) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetMecSpeedRefUnit) refers to speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnit) for STC_GetMecSpeedRefUnit
    mc_interface.o(.ARM.exidx.text.MCI_GetMecSpeedRefUnit) refers to mc_interface.o(.text.MCI_GetMecSpeedRefUnit) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetMecSpeedRef_F) refers to speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnit) for STC_GetMecSpeedRefUnit
    mc_interface.o(.text.MCI_GetMecSpeedRef_F) refers to fflti.o(.text) for __aeabi_i2f
    mc_interface.o(.ARM.exidx.text.MCI_GetMecSpeedRef_F) refers to mc_interface.o(.text.MCI_GetMecSpeedRef_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIab) refers to mc_interface.o(.text.MCI_GetIab) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetIab_F) refers to dflti.o(.text) for __aeabi_i2d
    mc_interface.o(.text.MCI_GetIab_F) refers to dmul.o(.text) for __aeabi_dmul
    mc_interface.o(.text.MCI_GetIab_F) refers to d2f.o(.text) for __aeabi_d2f
    mc_interface.o(.ARM.exidx.text.MCI_GetIab_F) refers to mc_interface.o(.text.MCI_GetIab_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIalphabeta) refers to mc_interface.o(.text.MCI_GetIalphabeta) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIqd) refers to mc_interface.o(.text.MCI_GetIqd) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetIqd_F) refers to dflti.o(.text) for __aeabi_i2d
    mc_interface.o(.text.MCI_GetIqd_F) refers to dmul.o(.text) for __aeabi_dmul
    mc_interface.o(.text.MCI_GetIqd_F) refers to d2f.o(.text) for __aeabi_d2f
    mc_interface.o(.ARM.exidx.text.MCI_GetIqd_F) refers to mc_interface.o(.text.MCI_GetIqd_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIqdHF) refers to mc_interface.o(.text.MCI_GetIqdHF) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIqdref) refers to mc_interface.o(.text.MCI_GetIqdref) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetIqdref_F) refers to dflti.o(.text) for __aeabi_i2d
    mc_interface.o(.text.MCI_GetIqdref_F) refers to dmul.o(.text) for __aeabi_dmul
    mc_interface.o(.text.MCI_GetIqdref_F) refers to d2f.o(.text) for __aeabi_d2f
    mc_interface.o(.ARM.exidx.text.MCI_GetIqdref_F) refers to mc_interface.o(.text.MCI_GetIqdref_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetVqd) refers to mc_interface.o(.text.MCI_GetVqd) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetValphabeta) refers to mc_interface.o(.text.MCI_GetValphabeta) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetElAngledpp) refers to mc_interface.o(.text.MCI_GetElAngledpp) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetTeref) refers to mc_interface.o(.text.MCI_GetTeref) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetTeref_F) refers to dflti.o(.text) for __aeabi_i2d
    mc_interface.o(.text.MCI_GetTeref_F) refers to dmul.o(.text) for __aeabi_dmul
    mc_interface.o(.text.MCI_GetTeref_F) refers to d2f.o(.text) for __aeabi_d2f
    mc_interface.o(.ARM.exidx.text.MCI_GetTeref_F) refers to mc_interface.o(.text.MCI_GetTeref_F) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetPhaseCurrentAmplitude) refers to mc_math.o(.text.MCM_Sqrt) for MCM_Sqrt
    mc_interface.o(.ARM.exidx.text.MCI_GetPhaseCurrentAmplitude) refers to mc_interface.o(.text.MCI_GetPhaseCurrentAmplitude) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetPhaseVoltageAmplitude) refers to mc_math.o(.text.MCM_Sqrt) for MCM_Sqrt
    mc_interface.o(.ARM.exidx.text.MCI_GetPhaseVoltageAmplitude) refers to mc_interface.o(.text.MCI_GetPhaseVoltageAmplitude) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_Clear_Iqdref) refers to speed_torq_ctrl.o(.text.STC_GetDefaultIqdref) for STC_GetDefaultIqdref
    mc_interface.o(.ARM.exidx.text.MCI_Clear_Iqdref) refers to mc_interface.o(.text.MCI_Clear_Iqdref) for [Anonymous Symbol]
    stm32g0xx_mc_it.o(.text.DMA1_Channel1_IRQHandler) refers to mc_tasks.o(.text.TSK_HighFrequencyTask) for TSK_HighFrequencyTask
    stm32g0xx_mc_it.o(.ARM.exidx.text.DMA1_Channel1_IRQHandler) refers to stm32g0xx_mc_it.o(.text.DMA1_Channel1_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TIMx_UP_IRQHandler) for R3_1_TIMx_UP_IRQHandler
    stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_OVERCURRENT_IRQHandler) for R3_1_OVERCURRENT_IRQHandler
    stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_OVERVOLTAGE_IRQHandler) for R3_1_OVERVOLTAGE_IRQHandler
    stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to mc_config.o(.data.PWM_Handle_M1) for PWM_Handle_M1
    stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to stm32g0xx_mc_it.o(.bss.test_time) for test_time
    stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to app_error.o(.bss..L_MergedGlobals) for IPM_ErrFlag
    stm32g0xx_mc_it.o(.ARM.exidx.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_mc_it.o(.text.DMA1_Channel2_3_IRQHandler) refers to aspep.o(.text.ASPEP_HWDataReceivedIT) for ASPEP_HWDataReceivedIT
    stm32g0xx_mc_it.o(.text.DMA1_Channel2_3_IRQHandler) refers to mcp_config.o(.data.aspepOverUartA) for aspepOverUartA
    stm32g0xx_mc_it.o(.ARM.exidx.text.DMA1_Channel2_3_IRQHandler) refers to stm32g0xx_mc_it.o(.text.DMA1_Channel2_3_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_mc_it.o(.text.USART2_IRQHandler) refers to aspep.o(.text.ASPEP_HWDataTransmittedIT) for ASPEP_HWDataTransmittedIT
    stm32g0xx_mc_it.o(.text.USART2_IRQHandler) refers to aspep.o(.text.ASPEP_HWDMAReset) for ASPEP_HWDMAReset
    stm32g0xx_mc_it.o(.text.USART2_IRQHandler) refers to mcp_config.o(.data.aspepOverUartA) for aspepOverUartA
    stm32g0xx_mc_it.o(.text.USART2_IRQHandler) refers to main.o(.bss.mrx_data) for mrx_data
    stm32g0xx_mc_it.o(.ARM.exidx.text.USART2_IRQHandler) refers to stm32g0xx_mc_it.o(.text.USART2_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_mc_it.o(.text.HardFault_Handler) refers to mc_tasks.o(.text.TSK_HardwareFaultTask) for TSK_HardwareFaultTask
    stm32g0xx_mc_it.o(.ARM.exidx.text.HardFault_Handler) refers to stm32g0xx_mc_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    stm32g0xx_mc_it.o(.text.SysTick_Handler) refers to stm32g0xx_hal.o(.text.HAL_IncTick) for HAL_IncTick
    stm32g0xx_mc_it.o(.text.SysTick_Handler) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for HAL_SYSTICK_IRQHandler
    stm32g0xx_mc_it.o(.text.SysTick_Handler) refers to mc_tasks.o(.text.MC_RunMotorControlTasks) for MC_RunMotorControlTasks
    stm32g0xx_mc_it.o(.text.SysTick_Handler) refers to stm32g0xx_mc_it.o(.data.SysTick_Handler.SystickDividerCounter) for [Anonymous Symbol]
    stm32g0xx_mc_it.o(.text.SysTick_Handler) refers to stm32g0xx_mc_it.o(.bss.User_Logic_Handle_Counter) for User_Logic_Handle_Counter
    stm32g0xx_mc_it.o(.ARM.exidx.text.SysTick_Handler) refers to stm32g0xx_mc_it.o(.text.SysTick_Handler) for [Anonymous Symbol]
    stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler) refers to mc_tasks.o(.text.UI_HandleStartStopButton_cb) for UI_HandleStartStopButton_cb
    stm32g0xx_mc_it.o(.ARM.exidx.text.EXTI4_15_IRQHandler) refers to stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler) for [Anonymous Symbol]
    mc_parameters.o(.rodata.R3_1_Params) refers to mc_config.o(.data.PWM_Handle_M1) for PWM_Handle_M1
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_interface.o(.text.MCI_GetTeref) for MCI_GetTeref
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_interface.o(.text.MCI_ExecTorqueRamp) for MCI_ExecTorqueRamp
    register_interface.o(.text.RI_SetRegCommandParser) refers to pid_regulator.o(.text.PID_SetKD) for PID_SetKD
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_interface.o(.text.MCI_ExecSpeedRamp) for MCI_ExecSpeedRamp
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_config.o(.bss.Mci) for Mci
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_config.o(.data.PIDSpeedHandle_M1) for PIDSpeedHandle_M1
    register_interface.o(.text.RI_SetRegCommandParser) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_interface.o(.text.MCI_GetMecSpeedRefUnit) for MCI_GetMecSpeedRefUnit
    register_interface.o(.text.RI_SetRegCommandParser) refers to pid_regulator.o(.text.PID_SetKDDivisorPOW2) for PID_SetKDDivisorPOW2
    register_interface.o(.text.RI_SetRegCommandParser) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObserverGains) for STO_PLL_GetObserverGains
    register_interface.o(.text.RI_SetRegCommandParser) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_SetObserverGains) for STO_PLL_SetObserverGains
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_interface.o(.text.MCI_GetIqdref) for MCI_GetIqdref
    register_interface.o(.text.RI_SetRegCommandParser) refers to revup_ctrl.o(.text.RUC_SetPhase) for RUC_SetPhase
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_interface.o(.text.MCI_SetCurrentReferences) for MCI_SetCurrentReferences
    register_interface.o(.text.RI_SetRegCommandParser) refers to mcpa.o(.text.MCPA_cfgLog) for MCPA_cfgLog
    register_interface.o(.text.RI_SetRegCommandParser) refers to pid_regulator.o(.text.PID_SetKP) for PID_SetKP
    register_interface.o(.text.RI_SetRegCommandParser) refers to pid_regulator.o(.text.PID_SetKI) for PID_SetKI
    register_interface.o(.text.RI_SetRegCommandParser) refers to pid_regulator.o(.text.PID_SetKIDivisorPOW2) for PID_SetKIDivisorPOW2
    register_interface.o(.text.RI_SetRegCommandParser) refers to pid_regulator.o(.text.PID_SetKPDivisorPOW2) for PID_SetKPDivisorPOW2
    register_interface.o(.text.RI_SetRegCommandParser) refers to mcp_config.o(.data.MCPA_UART_A) for MCPA_UART_A
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_config.o(.data.RevUpControlM1) for RevUpControlM1
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_config.o(.data.STO_PLL_M1) for STO_PLL_M1
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_config.o(.data.pPIDIq) for pPIDIq
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_config.o(.data.pPIDId) for pPIDId
    register_interface.o(.ARM.exidx.text.RI_SetRegCommandParser) refers to register_interface.o(.text.RI_SetRegCommandParser) for [Anonymous Symbol]
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetIab) for MCI_GetIab
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetMecSpeedRefUnit) for MCI_GetMecSpeedRefUnit
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.bss.Mci) for Mci
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.data.PIDSpeedHandle_M1) for PIDSpeedHandle_M1
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_configuration_registers.o(.rodata.FIRMWARE_NAME) for FIRMWARE_NAME
    register_interface.o(.text.RI_GetRegCommandParser) refers to pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW) for PQD_GetAvrgElMotorPowerW
    register_interface.o(.text.RI_GetRegCommandParser) refers to revup_ctrl.o(.text.RUC_GetNumberOfPhases) for RUC_GetNumberOfPhases
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetControlMode) for MCI_GetControlMode
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetFaultState) for MCI_GetFaultState
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit) for MCI_GetAvrgMecSpeedUnit
    register_interface.o(.text.RI_GetRegCommandParser) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedBemfLevel) for STO_PLL_GetEstimatedBemfLevel
    register_interface.o(.text.RI_GetRegCommandParser) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObservedBemfLevel) for STO_PLL_GetObservedBemfLevel
    register_interface.o(.text.RI_GetRegCommandParser) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetLastRampFinalSpeed) for MCI_GetLastRampFinalSpeed
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetLastRampFinalDuration) for MCI_GetLastRampFinalDuration
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetLastRampFinalTorque) for MCI_GetLastRampFinalTorque
    register_interface.o(.text.RI_GetRegCommandParser) refers to revup_ctrl.o(.text.RUC_GetPhase) for RUC_GetPhase
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetIqdref) for MCI_GetIqdref
    register_interface.o(.text.RI_GetRegCommandParser) refers to pid_regulator.o(.text.PID_GetKD) for PID_GetKD
    register_interface.o(.text.RI_GetRegCommandParser) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObserverGains) for STO_PLL_GetObserverGains
    register_interface.o(.text.RI_GetRegCommandParser) refers to pid_regulator.o(.text.PID_GetKI) for PID_GetKI
    register_interface.o(.text.RI_GetRegCommandParser) refers to pid_regulator.o(.text.PID_GetKP) for PID_GetKP
    register_interface.o(.text.RI_GetRegCommandParser) refers to bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_V) for VBS_GetAvBusVoltage_V
    register_interface.o(.text.RI_GetRegCommandParser) refers to ntc_temperature_sensor.o(.text.NTC_GetAvTemp_C) for NTC_GetAvTemp_C
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetIalphabeta) for MCI_GetIalphabeta
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_configuration_registers.o(.rodata.globalConfig_reg) for globalConfig_reg
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.data.pMPM) for pMPM
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.data.RevUpControlM1) for RevUpControlM1
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_configuration_registers.o(.rodata.CTL_BOARD) for CTL_BOARD
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetIqd) for MCI_GetIqd
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetVqd) for MCI_GetVqd
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_configuration_registers.o(.data.PWR_BOARD_NAME) for PWR_BOARD_NAME
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetValphabeta) for MCI_GetValphabeta
    register_interface.o(.text.RI_GetRegCommandParser) refers to speed_pos_fdbk.o(.text.SPD_GetElAngle) for SPD_GetElAngle
    register_interface.o(.text.RI_GetRegCommandParser) refers to speed_pos_fdbk.o(.text.SPD_GetS16Speed) for SPD_GetS16Speed
    register_interface.o(.text.RI_GetRegCommandParser) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedCurrent) for STO_PLL_GetEstimatedCurrent
    register_interface.o(.text.RI_GetRegCommandParser) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedBemf) for STO_PLL_GetEstimatedBemf
    register_interface.o(.text.RI_GetRegCommandParser) refers to pid_regulator.o(.text.PID_GetKDDivisorPOW2) for PID_GetKDDivisorPOW2
    register_interface.o(.text.RI_GetRegCommandParser) refers to pid_regulator.o(.text.PID_GetKIDivisorPOW2) for PID_GetKIDivisorPOW2
    register_interface.o(.text.RI_GetRegCommandParser) refers to pid_regulator.o(.text.PID_GetKPDivisorPOW2) for PID_GetKPDivisorPOW2
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_configuration_registers.o(.data.MotorConfig_reg) for MotorConfig_reg
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_configuration_registers.o(.data.FOCConfig_reg) for FOCConfig_reg
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_configuration_registers.o(.data.ApplicationConfig_reg) for ApplicationConfig_reg
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.data.STO_PLL_M1) for STO_PLL_M1
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.data.pPIDIq) for pPIDIq
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.data.pPIDId) for pPIDId
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.data.pTemperatureSensor) for pTemperatureSensor
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.data.BusVoltageSensor_M1) for BusVoltageSensor_M1
    register_interface.o(.ARM.exidx.text.RI_GetRegCommandParser) refers to register_interface.o(.text.RI_GetRegCommandParser) for [Anonymous Symbol]
    register_interface.o(.ARM.exidx.text.RI_GetIDSize) refers to register_interface.o(.text.RI_GetIDSize) for [Anonymous Symbol]
    register_interface.o(.text.RI_GetPtrReg) refers to register_interface.o(.bss.RI_GetPtrReg.nullData16) for [Anonymous Symbol]
    register_interface.o(.text.RI_GetPtrReg) refers to mc_config.o(.data.STO_PLL_M1) for STO_PLL_M1
    register_interface.o(.text.RI_GetPtrReg) refers to mc_config.o(.bss.Mci) for Mci
    register_interface.o(.ARM.exidx.text.RI_GetPtrReg) refers to register_interface.o(.text.RI_GetPtrReg) for [Anonymous Symbol]
    usart_aspep_driver.o(.text.UASPEP_INIT) refers to usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_INIT) refers to usart_aspep_driver.o(.text.UASPEP_INIT) for [Anonymous Symbol]
    usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_TX) refers to usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_DAMCONFIG_TX) refers to usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_TX) for [Anonymous Symbol]
    usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_RX) refers to usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_DAMCONFIG_RX) refers to usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_RX) for [Anonymous Symbol]
    usart_aspep_driver.o(.text.UASPEP_SEND_PACKET) refers to usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_SEND_PACKET) refers to usart_aspep_driver.o(.text.UASPEP_SEND_PACKET) for [Anonymous Symbol]
    usart_aspep_driver.o(.text.UASPEP_RECEIVE_BUFFER) refers to usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_RECEIVE_BUFFER) refers to usart_aspep_driver.o(.text.UASPEP_RECEIVE_BUFFER) for [Anonymous Symbol]
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_IDLE_ENABLE) refers to usart_aspep_driver.o(.text.UASPEP_IDLE_ENABLE) for [Anonymous Symbol]
    mc_configuration_registers.o(.data.PWR_BOARD_NAME) refers to mc_configuration_registers.o(.rodata.M1_PWR_BOARD) for [Anonymous Symbol]
    mc_configuration_registers.o(.data.FOCConfig_reg) refers to mc_configuration_registers.o(.rodata.M1_FOCConfig_reg) for [Anonymous Symbol]
    mc_configuration_registers.o(.data.MotorConfig_reg) refers to mc_configuration_registers.o(.rodata.M1_MotorConfig_reg) for M1_MotorConfig_reg
    mc_configuration_registers.o(.data.ApplicationConfig_reg) refers to mc_configuration_registers.o(.rodata.M1_ApplicationConfig_reg) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_start) refers to aspep.o(.text.ASPEP_start) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_sendBeacon) refers to aspep.o(.rodata.CRC4_Lookup8) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_sendBeacon) refers to aspep.o(.rodata.cst16) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_sendBeacon) refers to aspep.o(.text.ASPEP_sendBeacon) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_TXframeProcess) refers to aspep.o(.rodata.CRC4_Lookup8) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_TXframeProcess) refers to aspep.o(.rodata.cst16) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_TXframeProcess) refers to aspep.o(.text.ASPEP_TXframeProcess) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_sendPing) refers to aspep.o(.rodata.CRC4_Lookup8) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_sendPing) refers to aspep.o(.rodata.cst16) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_sendPing) refers to aspep.o(.text.ASPEP_sendPing) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_getBuffer) refers to aspep.o(.text.ASPEP_getBuffer) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_CheckBeacon) refers to aspep.o(.text.ASPEP_CheckBeacon) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_sendPacket) refers to aspep.o(.text.ASPEP_TXframeProcess) for ASPEP_TXframeProcess
    aspep.o(.ARM.exidx.text.ASPEP_sendPacket) refers to aspep.o(.text.ASPEP_sendPacket) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_HWDataTransmittedIT) refers to aspep.o(.text.ASPEP_HWDataTransmittedIT) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_RXframeProcess) refers to aspep.o(.rodata.CRC4_Lookup8) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_RXframeProcess) refers to aspep.o(.rodata.cst16) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_RXframeProcess) refers to aspep.o(.text.ASPEP_RXframeProcess) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_HWDataReceivedIT) refers to aspep.o(.rodata.CRC4_Lookup8) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_HWDataReceivedIT) refers to aspep.o(.text.ASPEP_HWDataReceivedIT) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_HWDMAReset) refers to aspep.o(.text.ASPEP_HWDMAReset) for [Anonymous Symbol]
    mc_app_hooks.o(.ARM.exidx.text.MC_APP_BootHook) refers to mc_app_hooks.o(.text.MC_APP_BootHook) for [Anonymous Symbol]
    mc_app_hooks.o(.ARM.exidx.text.MC_APP_PostMediumFrequencyHook_M1) refers to mc_app_hooks.o(.text.MC_APP_PostMediumFrequencyHook_M1) for [Anonymous Symbol]
    stm32g0xx_it.o(.ARM.exidx.text.NMI_Handler) refers to stm32g0xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    stm32g0xx_it.o(.ARM.exidx.text.SVC_Handler) refers to stm32g0xx_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    stm32g0xx_it.o(.ARM.exidx.text.PendSV_Handler) refers to stm32g0xx_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    stm32g0xx_it.o(.text.TIM14_IRQHandler) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for HAL_TIM_IRQHandler
    stm32g0xx_it.o(.text.TIM14_IRQHandler) refers to main.o(.bss..L_MergedGlobals) for htim14
    stm32g0xx_it.o(.ARM.exidx.text.TIM14_IRQHandler) refers to stm32g0xx_it.o(.text.TIM14_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit) refers to stm32g0xx_hal_msp.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspInit) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspInit) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    stm32g0xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_Base_MspInit) refers to stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspDeInit) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for HAL_NVIC_DisableIRQ
    stm32g0xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit) refers to stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspDeInit) for [Anonymous Symbol]
    user_logic.o(.text.UART_Emulator_Debug) refers to dflti.o(.text) for __aeabi_i2d
    user_logic.o(.text.UART_Emulator_Debug) refers to ddiv.o(.text) for __aeabi_ddiv
    user_logic.o(.text.UART_Emulator_Debug) refers to dfixi.o(.text) for __aeabi_d2iz
    user_logic.o(.text.UART_Emulator_Debug) refers to mc_api.o(.text.MC_GetMecSpeedReferenceMotor1) for MC_GetMecSpeedReferenceMotor1
    user_logic.o(.text.UART_Emulator_Debug) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    user_logic.o(.text.UART_Emulator_Debug) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for MC_ProgramSpeedRampMotor1
    user_logic.o(.text.UART_Emulator_Debug) refers to user_logic.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    user_logic.o(.text.UART_Emulator_Debug) refers to user_logic.o(.data.Acc_M1) for Acc_M1
    user_logic.o(.ARM.exidx.text.UART_Emulator_Debug) refers to user_logic.o(.text.UART_Emulator_Debug) for [Anonymous Symbol]
    user_logic.o(.text.User_Motor_Control_M1) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    user_logic.o(.text.User_Motor_Control_M1) refers to mc_interface.o(.text.MCI_GetLastRampFinalSpeed) for MCI_GetLastRampFinalSpeed
    user_logic.o(.text.User_Motor_Control_M1) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    user_logic.o(.text.User_Motor_Control_M1) refers to mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit) for MCI_GetAvrgMecSpeedUnit
    user_logic.o(.text.User_Motor_Control_M1) refers to mc_api.o(.text.MC_StartMotor1) for MC_StartMotor1
    user_logic.o(.text.User_Motor_Control_M1) refers to mc_api.o(.text.MC_AcknowledgeFaultMotor1) for MC_AcknowledgeFaultMotor1
    user_logic.o(.text.User_Motor_Control_M1) refers to mc_api.o(.text.MC_StopMotor1) for MC_StopMotor1
    user_logic.o(.text.User_Motor_Control_M1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    user_logic.o(.text.User_Motor_Control_M1) refers to user_logic.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    user_logic.o(.ARM.exidx.text.User_Motor_Control_M1) refers to user_logic.o(.text.User_Motor_Control_M1) for [Anonymous Symbol]
    user_logic.o(.text.UI_Process) refers to dflti.o(.text) for __aeabi_i2d
    user_logic.o(.text.UI_Process) refers to ddiv.o(.text) for __aeabi_ddiv
    user_logic.o(.text.UI_Process) refers to dfixi.o(.text) for __aeabi_d2iz
    user_logic.o(.text.UI_Process) refers to mc_api.o(.text.MC_GetMecSpeedReferenceMotor1) for MC_GetMecSpeedReferenceMotor1
    user_logic.o(.text.UI_Process) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    user_logic.o(.text.UI_Process) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for MC_ProgramSpeedRampMotor1
    user_logic.o(.text.UI_Process) refers to user_logic.o(.text.User_Motor_Control_M1) for User_Motor_Control_M1
    user_logic.o(.text.UI_Process) refers to user_logic.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    user_logic.o(.text.UI_Process) refers to user_logic.o(.data.Acc_M1) for Acc_M1
    user_logic.o(.ARM.exidx.text.UI_Process) refers to user_logic.o(.text.UI_Process) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.LL_Init1msTick) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick) refers to stm32g0xx_ll_utils.o(.text.LL_Init1msTick) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_mDelay) refers to stm32g0xx_ll_utils.o(.text.LL_mDelay) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock) refers to stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32g0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency) refers to stm32g0xx_ll_utils.o(.text.LL_SetFlashLatency) for [Anonymous Symbol]
    stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DeInit) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_Init) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_Init) for [Anonymous Symbol]
    stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_StructInit) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_DeInit) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_Init) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init) for [Anonymous Symbol]
    stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_StructInit) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonDeInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_CommonDeInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_CommonInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonStructInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_CommonStructInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_DeInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_Init) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_Init) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_StructInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_Init) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_StructInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_REG_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_DeInit) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_Init) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_Init) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.text.LL_DMA_StructInit) refers to rt_memclr.o(.text) for __aeabi_memclr4
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_StructInit) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to system_stm32g0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to system_stm32g0xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to system_stm32g0xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to system_stm32g0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to system_stm32g0xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to system_stm32g0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2SClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRTCClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetRTCClockFreq) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for uwTickPrio
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for uwTickPrio
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32g0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for uwTickPrio
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32g0xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableLSECSS) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_EnableLSECSS) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableLSECSS) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_DisableLSECSS) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_LSECSSCallback) for HAL_RCC_LSECSSCallback
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_LSECSSCallback) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_LSECSSCallback) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetResetSource) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetResetSource) for [Anonymous Symbol]
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for HAL_PWR_EnableBkUpAccess
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for HAL_PWR_DisableBkUpAccess
    stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSCO) refers to stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) for [Anonymous Symbol]
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for HAL_PWR_EnableBkUpAccess
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for HAL_PWR_DisableBkUpAccess
    stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableLSCO) refers to stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32g0xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_Program) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32g0xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32g0xx_hal_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation) refers to stm32g0xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32g0xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program_IT) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_Program_IT) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback) for HAL_FLASH_OperationErrorCallback
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32g0xx_hal_flash_ex.o(.text.FLASH_PageErase) for FLASH_PageErase
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback) for HAL_FLASH_EndOfOperationCallback
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32g0xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_IRQHandler) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OperationErrorCallback) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_EndOfOperationCallback) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Unlock) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_Unlock) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Lock) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_Lock) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Unlock) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_OB_Unlock) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Lock) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_OB_Lock) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Launch) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_OB_Launch) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_GetError) refers to stm32g0xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_GetError) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_GetError) for [Anonymous Symbol]
    stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32g0xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32g0xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase) refers to stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) for [Anonymous Symbol]
    stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_PageErase) refers to stm32g0xx_hal_flash_ex.o(.text.FLASH_PageErase) for [Anonymous Symbol]
    stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32g0xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32g0xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase_IT) refers to stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) for [Anonymous Symbol]
    stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32g0xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32g0xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBProgram) refers to stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) for [Anonymous Symbol]
    stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBGetConfig) refers to stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) for [Anonymous Symbol]
    stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_FlashEmptyCheck) refers to stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_FlashEmptyCheck) for [Anonymous Symbol]
    stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_ForceFlashEmpty) refers to stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_ForceFlashEmpty) for [Anonymous Symbol]
    stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_FlushCaches) refers to stm32g0xx_hal_flash_ex.o(.text.FLASH_FlushCaches) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Rising_Callback) for HAL_GPIO_EXTI_Rising_Callback
    stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Falling_Callback) for HAL_GPIO_EXTI_Falling_Callback
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Rising_Callback) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Rising_Callback) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Falling_Callback) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Falling_Callback) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.text.HAL_DMA_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Init) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.text.HAL_DMA_DeInit) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_RegisterCallback) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_GetState) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_GetError) for [Anonymous Symbol]
    stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ConfigMuxSync) refers to stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxSync) for [Anonymous Symbol]
    stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ConfigMuxRequestGenerator) refers to stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxRequestGenerator) for [Anonymous Symbol]
    stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_EnableMuxRequestGenerator) refers to stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_EnableMuxRequestGenerator) for [Anonymous Symbol]
    stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_DisableMuxRequestGenerator) refers to stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_DisableMuxRequestGenerator) for [Anonymous Symbol]
    stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MUX_IRQHandler) refers to stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_MUX_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowPowerRunMode) for HAL_PWREx_EnableLowPowerRunMode
    stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode) for HAL_PWREx_DisableLowPowerRunMode
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBatteryCharging) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBatteryCharging) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBatteryCharging) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBatteryCharging) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableInternalWakeUpLine) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableInternalWakeUpLine) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableInternalWakeUpLine) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableInternalWakeUpLine) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullUp) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableGPIOPullUp) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullUp) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableGPIOPullUp) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullDown) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableGPIOPullDown) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullDown) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableGPIOPullDown) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePullUpPullDownConfig) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePullUpPullDownConfig) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePullUpPullDownConfig) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePullUpPullDownConfig) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowPowerRunMode) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowPowerRunMode) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowPowerRunMode) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32g0xx_hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32g0xx_hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32g0xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_Init) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32g0xx_hal.o(.text.HAL_Init) refers to stm32g0xx_hal_msp.o(.text.HAL_MspInit) for HAL_MspInit
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_Init) refers to stm32g0xx_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_InitTick) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal.o(.text.HAL_InitTick) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32g0xx_hal.o(.text.HAL_InitTick) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32g0xx_hal.o(.text.HAL_InitTick) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_InitTick) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_InitTick) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_MspInit) refers to stm32g0xx_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_DeInit) refers to stm32g0xx_hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_DeInit) refers to stm32g0xx_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32g0xx_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_IncTick) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_IncTick) refers to stm32g0xx_hal.o(.bss.uwTick) for uwTick
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_IncTick) refers to stm32g0xx_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_GetTick) refers to stm32g0xx_hal.o(.bss.uwTick) for uwTick
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTick) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_GetTickPrio) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32g0xx_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_SetTickFreq) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32g0xx_hal.o(.text.HAL_SetTickFreq) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32g0xx_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_GetTickFreq) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32g0xx_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_Delay) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal.o(.text.HAL_Delay) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_Delay) refers to stm32g0xx_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32g0xx_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32g0xx_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32g0xx_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32g0xx_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32g0xx_hal.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32g0xx_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32g0xx_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32g0xx_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32g0xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32g0xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32g0xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32g0xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableRemap) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableRemap) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableRemap) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableRemap) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableClampingDiode) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableClampingDiode) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableClampingDiode) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableClampingDiode) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_SetConfigLine) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_SetConfigLine) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetConfigLine) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetConfigLine) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearConfigLine) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_ClearConfigLine) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_RegisterCallback) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_RegisterCallback) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetHandle) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetHandle) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_IRQHandler) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetPending) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetPending) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearPending) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_ClearPending) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GenerateSWI) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_GenerateSWI) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init) refers to stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspInit) for HAL_TIM_Base_MspInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_Base_SetConfig) refers to stm32g0xx_hal_tim.o(.text.TIM_Base_SetConfig) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) refers to stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspDeInit) for HAL_TIM_Base_MspDeInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for HAL_TIM_PeriodElapsedHalfCpltCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMAError) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for HAL_TIM_OC_MspInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Init) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for HAL_TIM_OC_MspDeInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_CCxChannelCmd) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) refers to stm32g0xx_hal_tim.o(.rodata.cst16) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) refers to stm32g0xx_hal_tim.o(.rodata.cst16) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for HAL_TIM_PWM_PulseFinishedHalfCpltCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit) for HAL_TIM_PWM_MspInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Init) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit) for HAL_TIM_PWM_MspDeInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) refers to stm32g0xx_hal_tim.o(.rodata.cst16) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) refers to stm32g0xx_hal_tim.o(.rodata.cst16) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for HAL_TIM_IC_MspInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Init) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for HAL_TIM_IC_MspDeInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) refers to stm32g0xx_hal_tim.o(.rodata.cst16) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) refers to stm32g0xx_hal_tim.o(.rodata.cst16) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMACaptureCplt) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for HAL_TIM_IC_CaptureHalfCpltCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for HAL_TIM_OnePulse_MspInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for HAL_TIM_OnePulse_MspDeInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for HAL_TIM_Encoder_MspInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for HAL_TIM_Encoder_MspDeInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for HAL_TIM_OC_DelayElapsedCallback
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback) for HAL_TIMEx_BreakCallback
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback) for HAL_TIMEx_Break2Callback
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_OC2_SetConfig) refers to stm32g0xx_hal_tim.o(.text.TIM_OC2_SetConfig) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_SetConfig) refers to stm32g0xx_hal_tim.o(.text.TIM_TI1_SetConfig) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for HAL_TIM_DMABurst_MultiWriteStart
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMATriggerCplt) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt) refers to stm32g0xx_hal_tim.o(.text.TIM_DMATriggerCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for HAL_TIM_TriggerHalfCpltCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt) refers to stm32g0xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) for HAL_TIM_DMABurst_MultiReadStart
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_GenerateEvent) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_ETR_SetConfig) refers to stm32g0xx_hal_tim.o(.text.TIM_ETR_SetConfig) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) refers to stm32g0xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig) refers to stm32g0xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32g0xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_GetState) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_GetState) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_GetState) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_GetState) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_GetActiveChannel) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetChannelState) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_GetChannelState) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurstState) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurstState) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit) for HAL_TIMEx_HallSensor_MspInit
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32g0xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32g0xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32g0xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for HAL_TIMEx_HallSensor_MspDeInit
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for TIM_DMADelayPulseNCplt
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for TIM_DMAErrorCCxN
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMADelayPulseNCplt) refers to stm32g0xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMAErrorCCxN) refers to stm32g0xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for TIM_DMADelayPulseNCplt
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for TIM_DMAErrorCCxN
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationCplt) refers to stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for HAL_TIMEx_CommutHalfCpltCallback
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt) refers to stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakInput) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakInput) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_TISelection) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_TISelection) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GroupChannel5) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_GroupChannel5) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_DisarmBreakInput) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_DisarmBreakInput) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ReArmBreakInput) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ReArmBreakInput) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ReArmBreakInput) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_Break2Callback) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_GetState) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GetChannelNState) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_GetChannelNState) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_DeInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_Init) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_IC_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_IC_Init) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_ENCODER_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_ENCODER_Init) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_StructInit) refers to rt_memclr.o(.text) for __aeabi_memclr
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init) for [Anonymous Symbol]
    stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_DeInit) refers to stm32g0xx_ll_usart.o(.text.LL_USART_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_usart.o(.text.LL_USART_Init) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) for LL_RCC_GetUSARTClockFreq
    stm32g0xx_ll_usart.o(.text.LL_USART_Init) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for LL_RCC_GetSystemClocksFreq
    stm32g0xx_ll_usart.o(.text.LL_USART_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_Init) refers to stm32g0xx_ll_usart.o(.text.LL_USART_Init) for [Anonymous Symbol]
    stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_StructInit) refers to stm32g0xx_ll_usart.o(.text.LL_USART_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockInit) refers to stm32g0xx_ll_usart.o(.text.LL_USART_ClockInit) for [Anonymous Symbol]
    stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockStructInit) refers to stm32g0xx_ll_usart.o(.text.LL_USART_ClockStructInit) for [Anonymous Symbol]
    system_stm32g0xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32g0xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32g0xx.o(.text.SystemCoreClockUpdate) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    system_stm32g0xx.o(.text.SystemCoreClockUpdate) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32g0xx.o(.text.SystemCoreClockUpdate) refers to system_stm32g0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32g0xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32g0xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetBusVoltage_d) refers to bus_voltage_sensor.o(.text.VBS_GetBusVoltage_d) for [Anonymous Symbol]
    bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetAvBusVoltage_d) refers to bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_d) for [Anonymous Symbol]
    bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetAvBusVoltage_V) refers to bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_V) for [Anonymous Symbol]
    bus_voltage_sensor.o(.ARM.exidx.text.VBS_CheckVbus) refers to bus_voltage_sensor.o(.text.VBS_CheckVbus) for [Anonymous Symbol]
    circle_limitation.o(.text.Circle_Limitation) refers to circle_limitation.o(.rodata.SqrtTable) for SqrtTable
    circle_limitation.o(.ARM.exidx.text.Circle_Limitation) refers to circle_limitation.o(.text.Circle_Limitation) for [Anonymous Symbol]
    digital_output.o(.ARM.exidx.text.DOUT_SetOutputState) refers to digital_output.o(.text.DOUT_SetOutputState) for [Anonymous Symbol]
    digital_output.o(.ARM.exidx.text.DOUT_GetOutputState) refers to digital_output.o(.text.DOUT_GetOutputState) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_SetFaultState) refers to ntc_temperature_sensor.o(.text.NTC_SetFaultState) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.text.NTC_Init) refers to regular_conversion_manager.o(.text.RCM_RegisterRegConv) for RCM_RegisterRegConv
    ntc_temperature_sensor.o(.text.NTC_Init) refers to ntc_temperature_sensor.o(.text.NTC_Clear) for NTC_Clear
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_Init) refers to ntc_temperature_sensor.o(.text.NTC_Init) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_Clear) refers to ntc_temperature_sensor.o(.text.NTC_Clear) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.text.NTC_CalcAvTemp) refers to regular_conversion_manager.o(.text.RCM_ExecRegularConv) for RCM_ExecRegularConv
    ntc_temperature_sensor.o(.text.NTC_CalcAvTemp) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    ntc_temperature_sensor.o(.text.NTC_CalcAvTemp) refers to ntc_temperature_sensor.o(.text.NTC_SetFaultState) for NTC_SetFaultState
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_CalcAvTemp) refers to ntc_temperature_sensor.o(.text.NTC_CalcAvTemp) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_GetAvTemp_d) refers to ntc_temperature_sensor.o(.text.NTC_GetAvTemp_d) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_GetAvTemp_C) refers to ntc_temperature_sensor.o(.text.NTC_GetAvTemp_C) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_CheckTemp) refers to ntc_temperature_sensor.o(.text.NTC_CheckTemp) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_Init) refers to open_loop.o(.text.OL_Init) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_VqdConditioning) refers to open_loop.o(.text.OL_VqdConditioning) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_UpdateVoltage) refers to open_loop.o(.text.OL_UpdateVoltage) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_GetVoltage) refers to open_loop.o(.text.OL_GetVoltage) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_Calc) refers to open_loop.o(.text.OL_Calc) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_VF) refers to open_loop.o(.text.OL_VF) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_HandleInit) refers to pid_regulator.o(.text.PID_HandleInit) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetKP) refers to pid_regulator.o(.text.PID_SetKP) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetKI) refers to pid_regulator.o(.text.PID_SetKI) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKP) refers to pid_regulator.o(.text.PID_GetKP) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKI) refers to pid_regulator.o(.text.PID_GetKI) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetDefaultKP) refers to pid_regulator.o(.text.PID_GetDefaultKP) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetDefaultKI) refers to pid_regulator.o(.text.PID_GetDefaultKI) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetIntegralTerm) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKPDivisor) refers to pid_regulator.o(.text.PID_GetKPDivisor) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKPDivisorPOW2) refers to pid_regulator.o(.text.PID_GetKPDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetKPDivisorPOW2) refers to pid_regulator.o(.text.PID_SetKPDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKIDivisor) refers to pid_regulator.o(.text.PID_GetKIDivisor) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKIDivisorPOW2) refers to pid_regulator.o(.text.PID_GetKIDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.text.PID_SetKIDivisorPOW2) refers to pid_regulator.o(.text.PID_SetUpperIntegralTermLimit) for PID_SetUpperIntegralTermLimit
    pid_regulator.o(.text.PID_SetKIDivisorPOW2) refers to pid_regulator.o(.text.PID_SetLowerIntegralTermLimit) for PID_SetLowerIntegralTermLimit
    pid_regulator.o(.ARM.exidx.text.PID_SetKIDivisorPOW2) refers to pid_regulator.o(.text.PID_SetKIDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetUpperIntegralTermLimit) refers to pid_regulator.o(.text.PID_SetUpperIntegralTermLimit) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetLowerIntegralTermLimit) refers to pid_regulator.o(.text.PID_SetLowerIntegralTermLimit) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetLowerOutputLimit) refers to pid_regulator.o(.text.PID_SetLowerOutputLimit) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetUpperOutputLimit) refers to pid_regulator.o(.text.PID_SetUpperOutputLimit) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetPrevError) refers to pid_regulator.o(.text.PID_SetPrevError) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetKD) refers to pid_regulator.o(.text.PID_SetKD) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKD) refers to pid_regulator.o(.text.PID_GetKD) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKDDivisor) refers to pid_regulator.o(.text.PID_GetKDDivisor) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKDDivisorPOW2) refers to pid_regulator.o(.text.PID_GetKDDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetKDDivisorPOW2) refers to pid_regulator.o(.text.PID_SetKDDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PI_Controller) refers to pid_regulator.o(.text.PI_Controller) for [Anonymous Symbol]
    pid_regulator.o(.text.PID_Controller) refers to pid_regulator.o(.text.PI_Controller) for PI_Controller
    pid_regulator.o(.ARM.exidx.text.PID_Controller) refers to pid_regulator.o(.text.PID_Controller) for [Anonymous Symbol]
    pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_CalcElMotorPower) refers to pqd_motor_power_measurement.o(.text.PQD_CalcElMotorPower) for [Anonymous Symbol]
    pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_Clear) refers to pqd_motor_power_measurement.o(.text.PQD_Clear) for [Anonymous Symbol]
    pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW) refers to bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_V) for VBS_GetAvBusVoltage_V
    pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW) refers to fflti.o(.text) for __aeabi_i2f
    pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_GetAvrgElMotorPowerW) refers to pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW) for [Anonymous Symbol]
    pwm_common.o(.ARM.exidx.text.waitForPolarizationEnd) refers to pwm_common.o(.text.waitForPolarizationEnd) for [Anonymous Symbol]
    r_divider_bus_voltage_sensor.o(.text.RVBS_Init) refers to regular_conversion_manager.o(.text.RCM_RegisterRegConv) for RCM_RegisterRegConv
    r_divider_bus_voltage_sensor.o(.text.RVBS_Init) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_Clear) for RVBS_Clear
    r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_Init) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_Init) for [Anonymous Symbol]
    r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_Clear) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_Clear) for [Anonymous Symbol]
    r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbusFilt) refers to regular_conversion_manager.o(.text.RCM_ExecRegularConv) for RCM_ExecRegularConv
    r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbusFilt) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbusFilt) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_CheckFaultState) for RVBS_CheckFaultState
    r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_CalcAvVbusFilt) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbusFilt) for [Anonymous Symbol]
    r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_CheckFaultState) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_CheckFaultState) for [Anonymous Symbol]
    r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus) refers to regular_conversion_manager.o(.text.RCM_ExecRegularConv) for RCM_ExecRegularConv
    r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_CheckFaultState) for RVBS_CheckFaultState
    r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_CalcAvVbus) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus) for [Anonymous Symbol]
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_Init) refers to ramp_ext_mngr.o(.text.REMNG_Init) for [Anonymous Symbol]
    ramp_ext_mngr.o(.text.REMNG_Calc) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_Calc) refers to ramp_ext_mngr.o(.text.REMNG_Calc) for [Anonymous Symbol]
    ramp_ext_mngr.o(.text.REMNG_ExecRamp) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    ramp_ext_mngr.o(.text.REMNG_ExecRamp) refers to ramp_ext_mngr.o(.text.getScalingFactor) for getScalingFactor
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_ExecRamp) refers to ramp_ext_mngr.o(.text.REMNG_ExecRamp) for [Anonymous Symbol]
    ramp_ext_mngr.o(.ARM.exidx.text.getScalingFactor) refers to ramp_ext_mngr.o(.text.getScalingFactor) for [Anonymous Symbol]
    ramp_ext_mngr.o(.text.REMNG_GetValue) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_GetValue) refers to ramp_ext_mngr.o(.text.REMNG_GetValue) for [Anonymous Symbol]
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_RampCompleted) refers to ramp_ext_mngr.o(.text.REMNG_RampCompleted) for [Anonymous Symbol]
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_StopRamp) refers to ramp_ext_mngr.o(.text.REMNG_StopRamp) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_Init) refers to revup_ctrl.o(.text.RUC_Init) for [Anonymous Symbol]
    revup_ctrl.o(.text.RUC_Clear) refers to virtual_speed_sensor.o(.text.VSS_Clear) for VSS_Clear
    revup_ctrl.o(.text.RUC_Clear) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for STC_SetControlMode
    revup_ctrl.o(.text.RUC_Clear) refers to virtual_speed_sensor.o(.text.VSS_SetMecAngle) for VSS_SetMecAngle
    revup_ctrl.o(.text.RUC_Clear) refers to speed_torq_ctrl.o(.text.STC_ExecRamp) for STC_ExecRamp
    revup_ctrl.o(.text.RUC_Clear) refers to virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) for VSS_SetMecAcceleration
    revup_ctrl.o(.text.RUC_Clear) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    revup_ctrl.o(.ARM.exidx.text.RUC_Clear) refers to revup_ctrl.o(.text.RUC_Clear) for [Anonymous Symbol]
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM) for PWMC_SwitchOffPWM
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to pwm_curr_fdbk.o(.text.PWMC_TurnOnLowSides) for PWMC_TurnOnLowSides
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOnPWM) for PWMC_SwitchOnPWM
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to speed_torq_ctrl.o(.text.STC_ExecRamp) for STC_ExecRamp
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) for VSS_SetMecAcceleration
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to virtual_speed_sensor.o(.text.VSS_SetCopyObserver) for VSS_SetCopyObserver
    revup_ctrl.o(.ARM.exidx.text.RUC_OTF_Exec) refers to revup_ctrl.o(.text.RUC_OTF_Exec) for [Anonymous Symbol]
    revup_ctrl.o(.text.RUC_Exec) refers to speed_torq_ctrl.o(.text.STC_ExecRamp) for STC_ExecRamp
    revup_ctrl.o(.text.RUC_Exec) refers to virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) for VSS_SetMecAcceleration
    revup_ctrl.o(.text.RUC_Exec) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    revup_ctrl.o(.ARM.exidx.text.RUC_Exec) refers to revup_ctrl.o(.text.RUC_Exec) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_IsAlignStageNow) refers to revup_ctrl.o(.text.RUC_IsAlignStageNow) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_Completed) refers to revup_ctrl.o(.text.RUC_Completed) for [Anonymous Symbol]
    revup_ctrl.o(.text.RUC_Stop) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    revup_ctrl.o(.text.RUC_Stop) refers to virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) for VSS_SetMecAcceleration
    revup_ctrl.o(.ARM.exidx.text.RUC_Stop) refers to revup_ctrl.o(.text.RUC_Stop) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_FirstAccelerationStageReached) refers to revup_ctrl.o(.text.RUC_FirstAccelerationStageReached) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseDurationms) refers to revup_ctrl.o(.text.RUC_SetPhaseDurationms) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseFinalMecSpeedUnit) refers to revup_ctrl.o(.text.RUC_SetPhaseFinalMecSpeedUnit) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseFinalTorque) refers to revup_ctrl.o(.text.RUC_SetPhaseFinalTorque) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_SetPhase) refers to revup_ctrl.o(.text.RUC_SetPhase) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseDurationms) refers to revup_ctrl.o(.text.RUC_GetPhaseDurationms) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseFinalMecSpeedUnit) refers to revup_ctrl.o(.text.RUC_GetPhaseFinalMecSpeedUnit) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseFinalTorque) refers to revup_ctrl.o(.text.RUC_GetPhaseFinalTorque) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_GetNumberOfPhases) refers to revup_ctrl.o(.text.RUC_GetNumberOfPhases) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_GetPhase) refers to revup_ctrl.o(.text.RUC_GetPhase) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_Get_SCLowsideOTF_Status) refers to revup_ctrl.o(.text.RUC_Get_SCLowsideOTF_Status) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElAngle) refers to speed_pos_fdbk.o(.text.SPD_GetElAngle) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetMecAngle) refers to speed_pos_fdbk.o(.text.SPD_GetMecAngle) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetAvrgMecSpeedUnit) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElSpeedDpp) refers to speed_pos_fdbk.o(.text.SPD_GetElSpeedDpp) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetInstElSpeedDpp) refers to speed_pos_fdbk.o(.text.SPD_GetInstElSpeedDpp) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_Check) refers to speed_pos_fdbk.o(.text.SPD_Check) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_IsMecSpeedReliable) refers to speed_pos_fdbk.o(.text.SPD_IsMecSpeedReliable) for [Anonymous Symbol]
    speed_pos_fdbk.o(.text.SPD_GetS16Speed) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetS16Speed) refers to speed_pos_fdbk.o(.text.SPD_GetS16Speed) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElToMecRatio) refers to speed_pos_fdbk.o(.text.SPD_GetElToMecRatio) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_SetElToMecRatio) refers to speed_pos_fdbk.o(.text.SPD_SetElToMecRatio) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_Init) refers to speed_torq_ctrl.o(.text.STC_Init) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_SetSpeedSensor) refers to speed_torq_ctrl.o(.text.STC_SetSpeedSensor) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetSpeedSensor) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for [Anonymous Symbol]
    speed_torq_ctrl.o(.text.STC_Clear) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    speed_torq_ctrl.o(.ARM.exidx.text.STC_Clear) refers to speed_torq_ctrl.o(.text.STC_Clear) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMecSpeedRefUnit) refers to speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnit) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetTorqueRef) refers to speed_torq_ctrl.o(.text.STC_GetTorqueRef) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_SetControlMode) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetControlMode) refers to speed_torq_ctrl.o(.text.STC_GetControlMode) for [Anonymous Symbol]
    speed_torq_ctrl.o(.text.STC_ExecRamp) refers to speed_torq_ctrl.o(.text.STC_GetTorqueRef) for STC_GetTorqueRef
    speed_torq_ctrl.o(.text.STC_ExecRamp) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    speed_torq_ctrl.o(.text.STC_ExecRamp) refers to speed_torq_ctrl.o(.bss.hCurrentReference) for hCurrentReference
    speed_torq_ctrl.o(.ARM.exidx.text.STC_ExecRamp) refers to speed_torq_ctrl.o(.text.STC_ExecRamp) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_StopRamp) refers to speed_torq_ctrl.o(.text.STC_StopRamp) for [Anonymous Symbol]
    speed_torq_ctrl.o(.text.STC_CalcTorqueReference) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    speed_torq_ctrl.o(.text.STC_CalcTorqueReference) refers to pid_regulator.o(.text.PI_Controller) for PI_Controller
    speed_torq_ctrl.o(.text.STC_CalcTorqueReference) refers to speed_torq_ctrl.o(.bss.myxflag) for myxflag
    speed_torq_ctrl.o(.text.STC_CalcTorqueReference) refers to watch_data.o(.bss.watch_data) for watch_data
    speed_torq_ctrl.o(.text.STC_CalcTorqueReference) refers to user_logic.o(.bss..L_MergedGlobals) for lib_debug
    speed_torq_ctrl.o(.ARM.exidx.text.STC_CalcTorqueReference) refers to speed_torq_ctrl.o(.text.STC_CalcTorqueReference) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMecSpeedRefUnitDefault) refers to speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnitDefault) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMaxAppPositiveMecSpeedUnit) refers to speed_torq_ctrl.o(.text.STC_GetMaxAppPositiveMecSpeedUnit) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMinAppNegativeMecSpeedUnit) refers to speed_torq_ctrl.o(.text.STC_GetMinAppNegativeMecSpeedUnit) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_RampCompleted) refers to speed_torq_ctrl.o(.text.STC_RampCompleted) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_StopSpeedRamp) refers to speed_torq_ctrl.o(.text.STC_StopSpeedRamp) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetDefaultIqdref) refers to speed_torq_ctrl.o(.text.STC_GetDefaultIqdref) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_SetNominalCurrent) refers to speed_torq_ctrl.o(.text.STC_SetNominalCurrent) for [Anonymous Symbol]
    speed_torq_ctrl.o(.text.STC_ForceSpeedReferenceToCurrentSpeed) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    speed_torq_ctrl.o(.ARM.exidx.text.STC_ForceSpeedReferenceToCurrentSpeed) refers to speed_torq_ctrl.o(.text.STC_ForceSpeedReferenceToCurrentSpeed) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Clear) for STO_PLL_Clear
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init) refers to pid_regulator.o(.text.PID_HandleInit) for PID_HandleInit
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_Init) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Clear) refers to rt_memclr.o(.text) for __aeabi_memclr
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Clear) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_Clear) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Clear) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_Return) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Return) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcElAngle) refers to mc_math.o(.text.MCM_Trig_Functions) for MCM_Trig_Functions
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcElAngle) refers to pid_regulator.o(.text.PI_Controller) for PI_Controller
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_CalcElAngle) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcElAngle) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgMecSpeedUnit) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgMecSpeedUnit) refers to llmul.o(.text) for __aeabi_lmul
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgMecSpeedUnit) refers to speed_pos_fdbk.o(.text.SPD_IsMecSpeedReliable) for SPD_IsMecSpeedReliable
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_CalcAvrgMecSpeedUnit) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgMecSpeedUnit) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_CalcAvrgElSpeedDpp) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgElSpeedDpp) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_IsObserverConverged) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsObserverConverged) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetEstimatedBemf) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedBemf) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetEstimatedCurrent) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedCurrent) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetObserverGains) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObserverGains) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_SetObserverGains) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_SetObserverGains) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_GetPLLGains) refers to pid_regulator.o(.text.PID_GetKP) for PID_GetKP
    sto_pll_speed_pos_fdbk.o(.text.STO_GetPLLGains) refers to pid_regulator.o(.text.PID_GetKI) for PID_GetKI
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_GetPLLGains) refers to sto_pll_speed_pos_fdbk.o(.text.STO_GetPLLGains) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_SetPLLGains) refers to pid_regulator.o(.text.PID_SetKP) for PID_SetKP
    sto_pll_speed_pos_fdbk.o(.text.STO_SetPLLGains) refers to pid_regulator.o(.text.PID_SetKI) for PID_SetKI
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_SetPLLGains) refers to sto_pll_speed_pos_fdbk.o(.text.STO_SetPLLGains) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_SetMecAngle) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_SetMecAngle) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_OTF_ResetPLL) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_OTF_ResetPLL) refers to sto_pll_speed_pos_fdbk.o(.text.STO_OTF_ResetPLL) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_ResetPLL) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_ResetPLL) refers to sto_pll_speed_pos_fdbk.o(.text.STO_ResetPLL) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_SetPLL) refers to pid_regulator.o(.text.PID_GetKIDivisor) for PID_GetKIDivisor
    sto_pll_speed_pos_fdbk.o(.text.STO_SetPLL) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_SetPLL) refers to sto_pll_speed_pos_fdbk.o(.text.STO_SetPLL) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetEstimatedBemfLevel) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedBemfLevel) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetObservedBemfLevel) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObservedBemfLevel) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_BemfConsistencyCheckSwitch) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_BemfConsistencyCheckSwitch) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_IsBemfConsistent) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsBemfConsistent) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_IsVarianceTight) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsVarianceTight) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_ForceConvergency1) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_ForceConvergency1) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_ForceConvergency2) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_ForceConvergency2) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_SetMinStartUpValidSpeedUnit) refers to sto_pll_speed_pos_fdbk.o(.text.STO_SetMinStartUpValidSpeedUnit) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_SetDirection) refers to sto_pll_speed_pos_fdbk.o(.text.STO_SetDirection) for [Anonymous Symbol]
    virtual_speed_sensor.o(.text.VSS_Init) refers to virtual_speed_sensor.o(.text.VSS_Clear) for VSS_Clear
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_Init) refers to virtual_speed_sensor.o(.text.VSS_Init) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_Clear) refers to virtual_speed_sensor.o(.text.VSS_Clear) for [Anonymous Symbol]
    virtual_speed_sensor.o(.text.VSS_CalcElAngle) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_CalcElAngle) refers to virtual_speed_sensor.o(.text.VSS_CalcElAngle) for [Anonymous Symbol]
    virtual_speed_sensor.o(.text.VSS_CalcAvrgMecSpeedUnit) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    virtual_speed_sensor.o(.text.VSS_CalcAvrgMecSpeedUnit) refers to speed_pos_fdbk.o(.text.SPD_IsMecSpeedReliable) for SPD_IsMecSpeedReliable
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_CalcAvrgMecSpeedUnit) refers to virtual_speed_sensor.o(.text.VSS_CalcAvrgMecSpeedUnit) for [Anonymous Symbol]
    virtual_speed_sensor.o(.text.VSS_SetMecAngle) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetMecAngle) refers to virtual_speed_sensor.o(.text.VSS_SetMecAngle) for [Anonymous Symbol]
    virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetMecAcceleration) refers to virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_RampCompleted) refers to virtual_speed_sensor.o(.text.VSS_RampCompleted) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_GetLastRampFinalSpeed) refers to virtual_speed_sensor.o(.text.VSS_GetLastRampFinalSpeed) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetStartTransition) refers to virtual_speed_sensor.o(.text.VSS_SetStartTransition) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_IsTransitionOngoing) refers to virtual_speed_sensor.o(.text.VSS_IsTransitionOngoing) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_TransitionEnded) refers to virtual_speed_sensor.o(.text.VSS_TransitionEnded) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetCopyObserver) refers to virtual_speed_sensor.o(.text.VSS_SetCopyObserver) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetElAngle) refers to virtual_speed_sensor.o(.text.VSS_SetElAngle) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_Init) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetOffsetCalib) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetOffsetCalib) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetOffsetCalib) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetOffsetCalib) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM) for R3_1_SwitchOnPWM
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to pwm_common.o(.text.waitForPolarizationEnd) for waitForPolarizationEnd
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for R3_1_SwitchOffPWM
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointCalibration) for R3_1_SetADCSampPointCalibration
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationAB) for R3_1_HFCurrentsCalibrationAB
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationC) for R3_1_HFCurrentsCalibrationC
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_CurrentReadingCalibration) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_HFCurrentsCalibrationAB) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationAB) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointCalibration) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters) for R3_1_WriteTIMRegisters
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointCalibration) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointCalibration) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SwitchOnPWM) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SwitchOffPWM) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_HFCurrentsCalibrationC) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationC) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents) refers to r3_g0xx_pwm_curr_fdbk.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents) refers to main.o(.bss.target_p_s) for target_p_s
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetPhaseCurrents) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetPhaseCurrents_OVM) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents_OVM) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_WriteTIMRegisters) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters) for R3_1_WriteTIMRegisters
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointSectX) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX_OVM) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters) for R3_1_WriteTIMRegisters
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointSectX_OVM) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX_OVM) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_TurnOnLowSides) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_TIMx_UP_IRQHandler) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TIMx_UP_IRQHandler) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_OVERCURRENT_IRQHandler) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_OVERCURRENT_IRQHandler) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_OVERVOLTAGE_IRQHandler) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_OVERVOLTAGE_IRQHandler) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_IsOverCurrentOccurred) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_IsOverCurrentOccurred) for [Anonymous Symbol]
    mcp.o(.text.MCP_ReceivedPacket) refers to register_interface.o(.text.RI_SetRegCommandParser) for RI_SetRegCommandParser
    mcp.o(.text.MCP_ReceivedPacket) refers to register_interface.o(.text.RI_GetRegCommandParser) for RI_GetRegCommandParser
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_StartMotor) for MCI_StartMotor
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_StopMotor) for MCI_StopMotor
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_StopRamp) for MCI_StopRamp
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_FaultAcknowledged) for MCI_FaultAcknowledged
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_Clear_Iqdref) for MCI_Clear_Iqdref
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_api.o(.text.MC_ProfilerCommand) for MC_ProfilerCommand
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_config.o(.bss.Mci) for Mci
    mcp.o(.text.MCP_ReceivedPacket) refers to mcp_config.o(.bss.MCP_UserCallBack) for MCP_UserCallBack
    mcp.o(.ARM.exidx.text.MCP_ReceivedPacket) refers to mcp.o(.text.MCP_ReceivedPacket) for [Anonymous Symbol]
    mcp.o(.text.MCP_RegisterCallBack) refers to mcp_config.o(.bss.MCP_UserCallBack) for MCP_UserCallBack
    mcp.o(.ARM.exidx.text.MCP_RegisterCallBack) refers to mcp.o(.text.MCP_RegisterCallBack) for [Anonymous Symbol]
    mcpa.o(.text.MCPA_dataLog) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    mcpa.o(.text.MCPA_dataLog) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    mcpa.o(.text.MCPA_dataLog) refers to mcpa.o(.bss.GLOBAL_TIMESTAMP) for GLOBAL_TIMESTAMP
    mcpa.o(.ARM.exidx.text.MCPA_dataLog) refers to mcpa.o(.text.MCPA_dataLog) for [Anonymous Symbol]
    mcpa.o(.ARM.exidx.text.MCPA_flushDataLog) refers to mcpa.o(.text.MCPA_flushDataLog) for [Anonymous Symbol]
    mcpa.o(.text.MCPA_cfgLog) refers to register_interface.o(.text.RI_GetIDSize) for RI_GetIDSize
    mcpa.o(.text.MCPA_cfgLog) refers to register_interface.o(.text.RI_GetPtrReg) for RI_GetPtrReg
    mcpa.o(.ARM.exidx.text.MCPA_cfgLog) refers to mcpa.o(.text.MCPA_cfgLog) for [Anonymous Symbol]
    flux_weakening_ctrl.o(.ARM.exidx.text.FW_Init) refers to flux_weakening_ctrl.o(.text.FW_Init) for [Anonymous Symbol]
    flux_weakening_ctrl.o(.text.FW_Clear) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    flux_weakening_ctrl.o(.ARM.exidx.text.FW_Clear) refers to flux_weakening_ctrl.o(.text.FW_Clear) for [Anonymous Symbol]
    flux_weakening_ctrl.o(.text.FW_CalcCurrRef) refers to mc_math.o(.text.MCM_Sqrt) for MCM_Sqrt
    flux_weakening_ctrl.o(.text.FW_CalcCurrRef) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    flux_weakening_ctrl.o(.text.FW_CalcCurrRef) refers to pid_regulator.o(.text.PI_Controller) for PI_Controller
    flux_weakening_ctrl.o(.text.FW_CalcCurrRef) refers to pid_regulator.o(.text.PID_GetKIDivisor) for PID_GetKIDivisor
    flux_weakening_ctrl.o(.text.FW_CalcCurrRef) refers to pid_regulator.o(.text.PID_SetLowerIntegralTermLimit) for PID_SetLowerIntegralTermLimit
    flux_weakening_ctrl.o(.text.FW_CalcCurrRef) refers to pid_regulator.o(.text.PID_SetUpperIntegralTermLimit) for PID_SetUpperIntegralTermLimit
    flux_weakening_ctrl.o(.ARM.exidx.text.FW_CalcCurrRef) refers to flux_weakening_ctrl.o(.text.FW_CalcCurrRef) for [Anonymous Symbol]
    flux_weakening_ctrl.o(.ARM.exidx.text.FW_DataProcess) refers to flux_weakening_ctrl.o(.text.FW_DataProcess) for [Anonymous Symbol]
    flux_weakening_ctrl.o(.ARM.exidx.text.FW_SetVref) refers to flux_weakening_ctrl.o(.text.FW_SetVref) for [Anonymous Symbol]
    flux_weakening_ctrl.o(.ARM.exidx.text.FW_GetVref) refers to flux_weakening_ctrl.o(.text.FW_GetVref) for [Anonymous Symbol]
    flux_weakening_ctrl.o(.ARM.exidx.text.FW_GetAvVAmplitude) refers to flux_weakening_ctrl.o(.text.FW_GetAvVAmplitude) for [Anonymous Symbol]
    flux_weakening_ctrl.o(.text.FW_GetAvVPercentage) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    flux_weakening_ctrl.o(.ARM.exidx.text.FW_GetAvVPercentage) refers to flux_weakening_ctrl.o(.text.FW_GetAvVPercentage) for [Anonymous Symbol]
    at24c02.o(.text.at24c02_writeonebyte) refers to hal_soft_iic.o(.text.I2C_Start) for I2C_Start
    at24c02.o(.text.at24c02_writeonebyte) refers to hal_soft_iic.o(.text.I2C_WriteByte) for I2C_WriteByte
    at24c02.o(.text.at24c02_writeonebyte) refers to hal_soft_iic.o(.text.I2C_WaitAck) for I2C_WaitAck
    at24c02.o(.text.at24c02_writeonebyte) refers to hal_soft_iic.o(.text.I2C_Stop) for I2C_Stop
    at24c02.o(.ARM.exidx.text.at24c02_writeonebyte) refers to at24c02.o(.text.at24c02_writeonebyte) for [Anonymous Symbol]
    at24c02.o(.text.at24c02_readonebyte) refers to hal_soft_iic.o(.text.I2C_Start) for I2C_Start
    at24c02.o(.text.at24c02_readonebyte) refers to hal_soft_iic.o(.text.I2C_WriteByte) for I2C_WriteByte
    at24c02.o(.text.at24c02_readonebyte) refers to hal_soft_iic.o(.text.I2C_WaitAck) for I2C_WaitAck
    at24c02.o(.text.at24c02_readonebyte) refers to hal_soft_iic.o(.text.I2C_ReadByte) for I2C_ReadByte
    at24c02.o(.text.at24c02_readonebyte) refers to hal_soft_iic.o(.text.I2C_Stop) for I2C_Stop
    at24c02.o(.ARM.exidx.text.at24c02_readonebyte) refers to at24c02.o(.text.at24c02_readonebyte) for [Anonymous Symbol]
    at24c02.o(.text.at24c02_writelenbyte) refers to hal_soft_iic.o(.text.I2C_Start) for I2C_Start
    at24c02.o(.text.at24c02_writelenbyte) refers to hal_soft_iic.o(.text.I2C_WriteByte) for I2C_WriteByte
    at24c02.o(.text.at24c02_writelenbyte) refers to hal_soft_iic.o(.text.I2C_WaitAck) for I2C_WaitAck
    at24c02.o(.text.at24c02_writelenbyte) refers to hal_soft_iic.o(.text.I2C_Stop) for I2C_Stop
    at24c02.o(.ARM.exidx.text.at24c02_writelenbyte) refers to at24c02.o(.text.at24c02_writelenbyte) for [Anonymous Symbol]
    at24c02.o(.text.at24c02_readlenbyte) refers to hal_soft_iic.o(.text.I2C_Start) for I2C_Start
    at24c02.o(.text.at24c02_readlenbyte) refers to hal_soft_iic.o(.text.I2C_WriteByte) for I2C_WriteByte
    at24c02.o(.text.at24c02_readlenbyte) refers to hal_soft_iic.o(.text.I2C_WaitAck) for I2C_WaitAck
    at24c02.o(.text.at24c02_readlenbyte) refers to hal_soft_iic.o(.text.I2C_ReadByte) for I2C_ReadByte
    at24c02.o(.text.at24c02_readlenbyte) refers to hal_soft_iic.o(.text.I2C_Stop) for I2C_Stop
    at24c02.o(.ARM.exidx.text.at24c02_readlenbyte) refers to at24c02.o(.text.at24c02_readlenbyte) for [Anonymous Symbol]
    at24c02.o(.text.at24c02_test) refers to hal_soft_iic.o(.text.I2C_Start) for I2C_Start
    at24c02.o(.text.at24c02_test) refers to hal_soft_iic.o(.text.I2C_WriteByte) for I2C_WriteByte
    at24c02.o(.text.at24c02_test) refers to hal_soft_iic.o(.text.I2C_WaitAck) for I2C_WaitAck
    at24c02.o(.text.at24c02_test) refers to hal_soft_iic.o(.text.I2C_ReadByte) for I2C_ReadByte
    at24c02.o(.text.at24c02_test) refers to hal_soft_iic.o(.text.I2C_Stop) for I2C_Stop
    at24c02.o(.text.at24c02_test) refers to puts.o(.text) for puts
    at24c02.o(.ARM.exidx.text.at24c02_test) refers to at24c02.o(.text.at24c02_test) for [Anonymous Symbol]
    at24c02.o(.text.ee_save_data) refers to hal_soft_iic.o(.text.I2C_Start) for I2C_Start
    at24c02.o(.text.ee_save_data) refers to hal_soft_iic.o(.text.I2C_WriteByte) for I2C_WriteByte
    at24c02.o(.text.ee_save_data) refers to hal_soft_iic.o(.text.I2C_WaitAck) for I2C_WaitAck
    at24c02.o(.text.ee_save_data) refers to hal_soft_iic.o(.text.I2C_Stop) for I2C_Stop
    at24c02.o(.text.ee_save_data) refers to app_handle.o(.data.g_work_mode) for g_work_mode
    at24c02.o(.text.ee_save_data) refers to at24c02.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    at24c02.o(.text.ee_save_data) refers to app_type.o(.bss..L_MergedGlobals) for target_speed
    at24c02.o(.ARM.exidx.text.ee_save_data) refers to at24c02.o(.text.ee_save_data) for [Anonymous Symbol]
    at24c02.o(.text.ee_read_data) refers to at24c02.o(.text.at24c02_readlenbyte) for at24c02_readlenbyte
    at24c02.o(.text.ee_read_data) refers to at24c02.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    at24c02.o(.ARM.exidx.text.ee_read_data) refers to at24c02.o(.text.ee_read_data) for [Anonymous Symbol]
    hal_soft_iic.o(.text.IIC_SDA_Mode_OUT) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    hal_soft_iic.o(.text.IIC_SDA_Mode_OUT) refers to hal_soft_iic.o(.bss.GPIO_InitStruct) for [Anonymous Symbol]
    hal_soft_iic.o(.ARM.exidx.text.IIC_SDA_Mode_OUT) refers to hal_soft_iic.o(.text.IIC_SDA_Mode_OUT) for [Anonymous Symbol]
    hal_soft_iic.o(.text.IIC_SDA_Mode_IN) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    hal_soft_iic.o(.text.IIC_SDA_Mode_IN) refers to hal_soft_iic.o(.bss.GPIO_InitStruct) for [Anonymous Symbol]
    hal_soft_iic.o(.ARM.exidx.text.IIC_SDA_Mode_IN) refers to hal_soft_iic.o(.text.IIC_SDA_Mode_IN) for [Anonymous Symbol]
    hal_soft_iic.o(.ARM.exidx.text.iic_delay_us) refers to hal_soft_iic.o(.text.iic_delay_us) for [Anonymous Symbol]
    hal_soft_iic.o(.text.I2C_Start) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    hal_soft_iic.o(.text.I2C_Start) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    hal_soft_iic.o(.text.I2C_Start) refers to hal_soft_iic.o(.bss.GPIO_InitStruct) for [Anonymous Symbol]
    hal_soft_iic.o(.ARM.exidx.text.I2C_Start) refers to hal_soft_iic.o(.text.I2C_Start) for [Anonymous Symbol]
    hal_soft_iic.o(.text.I2C_Stop) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    hal_soft_iic.o(.text.I2C_Stop) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    hal_soft_iic.o(.text.I2C_Stop) refers to hal_soft_iic.o(.bss.GPIO_InitStruct) for [Anonymous Symbol]
    hal_soft_iic.o(.ARM.exidx.text.I2C_Stop) refers to hal_soft_iic.o(.text.I2C_Stop) for [Anonymous Symbol]
    hal_soft_iic.o(.text.I2C_Ack) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    hal_soft_iic.o(.text.I2C_Ack) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    hal_soft_iic.o(.text.I2C_Ack) refers to hal_soft_iic.o(.bss.GPIO_InitStruct) for [Anonymous Symbol]
    hal_soft_iic.o(.ARM.exidx.text.I2C_Ack) refers to hal_soft_iic.o(.text.I2C_Ack) for [Anonymous Symbol]
    hal_soft_iic.o(.text.I2C_NoAck) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    hal_soft_iic.o(.text.I2C_NoAck) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    hal_soft_iic.o(.text.I2C_NoAck) refers to hal_soft_iic.o(.bss.GPIO_InitStruct) for [Anonymous Symbol]
    hal_soft_iic.o(.ARM.exidx.text.I2C_NoAck) refers to hal_soft_iic.o(.text.I2C_NoAck) for [Anonymous Symbol]
    hal_soft_iic.o(.text.I2C_WaitAck) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    hal_soft_iic.o(.text.I2C_WaitAck) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    hal_soft_iic.o(.text.I2C_WaitAck) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for HAL_GPIO_ReadPin
    hal_soft_iic.o(.text.I2C_WaitAck) refers to hal_soft_iic.o(.bss.GPIO_InitStruct) for [Anonymous Symbol]
    hal_soft_iic.o(.ARM.exidx.text.I2C_WaitAck) refers to hal_soft_iic.o(.text.I2C_WaitAck) for [Anonymous Symbol]
    hal_soft_iic.o(.text.I2C_WriteByte) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    hal_soft_iic.o(.text.I2C_WriteByte) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    hal_soft_iic.o(.text.I2C_WriteByte) refers to hal_soft_iic.o(.bss.GPIO_InitStruct) for [Anonymous Symbol]
    hal_soft_iic.o(.ARM.exidx.text.I2C_WriteByte) refers to hal_soft_iic.o(.text.I2C_WriteByte) for [Anonymous Symbol]
    hal_soft_iic.o(.text.I2C_ReadByte) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    hal_soft_iic.o(.text.I2C_ReadByte) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    hal_soft_iic.o(.text.I2C_ReadByte) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for HAL_GPIO_ReadPin
    hal_soft_iic.o(.text.I2C_ReadByte) refers to hal_soft_iic.o(.bss.GPIO_InitStruct) for [Anonymous Symbol]
    hal_soft_iic.o(.ARM.exidx.text.I2C_ReadByte) refers to hal_soft_iic.o(.text.I2C_ReadByte) for [Anonymous Symbol]
    usart_handle.o(.ARM.exidx.text.sendUartBytes) refers to usart_handle.o(.text.sendUartBytes) for [Anonymous Symbol]
    usart_handle.o(.ARM.exidx.text.usart2_send_lenth) refers to usart_handle.o(.text.usart2_send_lenth) for [Anonymous Symbol]
    usart_handle.o(.text.uart_send_data_compose) refers to usart_handle.o(.bss.send_data) for send_data
    usart_handle.o(.text.uart_send_data_compose) refers to app_type.o(.bss..L_MergedGlobals) for ERR_INFO_SEND
    usart_handle.o(.text.uart_send_data_compose) refers to app_type.o(.bss.actual_motor_speed) for actual_motor_speed
    usart_handle.o(.text.uart_send_data_compose) refers to app_type.o(.bss.data_power) for data_power
    usart_handle.o(.text.uart_send_data_compose) refers to app_type.o(.data.data_version) for data_version
    usart_handle.o(.text.uart_send_data_compose) refers to app_type.o(.bss.data_voltage) for data_voltage
    usart_handle.o(.text.uart_send_data_compose) refers to app_type.o(.bss.data_temperature) for data_temperature
    usart_handle.o(.ARM.exidx.text.uart_send_data_compose) refers to usart_handle.o(.text.uart_send_data_compose) for [Anonymous Symbol]
    usart_handle.o(.text.usart_handle_receive_data) refers to usart_handle.o(.text.uart_send_data_compose) for uart_send_data_compose
    usart_handle.o(.text.usart_handle_receive_data) refers to app_handle.o(.text.work_mode_switch) for work_mode_switch
    usart_handle.o(.text.usart_handle_receive_data) refers to app_type.o(.text.restore_factory_settings) for restore_factory_settings
    usart_handle.o(.text.usart_handle_receive_data) refers to usart_handle.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    usart_handle.o(.text.usart_handle_receive_data) refers to app_type.o(.bss..L_MergedGlobals) for ERR_INFO_REC
    usart_handle.o(.text.usart_handle_receive_data) refers to app_type.o(.bss.ac_inerpressure) for ac_inerpressure
    usart_handle.o(.text.usart_handle_receive_data) refers to app_type.o(.bss.ac_outpressure) for ac_outpressure
    usart_handle.o(.text.usart_handle_receive_data) refers to app_type.o(.bss.set_mode) for set_mode
    usart_handle.o(.text.usart_handle_receive_data) refers to app_type.o(.bss.water_temperature) for water_temperature
    usart_handle.o(.text.usart_handle_receive_data) refers to app_type.o(.bss.ke_temperature) for ke_temperature
    usart_handle.o(.text.usart_handle_receive_data) refers to app_type.o(.bss.discharge_water) for discharge_water
    usart_handle.o(.text.usart_handle_receive_data) refers to app_handle.o(.data.g_work_mode) for g_work_mode
    usart_handle.o(.ARM.exidx.text.usart_handle_receive_data) refers to usart_handle.o(.text.usart_handle_receive_data) for [Anonymous Symbol]
    led_key.o(.text.check_key_state) refers to led_key.o(.bss.key) for key
    led_key.o(.ARM.exidx.text.check_key_state) refers to led_key.o(.text.check_key_state) for [Anonymous Symbol]
    led_key.o(.text.get_key_state) refers to led_key.o(.bss.key) for key
    led_key.o(.ARM.exidx.text.get_key_state) refers to led_key.o(.text.get_key_state) for [Anonymous Symbol]
    led_key.o(.text.exe_key_func) refers to led_key.o(.text.get_key_state) for get_key_state
    led_key.o(.text.exe_key_func) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for MC_ProgramSpeedRampMotor1
    led_key.o(.text.exe_key_func) refers to mc_api.o(.text.MC_StartMotor1) for MC_StartMotor1
    led_key.o(.text.exe_key_func) refers to mc_api.o(.text.MC_StopMotor1) for MC_StopMotor1
    led_key.o(.text.exe_key_func) refers to led_key.o(.bss.key_num) for [Anonymous Symbol]
    led_key.o(.text.exe_key_func) refers to led_key.o(.data.switch_mode_tmp) for switch_mode_tmp
    led_key.o(.ARM.exidx.text.exe_key_func) refers to led_key.o(.text.exe_key_func) for [Anonymous Symbol]
    led_key.o(.ARM.exidx.text.led_show_function) refers to led_key.o(.text.led_show_function) for [Anonymous Symbol]
    led_key.o(.ARM.exidx.text.led_clear) refers to led_key.o(.text.led_clear) for [Anonymous Symbol]
    app_auto.o(.ARM.exidx.text.wheel_pid_struct_init) refers to app_auto.o(.text.wheel_pid_struct_init) for [Anonymous Symbol]
    app_auto.o(.text.speed_pid_control) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    app_auto.o(.text.speed_pid_control) refers to ffixi.o(.text) for __aeabi_f2iz
    app_auto.o(.text.speed_pid_control) refers to fflti.o(.text) for __aeabi_i2f
    app_auto.o(.text.speed_pid_control) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    app_auto.o(.text.speed_pid_control) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    app_auto.o(.ARM.exidx.text.speed_pid_control) refers to app_auto.o(.text.speed_pid_control) for [Anonymous Symbol]
    app_auto.o(.ARM.exidx.text.auto_mode_init) refers to app_auto.o(.text.auto_mode_init) for [Anonymous Symbol]
    app_auto.o(.text.auto_mode_tick) refers to fflti.o(.text) for __aeabi_ui2f
    app_auto.o(.text.auto_mode_tick) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    app_auto.o(.text.auto_mode_tick) refers to ffixi.o(.text) for __aeabi_f2iz
    app_auto.o(.text.auto_mode_tick) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    app_auto.o(.text.auto_mode_tick) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    app_auto.o(.text.auto_mode_tick) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    app_auto.o(.text.auto_mode_tick) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for MC_ProgramSpeedRampMotor1
    app_auto.o(.text.auto_mode_tick) refers to mc_api.o(.text.MC_StartMotor1) for MC_StartMotor1
    app_auto.o(.text.auto_mode_tick) refers to app_auto.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    app_auto.o(.text.auto_mode_tick) refers to app_type.o(.bss..L_MergedGlobals) for target_pressure
    app_auto.o(.text.auto_mode_tick) refers to app_type.o(.bss.ac_outpressure) for ac_outpressure
    app_auto.o(.ARM.exidx.text.auto_mode_tick) refers to app_auto.o(.text.auto_mode_tick) for [Anonymous Symbol]
    app_error.o(.ARM.exidx.text.myabs) refers to app_error.o(.text.myabs) for [Anonymous Symbol]
    app_error.o(.text.error_mode_init) refers to mc_api.o(.text.MC_StopMotor1) for MC_StopMotor1
    app_error.o(.ARM.exidx.text.error_mode_init) refers to app_error.o(.text.error_mode_init) for [Anonymous Symbol]
    app_error.o(.ARM.exidx.text.error_check_init) refers to app_error.o(.text.error_check_init) for [Anonymous Symbol]
    app_error.o(.text.error_check) refers to bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_V) for VBS_GetAvBusVoltage_V
    app_error.o(.text.error_check) refers to app_handle.o(.text.work_mode_switch) for work_mode_switch
    app_error.o(.text.error_check) refers to mc_config.o(.data.BusVoltageSensor_M1) for BusVoltageSensor_M1
    app_error.o(.text.error_check) refers to app_error.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    app_error.o(.text.error_check) refers to app_type.o(.bss..L_MergedGlobals) for ERR_INFO_SEND
    app_error.o(.text.error_check) refers to app_handle.o(.bss..L_MergedGlobals) for g_work_mode_ppre
    app_error.o(.text.error_check) refers to main.o(.bss.msta) for msta
    app_error.o(.text.error_check) refers to mc_config.o(.data.PWM_Handle_M1) for PWM_Handle_M1
    app_error.o(.ARM.exidx.text.error_check) refers to app_error.o(.text.error_check) for [Anonymous Symbol]
    app_error.o(.text.error_mode_tick) refers to mc_api.o(.text.MC_StopMotor1) for MC_StopMotor1
    app_error.o(.text.error_mode_tick) refers to app_handle.o(.text.work_mode_switch) for work_mode_switch
    app_error.o(.text.error_mode_tick) refers to main.o(.bss.msta) for msta
    app_error.o(.text.error_mode_tick) refers to app_type.o(.bss..L_MergedGlobals) for ERR_INFO_REC
    app_error.o(.ARM.exidx.text.error_mode_tick) refers to app_error.o(.text.error_mode_tick) for [Anonymous Symbol]
    app_handle.o(.text.work_mode_init) refers to app_handle.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    app_handle.o(.text.work_mode_init) refers to app_handle.o(.data.g_work_mode) for g_work_mode
    app_handle.o(.ARM.exidx.text.work_mode_init) refers to app_handle.o(.text.work_mode_init) for [Anonymous Symbol]
    app_handle.o(.text.work_mode_perfrom) refers to app_handle.o(.data.g_work_mode) for g_work_mode
    app_handle.o(.text.work_mode_perfrom) refers to app_handle.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    app_handle.o(.text.work_mode_perfrom) refers to app_handle.o(.rodata.g_work_mode_state) for [Anonymous Symbol]
    app_handle.o(.ARM.exidx.text.work_mode_perfrom) refers to app_handle.o(.text.work_mode_perfrom) for [Anonymous Symbol]
    app_handle.o(.text.work_mode_switch) refers to app_handle.o(.data.g_work_mode) for g_work_mode
    app_handle.o(.ARM.exidx.text.work_mode_switch) refers to app_handle.o(.text.work_mode_switch) for [Anonymous Symbol]
    app_handle.o(.rodata.g_work_mode_state) refers to app_standby.o(.text.standy_mode_init) for standy_mode_init
    app_handle.o(.rodata.g_work_mode_state) refers to app_standby.o(.text.standy_mode_tick) for standy_mode_tick
    app_handle.o(.rodata.g_work_mode_state) refers to app_auto.o(.text.auto_mode_init) for auto_mode_init
    app_handle.o(.rodata.g_work_mode_state) refers to app_auto.o(.text.auto_mode_tick) for auto_mode_tick
    app_handle.o(.rodata.g_work_mode_state) refers to app_manual.o(.text.manual_mode_init) for manual_mode_init
    app_handle.o(.rodata.g_work_mode_state) refers to app_manual.o(.text.manual_mode_tick) for manual_mode_tick
    app_handle.o(.rodata.g_work_mode_state) refers to app_error.o(.text.error_mode_init) for error_mode_init
    app_handle.o(.rodata.g_work_mode_state) refers to app_error.o(.text.error_mode_tick) for error_mode_tick
    app_manual.o(.text.manual_mode_init) refers to app_manual.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    app_manual.o(.ARM.exidx.text.manual_mode_init) refers to app_manual.o(.text.manual_mode_init) for [Anonymous Symbol]
    app_manual.o(.text.manual_mode_tick) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for MC_ProgramSpeedRampMotor1
    app_manual.o(.text.manual_mode_tick) refers to mc_api.o(.text.MC_StartMotor1) for MC_StartMotor1
    app_manual.o(.text.manual_mode_tick) refers to mc_api.o(.text.MC_GetMecSpeedAverageMotor1) for MC_GetMecSpeedAverageMotor1
    app_manual.o(.text.manual_mode_tick) refers to app_manual.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    app_manual.o(.text.manual_mode_tick) refers to app_type.o(.bss..L_MergedGlobals) for target_speed
    app_manual.o(.text.manual_mode_tick) refers to app_type.o(.bss.actual_motor_speed) for actual_motor_speed
    app_manual.o(.ARM.exidx.text.manual_mode_tick) refers to app_manual.o(.text.manual_mode_tick) for [Anonymous Symbol]
    app_standby.o(.text.standy_mode_init) refers to mc_api.o(.text.MC_StopMotor1) for MC_StopMotor1
    app_standby.o(.text.standy_mode_init) refers to mc_api.o(.text.MC_AcknowledgeFaultMotor1) for MC_AcknowledgeFaultMotor1
    app_standby.o(.text.standy_mode_init) refers to main.o(.bss.err_flag) for err_flag
    app_standby.o(.text.standy_mode_init) refers to app_type.o(.bss..L_MergedGlobals) for target_speed
    app_standby.o(.ARM.exidx.text.standy_mode_init) refers to app_standby.o(.text.standy_mode_init) for [Anonymous Symbol]
    app_standby.o(.text.standy_mode_tick) refers to mc_api.o(.text.MC_StopMotor1) for MC_StopMotor1
    app_standby.o(.text.standy_mode_tick) refers to mc_api.o(.text.MC_AcknowledgeFaultMotor1) for MC_AcknowledgeFaultMotor1
    app_standby.o(.text.standy_mode_tick) refers to main.o(.bss.msta) for msta
    app_standby.o(.ARM.exidx.text.standy_mode_tick) refers to app_standby.o(.text.standy_mode_tick) for [Anonymous Symbol]
    app_type.o(.text.get_motor_work_day) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    app_type.o(.text.get_motor_work_day) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    app_type.o(.text.get_motor_work_day) refers to app_type.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    app_type.o(.ARM.exidx.text.get_motor_work_day) refers to app_type.o(.text.get_motor_work_day) for [Anonymous Symbol]
    app_type.o(.text.restore_factory_settings) refers to mc_api.o(.text.MC_AcknowledgeFaultMotor1) for MC_AcknowledgeFaultMotor1
    app_type.o(.text.restore_factory_settings) refers to app_type.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    app_type.o(.ARM.exidx.text.restore_factory_settings) refers to app_type.o(.text.restore_factory_settings) for [Anonymous Symbol]
    handle_console_pid.o(.ARM.exidx.text.check_sum) refers to handle_console_pid.o(.text.check_sum) for [Anonymous Symbol]
    handle_console_pid.o(.text.protocol_data_recv) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    handle_console_pid.o(.text.protocol_data_recv) refers to handle_console_pid.o(.bss.parser) for [Anonymous Symbol]
    handle_console_pid.o(.ARM.exidx.text.protocol_data_recv) refers to handle_console_pid.o(.text.protocol_data_recv) for [Anonymous Symbol]
    handle_console_pid.o(.text.protocol_init) refers to handle_console_pid.o(.bss.parser) for [Anonymous Symbol]
    handle_console_pid.o(.text.protocol_init) refers to handle_console_pid.o(.bss.recv_buf) for [Anonymous Symbol]
    handle_console_pid.o(.ARM.exidx.text.protocol_init) refers to handle_console_pid.o(.text.protocol_init) for [Anonymous Symbol]
    handle_console_pid.o(.text.receiving_process) refers to handle_console_pid.o(.bss.parser) for [Anonymous Symbol]
    handle_console_pid.o(.ARM.exidx.text.receiving_process) refers to handle_console_pid.o(.text.receiving_process) for [Anonymous Symbol]
    handle_console_pid.o(.text.set_computer_value) refers to usart_handle.o(.text.sendUartBytes) for sendUartBytes
    handle_console_pid.o(.text.set_computer_value) refers to handle_console_pid.o(.bss.set_computer_value.set_packet) for [Anonymous Symbol]
    handle_console_pid.o(.ARM.exidx.text.set_computer_value) refers to handle_console_pid.o(.text.set_computer_value) for [Anonymous Symbol]
    puts.o(.text) refers to main.o(.text.fputc) for fputc
    puts.o(.text) refers to main.o(.bss.__stdout) for __stdout
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    d2f.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(.text) refers to ddiv.o(.constdata) for .constdata
    ddiv.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfixi.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflti.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fadd) for _fadd1
    faddsub.o(x$fpl$fsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fsub) refers to faddsub.o(x$fpl$fadd) for _fadd1
    fdiv.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(.text) refers to fdiv.o(.constdata) for .constdata
    fdiv.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixi.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflti.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32g030xx.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to main.o(.text._sys_exit) for _sys_exit
    defsig_exit.o(.text) refers to main.o(.text._sys_exit) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to main.o(.text._sys_exit) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to main.o(.text._ttywrch) for _ttywrch
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.text.millis), (8 bytes).
    Removing main.o(.ARM.exidx.text.millis), (8 bytes).
    Removing main.o(.ARM.exidx.text._sys_exit), (8 bytes).
    Removing main.o(.text._ttywrch), (2 bytes).
    Removing main.o(.ARM.exidx.text._ttywrch), (8 bytes).
    Removing main.o(.text.fputc), (36 bytes).
    Removing main.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.text.Error_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing main.o(.bss.errflag), (4 bytes).
    Removing main.o(.bss.err_flag), (1 bytes).
    Removing main.o(.bss.usart_fault_time), (4 bytes).
    Removing main.o(.bss.time_1ms), (4 bytes).
    Removing main.o(.bss.msta), (1 bytes).
    Removing main.o(.bss.__stdout), (84 bytes).
    Removing main.o(.bss.current_err1), (2 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing motorcontrol.o(.text), (0 bytes).
    Removing motorcontrol.o(.ARM.exidx.text.MX_MotorControl_Init), (8 bytes).
    Removing mc_api.o(.text), (0 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_StartMotor1), (8 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_StopMotor1), (8 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_ProgramSpeedRampMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_ProgramSpeedRampMotor1_F), (20 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_ProgramSpeedRampMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_ProgramTorqueRampMotor1), (20 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_ProgramTorqueRampMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_ProgramTorqueRampMotor1_F), (20 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_ProgramTorqueRampMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_SetCurrentReferenceMotor1), (20 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_SetCurrentReferenceMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_SetCurrentReferenceMotor1_F), (20 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_SetCurrentReferenceMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetCommandStateMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetCommandStateMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_StopSpeedRampMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_StopSpeedRampMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_StopRampMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_StopRampMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_HasRampCompletedMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_HasRampCompletedMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetMecSpeedReferenceMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetMecSpeedReferenceMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetMecSpeedAverageMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetMecSpeedAverageMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetLastRampFinalSpeedMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1_F), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetLastRampFinalSpeedMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetControlModeMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetControlModeMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetImposedDirectionMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetImposedDirectionMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetSpeedSensorReliabilityMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetSpeedSensorReliabilityMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetPhaseCurrentAmplitudeMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetPhaseCurrentAmplitudeMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetPhaseVoltageAmplitudeMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetPhaseVoltageAmplitudeMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetIabMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIabMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetIabMotor1_F), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIabMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetIalphabetaMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIalphabetaMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetIqdMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIqdMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetIqdMotor1_F), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIqdMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetIqdrefMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIqdrefMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetIqdrefMotor1_F), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIqdrefMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetVqdMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetVqdMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetValphabetaMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetValphabetaMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetElAngledppMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetElAngledppMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetTerefMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetTerefMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetTerefMotor1_F), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetTerefMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_Clear_IqdrefMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_Clear_IqdrefMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_AcknowledgeFaultMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_AcknowledgeFaultMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetOccurredFaultsMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetOccurredFaultsMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetCurrentFaultsMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetCurrentFaultsMotor1), (8 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetSTMStateMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_SetPolarizationOffsetsMotor1), (20 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_SetPolarizationOffsetsMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetPolarizationOffsetsMotor1), (20 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetPolarizationOffsetsMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_StartPolarizationOffsetsMeasurementMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_StartPolarizationOffsetsMeasurementMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetAveragePowerMotor1_F), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetAveragePowerMotor1_F), (8 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_ProfilerCommand), (8 bytes).
    Removing mc_config.o(.text), (0 bytes).
    Removing mc_config.o(.data.FW_M1), (32 bytes).
    Removing mc_config.o(.data.PIDFluxWeakeningHandle_M1), (44 bytes).
    Removing mc_config.o(.data.pFW), (4 bytes).
    Removing mcp_config.o(.text), (0 bytes).
    Removing mc_tasks.o(.text), (0 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.MCboot), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.FOC_Clear), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.MC_RunMotorControlTasks), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.MC_Scheduler), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_SafetyTask), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_MF_StopProcessing), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_SetStopPermanencyTimeM1), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_MediumFrequencyTaskM1), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_SetChargeBootCapDelayM1), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_ChargeBootCapDelayHasElapsedM1), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.FOC_InitAdditionalMethods), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.FOC_CalcCurrRef), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_StopPermanencyTimeHasElapsedM1), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_HighFrequencyTask), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_SafetyTask_PWMOFF), (8 bytes).
    Removing mc_tasks.o(.text.GetMCI), (16 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.GetMCI), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_HardwareFaultTask), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.UI_HandleStartStopButton_cb), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.mc_lock_pins), (8 bytes).
    Removing mc_tasks.o(.bss.cbv), (4 bytes).
    Removing mc_tasks.o(.bss.test_table), (16 bytes).
    Removing pwm_curr_fdbk.o(.text), (0 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_Clear), (20 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_Clear), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_SetOffsetCalib), (12 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetOffsetCalib), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_GetOffsetCalib), (12 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetOffsetCalib), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetPhaseCurrents), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetPhaseVoltage), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SwitchOffPWM), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SwitchOnPWM), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_CurrentReadingCalibr), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_CalcPhaseCurrentsEst), (104 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_CalcPhaseCurrentsEst), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_TurnOnLowSides), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_TurnOnLowSides), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_CheckOverCurrent), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_OCPSetReferenceVoltage), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_OCPSetReferenceVoltage), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_GetTurnOnLowSidesAction), (6 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetTurnOnLowSidesAction), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_DPWM_ModeEnable), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_DPWM_ModeEnable), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_DPWM_ModeDisable), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_DPWM_ModeDisable), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_GetDPWM_Mode), (6 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetDPWM_Mode), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeEnable), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeEnable), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeDisable), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeDisable), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeSetDuty), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeSetDuty), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_SetAlignFlag), (6 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetAlignFlag), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterGetPhaseCurrentsCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterGetPhaseCurrentsCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterSwitchOffPwmCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSwitchOffPwmCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterSwitchonPwmCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSwitchonPwmCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterReadingCalibrationCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterReadingCalibrationCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterTurnOnLowSidesCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterTurnOnLowSidesCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterSampPointSectXCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSampPointSectXCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterIsOverCurrentOccurredCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterIsOverCurrentOccurredCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterOCPSetRefVoltageCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterOCPSetRefVoltageCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeEnableCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeEnableCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeDisableCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeDisableCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeSetDutyCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeSetDutyCallBack), (8 bytes).
    Removing regular_conversion_manager.o(.text), (0 bytes).
    Removing regular_conversion_manager.o(.text.RCM_RegisterRegConv_WithCB), (344 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_RegisterRegConv_WithCB), (8 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_RegisterRegConv), (8 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_ExecRegularConv), (8 bytes).
    Removing regular_conversion_manager.o(.text.RCM_RequestUserConv), (32 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_RequestUserConv), (8 bytes).
    Removing regular_conversion_manager.o(.text.RCM_GetUserConv), (28 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_GetUserConv), (8 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_ExecUserConv), (8 bytes).
    Removing regular_conversion_manager.o(.text.RCM_GetUserConvState), (12 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_GetUserConvState), (8 bytes).
    Removing regular_conversion_manager.o(.text.RCM_PauseRegularConv), (68 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_PauseRegularConv), (8 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_ExecNextConv), (8 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_ReadOngoingConv), (8 bytes).
    Removing mc_math.o(.text), (0 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_Clarke), (8 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_Park), (8 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_Trig_Functions), (8 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_Rev_Park), (8 bytes).
    Removing mc_math.o(.text.MCM_Sqrt), (256 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_Sqrt), (8 bytes).
    Removing mc_math.o(.text.MCM_floatToIntBit), (2 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_floatToIntBit), (8 bytes).
    Removing mc_interface.o(.text), (0 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_Init), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_ExecSpeedRamp), (8 bytes).
    Removing mc_interface.o(.text.MCI_ExecSpeedRamp_F), (48 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_ExecSpeedRamp_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_ExecTorqueRamp), (8 bytes).
    Removing mc_interface.o(.text.MCI_ExecTorqueRamp_F), (36 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_ExecTorqueRamp_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_SetCurrentReferences), (8 bytes).
    Removing mc_interface.o(.text.MCI_SetCurrentReferences_F), (56 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_SetCurrentReferences_F), (8 bytes).
    Removing mc_interface.o(.text.MCI_SetSpeedMode), (26 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_SetSpeedMode), (8 bytes).
    Removing mc_interface.o(.text.MCI_SetOpenLoopCurrent), (26 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_SetOpenLoopCurrent), (8 bytes).
    Removing mc_interface.o(.text.MCI_SetOpenLoopVoltage), (24 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_SetOpenLoopVoltage), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StartMotor), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetSTMState), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetOccurredFaults), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetCurrentFaults), (8 bytes).
    Removing mc_interface.o(.text.MCI_StartWithMeasurementOffset), (56 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StartWithMeasurementOffset), (8 bytes).
    Removing mc_interface.o(.text.MCI_StartOffsetMeasurments), (56 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StartOffsetMeasurments), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetCalibratedOffsetsMotor), (24 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetCalibratedOffsetsMotor), (8 bytes).
    Removing mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor), (58 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_SetCalibratedOffsetsMotor), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StopMotor), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_FaultAcknowledged), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_FaultProcessing), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_ExecBufferedCommands), (8 bytes).
    Removing mc_interface.o(.text.MCI_IsCommandAcknowledged), (18 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_IsCommandAcknowledged), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetFaultState), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetControlMode), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetImposedMotorDirection), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalSpeed), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalTorque), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalDuration), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetLastRampFinalSpeed_F), (24 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalSpeed_F), (8 bytes).
    Removing mc_interface.o(.text.MCI_RampCompleted), (24 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_RampCompleted), (8 bytes).
    Removing mc_interface.o(.text.MCI_StopSpeedRamp), (10 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StopSpeedRamp), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StopRamp), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetSpdSensorReliability), (14 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetSpdSensorReliability), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetAvrgMecSpeedUnit), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetAvrgMecSpeed_F), (22 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetAvrgMecSpeed_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetMecSpeedRefUnit), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetMecSpeedRef_F), (18 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetMecSpeedRef_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIab), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetIab_F), (64 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIab_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIalphabeta), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIqd), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetIqd_F), (68 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIqd_F), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetIqdHF), (12 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIqdHF), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIqdref), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetIqdref_F), (68 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIqdref_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetVqd), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetValphabeta), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetElAngledpp), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetElAngledpp), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetTeref), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetTeref_F), (32 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetTeref_F), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetPhaseCurrentAmplitude), (40 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetPhaseCurrentAmplitude), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetPhaseVoltageAmplitude), (40 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetPhaseVoltageAmplitude), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_Clear_Iqdref), (8 bytes).
    Removing stm32g0xx_mc_it.o(.text), (0 bytes).
    Removing stm32g0xx_mc_it.o(.ARM.exidx.text.DMA1_Channel1_IRQHandler), (8 bytes).
    Removing stm32g0xx_mc_it.o(.ARM.exidx.text.TIM1_BRK_UP_TRG_COM_IRQHandler), (8 bytes).
    Removing stm32g0xx_mc_it.o(.ARM.exidx.text.DMA1_Channel2_3_IRQHandler), (8 bytes).
    Removing stm32g0xx_mc_it.o(.ARM.exidx.text.USART2_IRQHandler), (8 bytes).
    Removing stm32g0xx_mc_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing stm32g0xx_mc_it.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing stm32g0xx_mc_it.o(.ARM.exidx.text.EXTI4_15_IRQHandler), (8 bytes).
    Removing mc_parameters.o(.text), (0 bytes).
    Removing register_interface.o(.text), (0 bytes).
    Removing register_interface.o(.ARM.exidx.text.RI_SetRegCommandParser), (8 bytes).
    Removing register_interface.o(.ARM.exidx.text.RI_GetRegCommandParser), (8 bytes).
    Removing register_interface.o(.ARM.exidx.text.RI_GetIDSize), (8 bytes).
    Removing register_interface.o(.ARM.exidx.text.RI_GetPtrReg), (8 bytes).
    Removing usart_aspep_driver.o(.text), (0 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_INIT), (8 bytes).
    Removing usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_TX), (76 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_DAMCONFIG_TX), (8 bytes).
    Removing usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_RX), (84 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_DAMCONFIG_RX), (8 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_SEND_PACKET), (8 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_RECEIVE_BUFFER), (8 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_IDLE_ENABLE), (8 bytes).
    Removing mc_configuration_registers.o(.text), (0 bytes).
    Removing aspep.o(.text), (0 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_start), (8 bytes).
    Removing aspep.o(.text.ASPEP_sendBeacon), (136 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_sendBeacon), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_TXframeProcess), (8 bytes).
    Removing aspep.o(.text.ASPEP_sendPing), (144 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_sendPing), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_getBuffer), (8 bytes).
    Removing aspep.o(.text.ASPEP_CheckBeacon), (136 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_CheckBeacon), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_sendPacket), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_HWDataTransmittedIT), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_RXframeProcess), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_HWDataReceivedIT), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_HWDMAReset), (8 bytes).
    Removing mc_app_hooks.o(.text), (0 bytes).
    Removing mc_app_hooks.o(.ARM.exidx.text.MC_APP_BootHook), (8 bytes).
    Removing mc_app_hooks.o(.ARM.exidx.text.MC_APP_PostMediumFrequencyHook_M1), (8 bytes).
    Removing stm32g0xx_it.o(.text), (0 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.TIM14_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_msp.o(.text), (0 bytes).
    Removing stm32g0xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32g0xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_Base_MspInit), (8 bytes).
    Removing stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspDeInit), (40 bytes).
    Removing stm32g0xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit), (8 bytes).
    Removing watch_data.o(.text), (0 bytes).
    Removing user_logic.o(.text), (0 bytes).
    Removing user_logic.o(.text.UART_Emulator_Debug), (120 bytes).
    Removing user_logic.o(.ARM.exidx.text.UART_Emulator_Debug), (8 bytes).
    Removing user_logic.o(.text.User_Motor_Control_M1), (152 bytes).
    Removing user_logic.o(.ARM.exidx.text.User_Motor_Control_M1), (8 bytes).
    Removing user_logic.o(.text.UI_Process), (124 bytes).
    Removing user_logic.o(.ARM.exidx.text.UI_Process), (8 bytes).
    Removing user_logic.o(.data.Acc_M1), (2 bytes).
    Removing stm32g0xx_ll_utils.o(.text), (0 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_Init1msTick), (32 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_mDelay), (68 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_mDelay), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI), (136 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem), (356 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE), (164 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_SetFlashLatency), (96 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency), (8 bytes).
    Removing stm32g0xx_ll_exti.o(.text), (0 bytes).
    Removing stm32g0xx_ll_exti.o(.text.LL_EXTI_DeInit), (44 bytes).
    Removing stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DeInit), (8 bytes).
    Removing stm32g0xx_ll_exti.o(.text.LL_EXTI_Init), (180 bytes).
    Removing stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_Init), (8 bytes).
    Removing stm32g0xx_ll_exti.o(.text.LL_EXTI_StructInit), (12 bytes).
    Removing stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_StructInit), (8 bytes).
    Removing stm32g0xx_ll_gpio.o(.text), (0 bytes).
    Removing stm32g0xx_ll_gpio.o(.text.LL_GPIO_DeInit), (108 bytes).
    Removing stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_DeInit), (8 bytes).
    Removing stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_Init), (8 bytes).
    Removing stm32g0xx_ll_gpio.o(.text.LL_GPIO_StructInit), (24 bytes).
    Removing stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_StructInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text), (0 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_CommonDeInit), (28 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonDeInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_CommonInit), (36 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_CommonStructInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonStructInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_DeInit), (460 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_DeInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_Init), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_StructInit), (16 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_StructInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_Init), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_REG_StructInit), (20 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_StructInit), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text), (0 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_DeInit), (224 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_DeInit), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_Init), (120 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_Init), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_StructInit), (10 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_StructInit), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text), (0 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_DeInit), (132 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq), (276 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq), (200 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2SClockFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq), (196 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetRTCClockFreq), (64 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRTCClockFreq), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text), (0 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit), (176 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig), (1052 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig), (520 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq), (136 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_MCOConfig), (88 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq), (40 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (152 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig), (52 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_EnableCSS), (20 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_EnableLSECSS), (16 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableLSECSS), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_DisableLSECSS), (16 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableLSECSS), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (44 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_LSECSSCallback), (2 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_LSECSSCallback), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetResetSource), (28 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetResetSource), (8 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text), (0 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig), (384 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (60 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq), (432 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO), (152 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSCO), (8 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO), (92 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableLSCO), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text), (0 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_Program), (408 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.FLASH_WaitForLastOperation), (92 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_Program_IT), (344 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program_IT), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_IRQHandler), (176 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback), (2 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OperationErrorCallback), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback), (2 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_EndOfOperationCallback), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_Unlock), (40 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Unlock), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_Lock), (24 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Lock), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_OB_Unlock), (40 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Unlock), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_OB_Lock), (24 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Lock), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_OB_Launch), (20 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Launch), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_GetError), (12 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_GetError), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.bss.pFlash), (28 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text), (0 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase), (192 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase), (8 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text.FLASH_PageErase), (32 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_PageErase), (8 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT), (128 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase_IT), (8 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram), (224 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBProgram), (8 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig), (84 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBGetConfig), (8 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_FlashEmptyCheck), (16 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_FlashEmptyCheck), (8 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_ForceFlashEmpty), (20 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_ForceFlashEmpty), (8 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text.FLASH_FlushCaches), (44 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_FlushCaches), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text), (0 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init), (452 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_DeInit), (288 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_ReadPin), (10 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin), (16 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_TogglePin), (16 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_LockPin), (40 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler), (40 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Rising_Callback), (2 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Rising_Callback), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Falling_Callback), (2 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Falling_Callback), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text), (0 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_Init), (252 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_DeInit), (176 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_Start), (144 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT), (204 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort), (120 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT), (120 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_PollForTransfer), (364 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_IRQHandler), (228 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_RegisterCallback), (70 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback), (102 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_GetState), (6 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_GetError), (4 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError), (8 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text), (0 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxSync), (84 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ConfigMuxSync), (8 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxRequestGenerator), (80 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ConfigMuxRequestGenerator), (8 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_EnableMuxRequestGenerator), (32 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_EnableMuxRequestGenerator), (8 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_DisableMuxRequestGenerator), (32 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_DisableMuxRequestGenerator), (8 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_MUX_IRQHandler), (96 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MUX_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text), (0 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_DeInit), (24 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (20 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (20 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin), (28 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin), (24 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (76 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (64 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode), (36 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (16 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (16 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (16 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (16 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text), (0 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBatteryCharging), (28 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBatteryCharging), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBatteryCharging), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBatteryCharging), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableInternalWakeUpLine), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableInternalWakeUpLine), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableInternalWakeUpLine), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableInternalWakeUpLine), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableGPIOPullUp), (112 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullUp), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableGPIOPullUp), (96 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullUp), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableGPIOPullDown), (132 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullDown), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableGPIOPullDown), (64 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullDown), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePullUpPullDownConfig), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePullUpPullDownConfig), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePullUpPullDownConfig), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePullUpPullDownConfig), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown), (16 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown), (16 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange), (16 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling), (128 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowPowerRunMode), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowPowerRunMode), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode), (112 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowPowerRunMode), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text), (0 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ), (32 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SystemReset), (32 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_GetPriority), (52 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (24 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (28 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (24 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (28 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_MPU_Enable), (24 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_MPU_Disable), (16 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion), (84 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32g0xx_hal.o(.text), (0 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_MspInit), (2 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_DeInit), (36 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SetTickFreq), (36 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_Delay), (36 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SuspendTick), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_ResumeTick), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetREVID), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetDEVID), (20 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster), (20 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster), (20 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableRemap), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableRemap), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableRemap), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableRemap), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableClampingDiode), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableClampingDiode), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableClampingDiode), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableClampingDiode), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text), (0 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_SetConfigLine), (176 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_SetConfigLine), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetConfigLine), (156 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetConfigLine), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_ClearConfigLine), (116 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearConfigLine), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_RegisterCallback), (34 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_RegisterCallback), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetHandle), (14 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetHandle), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_IRQHandler), (68 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetPending), (40 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetPending), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_ClearPending), (36 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearPending), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_GenerateSWI), (28 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GenerateSWI), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text), (0 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_MspInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_Base_SetConfig), (152 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_Base_SetConfig), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_DeInit), (80 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start), (80 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Stop), (44 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT), (88 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT), (60 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA), (156 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt), (30 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt), (10 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMAError), (86 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA), (72 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Init), (212 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_MspInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_DeInit), (80 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start), (264 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd), (26 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_CCxChannelCmd), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Stop), (176 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT), (292 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT), (196 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA), (616 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseCplt), (104 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt), (56 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA), (284 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Init), (212 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit), (80 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start), (264 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Stop), (176 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT), (292 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT), (196 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA), (616 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA), (284 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Init), (212 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_MspInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_DeInit), (80 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start), (328 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Stop), (156 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT), (348 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT), (184 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA), (520 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMACaptureCplt), (112 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt), (56 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA), (276 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init), (216 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit), (68 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start), (120 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop), (136 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT), (136 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT), (152 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Init), (300 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit), (68 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start), (148 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop), (148 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT), (182 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT), (184 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA), (536 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA), (216 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel), (728 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_OC2_SetConfig), (136 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_OC2_SetConfig), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel), (380 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_TI1_SetConfig), (68 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_SetConfig), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel), (872 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel), (532 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart), (22 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart), (360 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMATriggerCplt), (30 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt), (10 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop), (140 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart), (22 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart), (360 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop), (140 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_GenerateEvent), (34 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear), (268 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_ETR_SetConfig), (22 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_ETR_SetConfig), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource), (348 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input), (16 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro), (78 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig), (212 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT), (78 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue), (56 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_ErrorCallback), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_GetState), (6 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_GetState), (6 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_GetState), (6 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_GetState), (6 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState), (6 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState), (6 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_GetActiveChannel), (4 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_GetChannelState), (56 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetChannelState), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurstState), (6 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurstState), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.rodata.cst16), (32 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text), (0 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init), (196 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit), (2 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit), (68 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit), (2 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start), (120 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop), (64 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT), (124 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT), (72 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA), (188 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA), (84 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start), (164 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop), (132 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT), (208 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT), (184 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA), (380 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt), (104 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMADelayPulseNCplt), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN), (64 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMAErrorCCxN), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA), (192 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start), (164 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop), (132 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT), (208 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT), (184 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA), (380 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA), (192 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start), (98 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop), (120 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT), (110 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT), (136 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent), (92 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT), (92 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA), (124 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt), (16 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationCplt), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt), (16 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization), (96 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime), (180 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakInput), (94 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakInput), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig), (40 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_TISelection), (76 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_TISelection), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_GroupChannel5), (50 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GroupChannel5), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_DisarmBreakInput), (76 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_DisarmBreakInput), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ReArmBreakInput), (146 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ReArmBreakInput), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback), (2 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_Break2Callback), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_GetState), (6 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_GetChannelNState), (32 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GetChannelNState), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text), (0 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_DeInit), (148 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_DeInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_StructInit), (16 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_Init), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_OC_StructInit), (20 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_Init), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_IC_StructInit), (14 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_IC_Init), (226 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_Init), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_ENCODER_StructInit), (26 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_ENCODER_Init), (96 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_Init), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_StructInit), (12 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init), (88 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_Init), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_StructInit), (22 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_Init), (8 bytes).
    Removing stm32g0xx_ll_usart.o(.text), (0 bytes).
    Removing stm32g0xx_ll_usart.o(.text.LL_USART_DeInit), (72 bytes).
    Removing stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_DeInit), (8 bytes).
    Removing stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_Init), (8 bytes).
    Removing stm32g0xx_ll_usart.o(.text.LL_USART_StructInit), (24 bytes).
    Removing stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_StructInit), (8 bytes).
    Removing stm32g0xx_ll_usart.o(.text.LL_USART_ClockInit), (38 bytes).
    Removing stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockInit), (8 bytes).
    Removing stm32g0xx_ll_usart.o(.text.LL_USART_ClockStructInit), (12 bytes).
    Removing stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockStructInit), (8 bytes).
    Removing system_stm32g0xx.o(.text), (0 bytes).
    Removing system_stm32g0xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32g0xx.o(.text.SystemCoreClockUpdate), (144 bytes).
    Removing system_stm32g0xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing bus_voltage_sensor.o(.text), (0 bytes).
    Removing bus_voltage_sensor.o(.text.VBS_GetBusVoltage_d), (4 bytes).
    Removing bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetBusVoltage_d), (8 bytes).
    Removing bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetAvBusVoltage_d), (8 bytes).
    Removing bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetAvBusVoltage_V), (8 bytes).
    Removing bus_voltage_sensor.o(.text.VBS_CheckVbus), (4 bytes).
    Removing bus_voltage_sensor.o(.ARM.exidx.text.VBS_CheckVbus), (8 bytes).
    Removing circle_limitation.o(.text), (0 bytes).
    Removing circle_limitation.o(.ARM.exidx.text.Circle_Limitation), (8 bytes).
    Removing digital_output.o(.text), (0 bytes).
    Removing digital_output.o(.text.DOUT_SetOutputState), (36 bytes).
    Removing digital_output.o(.ARM.exidx.text.DOUT_SetOutputState), (8 bytes).
    Removing digital_output.o(.text.DOUT_GetOutputState), (4 bytes).
    Removing digital_output.o(.ARM.exidx.text.DOUT_GetOutputState), (8 bytes).
    Removing ntc_temperature_sensor.o(.text), (0 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_SetFaultState), (8 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_Init), (8 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_Clear), (8 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_CalcAvTemp), (8 bytes).
    Removing ntc_temperature_sensor.o(.text.NTC_GetAvTemp_d), (4 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_GetAvTemp_d), (8 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_GetAvTemp_C), (8 bytes).
    Removing ntc_temperature_sensor.o(.text.NTC_CheckTemp), (4 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_CheckTemp), (8 bytes).
    Removing open_loop.o(.text), (0 bytes).
    Removing open_loop.o(.text.OL_Init), (8 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_Init), (8 bytes).
    Removing open_loop.o(.text.OL_VqdConditioning), (4 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_VqdConditioning), (8 bytes).
    Removing open_loop.o(.text.OL_UpdateVoltage), (4 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_UpdateVoltage), (8 bytes).
    Removing open_loop.o(.text.OL_GetVoltage), (6 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_GetVoltage), (8 bytes).
    Removing open_loop.o(.text.OL_Calc), (30 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_Calc), (8 bytes).
    Removing open_loop.o(.text.OL_VF), (4 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_VF), (8 bytes).
    Removing pid_regulator.o(.text), (0 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_HandleInit), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKP), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKI), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKP), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKI), (8 bytes).
    Removing pid_regulator.o(.text.PID_GetDefaultKP), (6 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetDefaultKP), (8 bytes).
    Removing pid_regulator.o(.text.PID_GetDefaultKI), (6 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetDefaultKI), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetIntegralTerm), (8 bytes).
    Removing pid_regulator.o(.text.PID_GetKPDivisor), (4 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKPDivisor), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKPDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKPDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKIDivisor), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKIDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKIDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetUpperIntegralTermLimit), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetLowerIntegralTermLimit), (8 bytes).
    Removing pid_regulator.o(.text.PID_SetLowerOutputLimit), (4 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetLowerOutputLimit), (8 bytes).
    Removing pid_regulator.o(.text.PID_SetUpperOutputLimit), (4 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetUpperOutputLimit), (8 bytes).
    Removing pid_regulator.o(.text.PID_SetPrevError), (4 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetPrevError), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKD), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKD), (8 bytes).
    Removing pid_regulator.o(.text.PID_GetKDDivisor), (4 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKDDivisor), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKDDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKDDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PI_Controller), (8 bytes).
    Removing pid_regulator.o(.text.PID_Controller), (66 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_Controller), (8 bytes).
    Removing pqd_motor_power_measurement.o(.text), (0 bytes).
    Removing pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_CalcElMotorPower), (8 bytes).
    Removing pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_Clear), (8 bytes).
    Removing pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_GetAvrgElMotorPowerW), (8 bytes).
    Removing pwm_common.o(.text), (0 bytes).
    Removing pwm_common.o(.ARM.exidx.text.waitForPolarizationEnd), (8 bytes).
    Removing r_divider_bus_voltage_sensor.o(.text), (0 bytes).
    Removing r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_Init), (8 bytes).
    Removing r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_Clear), (8 bytes).
    Removing r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbusFilt), (316 bytes).
    Removing r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_CalcAvVbusFilt), (8 bytes).
    Removing r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_CheckFaultState), (8 bytes).
    Removing r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_CalcAvVbus), (8 bytes).
    Removing ramp_ext_mngr.o(.text), (0 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_Init), (8 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_Calc), (8 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_ExecRamp), (8 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.getScalingFactor), (8 bytes).
    Removing ramp_ext_mngr.o(.text.REMNG_GetValue), (14 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_GetValue), (8 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_RampCompleted), (8 bytes).
    Removing ramp_ext_mngr.o(.text.REMNG_StopRamp), (8 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_StopRamp), (8 bytes).
    Removing revup_ctrl.o(.text), (0 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Init), (8 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Clear), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_OTF_Exec), (488 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_OTF_Exec), (8 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Exec), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_IsAlignStageNow), (18 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_IsAlignStageNow), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_Completed), (8 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Completed), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_Stop), (28 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Stop), (8 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_FirstAccelerationStageReached), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_SetPhaseDurationms), (10 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseDurationms), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_SetPhaseFinalMecSpeedUnit), (10 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseFinalMecSpeedUnit), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_SetPhaseFinalTorque), (10 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseFinalTorque), (8 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_SetPhase), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_GetPhaseDurationms), (10 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseDurationms), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_GetPhaseFinalMecSpeedUnit), (12 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseFinalMecSpeedUnit), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_GetPhaseFinalTorque), (12 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseFinalTorque), (8 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_GetNumberOfPhases), (8 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_GetPhase), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_Get_SCLowsideOTF_Status), (6 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Get_SCLowsideOTF_Status), (8 bytes).
    Removing speed_pos_fdbk.o(.text), (0 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElAngle), (8 bytes).
    Removing speed_pos_fdbk.o(.text.SPD_GetMecAngle), (4 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetMecAngle), (8 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetAvrgMecSpeedUnit), (8 bytes).
    Removing speed_pos_fdbk.o(.text.SPD_GetElSpeedDpp), (6 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElSpeedDpp), (8 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetInstElSpeedDpp), (8 bytes).
    Removing speed_pos_fdbk.o(.text.SPD_Check), (12 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_Check), (8 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_IsMecSpeedReliable), (8 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetS16Speed), (8 bytes).
    Removing speed_pos_fdbk.o(.text.SPD_GetElToMecRatio), (4 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElToMecRatio), (8 bytes).
    Removing speed_pos_fdbk.o(.text.SPD_SetElToMecRatio), (4 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_SetElToMecRatio), (8 bytes).
    Removing speed_torq_ctrl.o(.text), (0 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_Init), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_SetSpeedSensor), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetSpeedSensor), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_Clear), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMecSpeedRefUnit), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetTorqueRef), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_SetControlMode), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_GetControlMode), (4 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetControlMode), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_ExecRamp), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_StopRamp), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_CalcTorqueReference), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnitDefault), (6 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMecSpeedRefUnitDefault), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_GetMaxAppPositiveMecSpeedUnit), (4 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMaxAppPositiveMecSpeedUnit), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_GetMinAppNegativeMecSpeedUnit), (6 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMinAppNegativeMecSpeedUnit), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_RampCompleted), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_RampCompleted), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_StopSpeedRamp), (18 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_StopSpeedRamp), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetDefaultIqdref), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_SetNominalCurrent), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_SetNominalCurrent), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_ForceSpeedReferenceToCurrentSpeed), (8 bytes).
    Removing speed_torq_ctrl.o(.bss.my), (4 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text), (0 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_Init), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_Clear), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Return), (2 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_Return), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_CalcElAngle), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_CalcAvrgMecSpeedUnit), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_CalcAvrgElSpeedDpp), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_IsObserverConverged), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetEstimatedBemf), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetEstimatedCurrent), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetObserverGains), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_SetObserverGains), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_GetPLLGains), (28 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_GetPLLGains), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_SetPLLGains), (24 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_SetPLLGains), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_PLL_SetMecAngle), (2 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_SetMecAngle), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_OTF_ResetPLL), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_ResetPLL), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_SetPLL), (36 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_SetPLL), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetEstimatedBemfLevel), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetObservedBemfLevel), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_PLL_BemfConsistencyCheckSwitch), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_BemfConsistencyCheckSwitch), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsBemfConsistent), (6 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_IsBemfConsistent), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_IsVarianceTight), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_ForceConvergency1), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_ForceConvergency2), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_SetMinStartUpValidSpeedUnit), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_SetMinStartUpValidSpeedUnit), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_SetDirection), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_SetDirection), (8 bytes).
    Removing virtual_speed_sensor.o(.text), (0 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_Init), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_Clear), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_CalcElAngle), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_CalcAvrgMecSpeedUnit), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetMecAngle), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetMecAcceleration), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_RampCompleted), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_RampCompleted), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_GetLastRampFinalSpeed), (6 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_GetLastRampFinalSpeed), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetStartTransition), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_IsTransitionOngoing), (16 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_IsTransitionOngoing), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_TransitionEnded), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_SetCopyObserver), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetCopyObserver), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_SetElAngle), (6 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetElAngle), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.text), (0 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_Init), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetOffsetCalib), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetOffsetCalib), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_CurrentReadingCalibration), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_HFCurrentsCalibrationAB), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointCalibration), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SwitchOnPWM), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SwitchOffPWM), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_HFCurrentsCalibrationC), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetPhaseCurrents), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents_OVM), (608 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetPhaseCurrents_OVM), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_WriteTIMRegisters), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointSectX), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX_OVM), (120 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointSectX_OVM), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_TurnOnLowSides), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_TIMx_UP_IRQHandler), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_OVERCURRENT_IRQHandler), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_OVERVOLTAGE_IRQHandler), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_IsOverCurrentOccurred), (8 bytes).
    Removing mcp.o(.text), (0 bytes).
    Removing mcp.o(.ARM.exidx.text.MCP_ReceivedPacket), (8 bytes).
    Removing mcp.o(.text.MCP_RegisterCallBack), (24 bytes).
    Removing mcp.o(.ARM.exidx.text.MCP_RegisterCallBack), (8 bytes).
    Removing mcpa.o(.text), (0 bytes).
    Removing mcpa.o(.ARM.exidx.text.MCPA_dataLog), (8 bytes).
    Removing mcpa.o(.ARM.exidx.text.MCPA_flushDataLog), (8 bytes).
    Removing mcpa.o(.ARM.exidx.text.MCPA_cfgLog), (8 bytes).
    Removing flux_weakening_ctrl.o(.text), (0 bytes).
    Removing flux_weakening_ctrl.o(.text.FW_Init), (10 bytes).
    Removing flux_weakening_ctrl.o(.ARM.exidx.text.FW_Init), (8 bytes).
    Removing flux_weakening_ctrl.o(.text.FW_Clear), (24 bytes).
    Removing flux_weakening_ctrl.o(.ARM.exidx.text.FW_Clear), (8 bytes).
    Removing flux_weakening_ctrl.o(.text.FW_CalcCurrRef), (176 bytes).
    Removing flux_weakening_ctrl.o(.ARM.exidx.text.FW_CalcCurrRef), (8 bytes).
    Removing flux_weakening_ctrl.o(.text.FW_DataProcess), (38 bytes).
    Removing flux_weakening_ctrl.o(.ARM.exidx.text.FW_DataProcess), (8 bytes).
    Removing flux_weakening_ctrl.o(.text.FW_SetVref), (4 bytes).
    Removing flux_weakening_ctrl.o(.ARM.exidx.text.FW_SetVref), (8 bytes).
    Removing flux_weakening_ctrl.o(.text.FW_GetVref), (4 bytes).
    Removing flux_weakening_ctrl.o(.ARM.exidx.text.FW_GetVref), (8 bytes).
    Removing flux_weakening_ctrl.o(.text.FW_GetAvVAmplitude), (6 bytes).
    Removing flux_weakening_ctrl.o(.ARM.exidx.text.FW_GetAvVAmplitude), (8 bytes).
    Removing flux_weakening_ctrl.o(.text.FW_GetAvVPercentage), (24 bytes).
    Removing flux_weakening_ctrl.o(.ARM.exidx.text.FW_GetAvVPercentage), (8 bytes).
    Removing at24c02.o(.text), (0 bytes).
    Removing at24c02.o(.text.at24c02_writeonebyte), (48 bytes).
    Removing at24c02.o(.ARM.exidx.text.at24c02_writeonebyte), (8 bytes).
    Removing at24c02.o(.text.at24c02_readonebyte), (56 bytes).
    Removing at24c02.o(.ARM.exidx.text.at24c02_readonebyte), (8 bytes).
    Removing at24c02.o(.text.at24c02_writelenbyte), (68 bytes).
    Removing at24c02.o(.ARM.exidx.text.at24c02_writelenbyte), (8 bytes).
    Removing at24c02.o(.text.at24c02_readlenbyte), (78 bytes).
    Removing at24c02.o(.ARM.exidx.text.at24c02_readlenbyte), (8 bytes).
    Removing at24c02.o(.text.at24c02_test), (184 bytes).
    Removing at24c02.o(.ARM.exidx.text.at24c02_test), (8 bytes).
    Removing at24c02.o(.text.ee_save_data), (260 bytes).
    Removing at24c02.o(.ARM.exidx.text.ee_save_data), (8 bytes).
    Removing at24c02.o(.text.ee_read_data), (44 bytes).
    Removing at24c02.o(.ARM.exidx.text.ee_read_data), (8 bytes).
    Removing at24c02.o(.bss.ee_write_state), (1 bytes).
    Removing at24c02.o(.bss.ee_read_state), (1 bytes).
    Removing at24c02.o(.bss..L_MergedGlobals), (14 bytes).
    Removing hal_soft_iic.o(.text), (0 bytes).
    Removing hal_soft_iic.o(.text.IIC_SDA_Mode_OUT), (36 bytes).
    Removing hal_soft_iic.o(.ARM.exidx.text.IIC_SDA_Mode_OUT), (8 bytes).
    Removing hal_soft_iic.o(.text.IIC_SDA_Mode_IN), (36 bytes).
    Removing hal_soft_iic.o(.ARM.exidx.text.IIC_SDA_Mode_IN), (8 bytes).
    Removing hal_soft_iic.o(.text.iic_delay_us), (2 bytes).
    Removing hal_soft_iic.o(.ARM.exidx.text.iic_delay_us), (8 bytes).
    Removing hal_soft_iic.o(.text.I2C_Start), (84 bytes).
    Removing hal_soft_iic.o(.ARM.exidx.text.I2C_Start), (8 bytes).
    Removing hal_soft_iic.o(.text.I2C_Stop), (100 bytes).
    Removing hal_soft_iic.o(.ARM.exidx.text.I2C_Stop), (8 bytes).
    Removing hal_soft_iic.o(.text.I2C_Ack), (84 bytes).
    Removing hal_soft_iic.o(.ARM.exidx.text.I2C_Ack), (8 bytes).
    Removing hal_soft_iic.o(.text.I2C_NoAck), (84 bytes).
    Removing hal_soft_iic.o(.ARM.exidx.text.I2C_NoAck), (8 bytes).
    Removing hal_soft_iic.o(.text.I2C_WaitAck), (176 bytes).
    Removing hal_soft_iic.o(.ARM.exidx.text.I2C_WaitAck), (8 bytes).
    Removing hal_soft_iic.o(.text.I2C_WriteByte), (352 bytes).
    Removing hal_soft_iic.o(.ARM.exidx.text.I2C_WriteByte), (8 bytes).
    Removing hal_soft_iic.o(.text.I2C_ReadByte), (404 bytes).
    Removing hal_soft_iic.o(.ARM.exidx.text.I2C_ReadByte), (8 bytes).
    Removing hal_soft_iic.o(.bss.GPIO_InitStruct), (20 bytes).
    Removing usart_handle.o(.text), (0 bytes).
    Removing usart_handle.o(.text.sendUartBytes), (268 bytes).
    Removing usart_handle.o(.ARM.exidx.text.sendUartBytes), (8 bytes).
    Removing usart_handle.o(.text.usart2_send_lenth), (268 bytes).
    Removing usart_handle.o(.ARM.exidx.text.usart2_send_lenth), (8 bytes).
    Removing usart_handle.o(.text.uart_send_data_compose), (764 bytes).
    Removing usart_handle.o(.ARM.exidx.text.uart_send_data_compose), (8 bytes).
    Removing usart_handle.o(.text.usart_handle_receive_data), (324 bytes).
    Removing usart_handle.o(.ARM.exidx.text.usart_handle_receive_data), (8 bytes).
    Removing usart_handle.o(.bss.send_data), (20 bytes).
    Removing usart_handle.o(.bss.rx_sta), (1 bytes).
    Removing usart_handle.o(.bss.recvlen), (1 bytes).
    Removing usart_handle.o(.bss.rec_data_finish), (1 bytes).
    Removing usart_handle.o(.bss.rx_tmp_data), (1 bytes).
    Removing usart_handle.o(.bss..L_MergedGlobals), (21 bytes).
    Removing led_key.o(.text), (0 bytes).
    Removing led_key.o(.text.check_key_state), (104 bytes).
    Removing led_key.o(.ARM.exidx.text.check_key_state), (8 bytes).
    Removing led_key.o(.ARM.exidx.text.get_key_state), (8 bytes).
    Removing led_key.o(.ARM.exidx.text.exe_key_func), (8 bytes).
    Removing led_key.o(.text.led_show_function), (88 bytes).
    Removing led_key.o(.ARM.exidx.text.led_show_function), (8 bytes).
    Removing led_key.o(.text.led_clear), (36 bytes).
    Removing led_key.o(.ARM.exidx.text.led_clear), (8 bytes).
    Removing led_key.o(.bss.MOTOR_ERROR_INFO), (1 bytes).
    Removing app_auto.o(.text), (0 bytes).
    Removing app_auto.o(.text.wheel_pid_struct_init), (24 bytes).
    Removing app_auto.o(.ARM.exidx.text.wheel_pid_struct_init), (8 bytes).
    Removing app_auto.o(.text.speed_pid_control), (124 bytes).
    Removing app_auto.o(.ARM.exidx.text.speed_pid_control), (8 bytes).
    Removing app_auto.o(.text.auto_mode_init), (2 bytes).
    Removing app_auto.o(.ARM.exidx.text.auto_mode_init), (8 bytes).
    Removing app_auto.o(.text.auto_mode_tick), (196 bytes).
    Removing app_auto.o(.ARM.exidx.text.auto_mode_tick), (8 bytes).
    Removing app_auto.o(.bss.auto_work_time), (4 bytes).
    Removing app_auto.o(.bss.tmp_hydraulic_pressure), (4 bytes).
    Removing app_auto.o(.bss..L_MergedGlobals), (48 bytes).
    Removing app_error.o(.text), (0 bytes).
    Removing app_error.o(.text.myabs), (10 bytes).
    Removing app_error.o(.ARM.exidx.text.myabs), (8 bytes).
    Removing app_error.o(.text.error_mode_init), (8 bytes).
    Removing app_error.o(.ARM.exidx.text.error_mode_init), (8 bytes).
    Removing app_error.o(.text.error_check_init), (2 bytes).
    Removing app_error.o(.ARM.exidx.text.error_check_init), (8 bytes).
    Removing app_error.o(.text.error_check), (356 bytes).
    Removing app_error.o(.ARM.exidx.text.error_check), (8 bytes).
    Removing app_error.o(.text.error_mode_tick), (52 bytes).
    Removing app_error.o(.ARM.exidx.text.error_mode_tick), (8 bytes).
    Removing app_error.o(.bss.Loss_PhaseTime), (2 bytes).
    Removing app_error.o(.bss.LockedRotor_Time), (2 bytes).
    Removing app_error.o(.bss.LockedRotor_Start_duration), (2 bytes).
    Removing app_error.o(.bss.LockedRotor_Start_Time), (2 bytes).
    Removing app_error.o(.bss.Re_Start_duration), (2 bytes).
    Removing app_error.o(.bss.Re_Start_Time), (2 bytes).
    Removing app_error.o(.bss.EeSave_Flag), (1 bytes).
    Removing app_handle.o(.text), (0 bytes).
    Removing app_handle.o(.ARM.exidx.text.work_mode_init), (8 bytes).
    Removing app_handle.o(.text.work_mode_perfrom), (92 bytes).
    Removing app_handle.o(.ARM.exidx.text.work_mode_perfrom), (8 bytes).
    Removing app_handle.o(.text.work_mode_switch), (16 bytes).
    Removing app_handle.o(.ARM.exidx.text.work_mode_switch), (8 bytes).
    Removing app_handle.o(.rodata.g_work_mode_state), (48 bytes).
    Removing app_manual.o(.text), (0 bytes).
    Removing app_manual.o(.text.manual_mode_init), (16 bytes).
    Removing app_manual.o(.ARM.exidx.text.manual_mode_init), (8 bytes).
    Removing app_manual.o(.text.manual_mode_tick), (88 bytes).
    Removing app_manual.o(.ARM.exidx.text.manual_mode_tick), (8 bytes).
    Removing app_manual.o(.bss..L_MergedGlobals), (4 bytes).
    Removing app_standby.o(.text), (0 bytes).
    Removing app_standby.o(.text.standy_mode_init), (44 bytes).
    Removing app_standby.o(.ARM.exidx.text.standy_mode_init), (8 bytes).
    Removing app_standby.o(.text.standy_mode_tick), (36 bytes).
    Removing app_standby.o(.ARM.exidx.text.standy_mode_tick), (8 bytes).
    Removing app_type.o(.text), (0 bytes).
    Removing app_type.o(.text.get_motor_work_day), (28 bytes).
    Removing app_type.o(.ARM.exidx.text.get_motor_work_day), (8 bytes).
    Removing app_type.o(.text.restore_factory_settings), (32 bytes).
    Removing app_type.o(.ARM.exidx.text.restore_factory_settings), (8 bytes).
    Removing app_type.o(.data.data_version), (2 bytes).
    Removing app_type.o(.bss.data_power), (2 bytes).
    Removing app_type.o(.bss.data_speed), (2 bytes).
    Removing app_type.o(.bss.data_pressure), (2 bytes).
    Removing app_type.o(.bss.data_temperature), (1 bytes).
    Removing app_type.o(.bss.data_voltage), (2 bytes).
    Removing app_type.o(.bss.actual_motor_speed), (2 bytes).
    Removing app_type.o(.bss.ac_inerpressure), (1 bytes).
    Removing app_type.o(.bss.ac_outpressure), (1 bytes).
    Removing app_type.o(.bss.set_mode), (1 bytes).
    Removing app_type.o(.bss.water_temperature), (1 bytes).
    Removing app_type.o(.bss.ke_temperature), (1 bytes).
    Removing app_type.o(.bss.discharge_water), (1 bytes).
    Removing app_type.o(.bss..L_MergedGlobals), (20 bytes).
    Removing handle_console_pid.o(.text), (0 bytes).
    Removing handle_console_pid.o(.text.check_sum), (98 bytes).
    Removing handle_console_pid.o(.ARM.exidx.text.check_sum), (8 bytes).
    Removing handle_console_pid.o(.text.protocol_data_recv), (80 bytes).
    Removing handle_console_pid.o(.ARM.exidx.text.protocol_data_recv), (8 bytes).
    Removing handle_console_pid.o(.text.protocol_init), (24 bytes).
    Removing handle_console_pid.o(.ARM.exidx.text.protocol_init), (8 bytes).
    Removing handle_console_pid.o(.text.receiving_process), (656 bytes).
    Removing handle_console_pid.o(.ARM.exidx.text.receiving_process), (8 bytes).
    Removing handle_console_pid.o(.text.set_computer_value), (132 bytes).
    Removing handle_console_pid.o(.ARM.exidx.text.set_computer_value), (8 bytes).
    Removing handle_console_pid.o(.bss.parser), (12 bytes).
    Removing handle_console_pid.o(.bss.recv_buf), (128 bytes).
    Removing handle_console_pid.o(.bss.set_computer_value.set_packet), (16 bytes).

1478 unused section(s) (total 54526 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl2.c          0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/longlong.c                       0x00000000   Number         0  llmul.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  puts.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/d2f.c                    0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/cfplib/ddiv.c                   0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/cfplib/dmul.c                   0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/cfplib/fdiv.c                   0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  ffixi.o ABSOLUTE
    ../fplib/cfplib/fflt.c                   0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/cfplib/fflt.c                   0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/faddsub6m.s                     0x00000000   Number         0  faddsub.o ABSOLUTE
    ../fplib/fmul6m.s                        0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    User_Logic.c                             0x00000000   Number         0  user_logic.o ABSOLUTE
    app_auto.c                               0x00000000   Number         0  app_auto.o ABSOLUTE
    app_error.c                              0x00000000   Number         0  app_error.o ABSOLUTE
    app_handle.c                             0x00000000   Number         0  app_handle.o ABSOLUTE
    app_manual.c                             0x00000000   Number         0  app_manual.o ABSOLUTE
    app_standby.c                            0x00000000   Number         0  app_standby.o ABSOLUTE
    app_type.c                               0x00000000   Number         0  app_type.o ABSOLUTE
    aspep.c                                  0x00000000   Number         0  aspep.o ABSOLUTE
    at24c02.c                                0x00000000   Number         0  at24c02.o ABSOLUTE
    bus_voltage_sensor.c                     0x00000000   Number         0  bus_voltage_sensor.o ABSOLUTE
    circle_limitation.c                      0x00000000   Number         0  circle_limitation.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    digital_output.c                         0x00000000   Number         0  digital_output.o ABSOLUTE
    flux_weakening_ctrl.c                    0x00000000   Number         0  flux_weakening_ctrl.o ABSOLUTE
    hal_soft_iic.c                           0x00000000   Number         0  hal_soft_iic.o ABSOLUTE
    handle_console_pid.c                     0x00000000   Number         0  handle_console_pid.o ABSOLUTE
    led_key.c                                0x00000000   Number         0  led_key.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    mc_api.c                                 0x00000000   Number         0  mc_api.o ABSOLUTE
    mc_app_hooks.c                           0x00000000   Number         0  mc_app_hooks.o ABSOLUTE
    mc_config.c                              0x00000000   Number         0  mc_config.o ABSOLUTE
    mc_configuration_registers.c             0x00000000   Number         0  mc_configuration_registers.o ABSOLUTE
    mc_interface.c                           0x00000000   Number         0  mc_interface.o ABSOLUTE
    mc_math.c                                0x00000000   Number         0  mc_math.o ABSOLUTE
    mc_parameters.c                          0x00000000   Number         0  mc_parameters.o ABSOLUTE
    mc_tasks.c                               0x00000000   Number         0  mc_tasks.o ABSOLUTE
    mcp.c                                    0x00000000   Number         0  mcp.o ABSOLUTE
    mcp_config.c                             0x00000000   Number         0  mcp_config.o ABSOLUTE
    mcpa.c                                   0x00000000   Number         0  mcpa.o ABSOLUTE
    motorcontrol.c                           0x00000000   Number         0  motorcontrol.o ABSOLUTE
    ntc_temperature_sensor.c                 0x00000000   Number         0  ntc_temperature_sensor.o ABSOLUTE
    open_loop.c                              0x00000000   Number         0  open_loop.o ABSOLUTE
    pid_regulator.c                          0x00000000   Number         0  pid_regulator.o ABSOLUTE
    pqd_motor_power_measurement.c            0x00000000   Number         0  pqd_motor_power_measurement.o ABSOLUTE
    pwm_common.c                             0x00000000   Number         0  pwm_common.o ABSOLUTE
    pwm_curr_fdbk.c                          0x00000000   Number         0  pwm_curr_fdbk.o ABSOLUTE
    r3_g0xx_pwm_curr_fdbk.c                  0x00000000   Number         0  r3_g0xx_pwm_curr_fdbk.o ABSOLUTE
    r_divider_bus_voltage_sensor.c           0x00000000   Number         0  r_divider_bus_voltage_sensor.o ABSOLUTE
    ramp_ext_mngr.c                          0x00000000   Number         0  ramp_ext_mngr.o ABSOLUTE
    register_interface.c                     0x00000000   Number         0  register_interface.o ABSOLUTE
    regular_conversion_manager.c             0x00000000   Number         0  regular_conversion_manager.o ABSOLUTE
    revup_ctrl.c                             0x00000000   Number         0  revup_ctrl.o ABSOLUTE
    speed_pos_fdbk.c                         0x00000000   Number         0  speed_pos_fdbk.o ABSOLUTE
    speed_torq_ctrl.c                        0x00000000   Number         0  speed_torq_ctrl.o ABSOLUTE
    startup_stm32g030xx.s                    0x00000000   Number         0  startup_stm32g030xx.o ABSOLUTE
    stm32g0xx_hal.c                          0x00000000   Number         0  stm32g0xx_hal.o ABSOLUTE
    stm32g0xx_hal_cortex.c                   0x00000000   Number         0  stm32g0xx_hal_cortex.o ABSOLUTE
    stm32g0xx_hal_dma.c                      0x00000000   Number         0  stm32g0xx_hal_dma.o ABSOLUTE
    stm32g0xx_hal_dma_ex.c                   0x00000000   Number         0  stm32g0xx_hal_dma_ex.o ABSOLUTE
    stm32g0xx_hal_exti.c                     0x00000000   Number         0  stm32g0xx_hal_exti.o ABSOLUTE
    stm32g0xx_hal_flash.c                    0x00000000   Number         0  stm32g0xx_hal_flash.o ABSOLUTE
    stm32g0xx_hal_flash_ex.c                 0x00000000   Number         0  stm32g0xx_hal_flash_ex.o ABSOLUTE
    stm32g0xx_hal_gpio.c                     0x00000000   Number         0  stm32g0xx_hal_gpio.o ABSOLUTE
    stm32g0xx_hal_msp.c                      0x00000000   Number         0  stm32g0xx_hal_msp.o ABSOLUTE
    stm32g0xx_hal_pwr.c                      0x00000000   Number         0  stm32g0xx_hal_pwr.o ABSOLUTE
    stm32g0xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32g0xx_hal_pwr_ex.o ABSOLUTE
    stm32g0xx_hal_rcc.c                      0x00000000   Number         0  stm32g0xx_hal_rcc.o ABSOLUTE
    stm32g0xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32g0xx_hal_rcc_ex.o ABSOLUTE
    stm32g0xx_hal_tim.c                      0x00000000   Number         0  stm32g0xx_hal_tim.o ABSOLUTE
    stm32g0xx_hal_tim_ex.c                   0x00000000   Number         0  stm32g0xx_hal_tim_ex.o ABSOLUTE
    stm32g0xx_it.c                           0x00000000   Number         0  stm32g0xx_it.o ABSOLUTE
    stm32g0xx_ll_adc.c                       0x00000000   Number         0  stm32g0xx_ll_adc.o ABSOLUTE
    stm32g0xx_ll_dma.c                       0x00000000   Number         0  stm32g0xx_ll_dma.o ABSOLUTE
    stm32g0xx_ll_exti.c                      0x00000000   Number         0  stm32g0xx_ll_exti.o ABSOLUTE
    stm32g0xx_ll_gpio.c                      0x00000000   Number         0  stm32g0xx_ll_gpio.o ABSOLUTE
    stm32g0xx_ll_rcc.c                       0x00000000   Number         0  stm32g0xx_ll_rcc.o ABSOLUTE
    stm32g0xx_ll_tim.c                       0x00000000   Number         0  stm32g0xx_ll_tim.o ABSOLUTE
    stm32g0xx_ll_usart.c                     0x00000000   Number         0  stm32g0xx_ll_usart.o ABSOLUTE
    stm32g0xx_ll_utils.c                     0x00000000   Number         0  stm32g0xx_ll_utils.o ABSOLUTE
    stm32g0xx_mc_it.c                        0x00000000   Number         0  stm32g0xx_mc_it.o ABSOLUTE
    sto_pll_speed_pos_fdbk.c                 0x00000000   Number         0  sto_pll_speed_pos_fdbk.o ABSOLUTE
    system_stm32g0xx.c                       0x00000000   Number         0  system_stm32g0xx.o ABSOLUTE
    usart_aspep_driver.c                     0x00000000   Number         0  usart_aspep_driver.o ABSOLUTE
    usart_handle.c                           0x00000000   Number         0  usart_handle.o ABSOLUTE
    virtual_speed_sensor.c                   0x00000000   Number         0  virtual_speed_sensor.o ABSOLUTE
    watch_data.c                             0x00000000   Number         0  watch_data.o ABSOLUTE
    RESET                                    0x08000000   Section      192  startup_stm32g030xx.o(RESET)
    !!!main                                  0x080000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000c8   Section       60  __scatter.o(!!!scatter)
    !!handler_zi                             0x08000104   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000120   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x08000122   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000124   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000126   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000128   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000128   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000128   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0800012e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0800012e   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000132   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000132   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800013a   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0800013c   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0800013c   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000140   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x08000148   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x08000180   Section       76  startup_stm32g030xx.o(.text)
    .text                                    0x080001cc   Section        0  llmul.o(.text)
    .text                                    0x080001fc   Section        0  rt_memcpy.o(.text)
    .text                                    0x0800027e   Section        0  rt_memclr.o(.text)
    .text                                    0x080002be   Section        0  heapauxi.o(.text)
    .text                                    0x080002c4   Section        0  fflti.o(.text)
    .text                                    0x08000322   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x08000360   Section        0  exit.o(.text)
    .text                                    0x08000370   Section        8  libspace.o(.text)
    .text                                    0x08000378   Section        0  __dczerorl2.o(.text)
    [Anonymous Symbol]                       0x080003ce   Section        0  aspep.o(.text.ASPEP_HWDMAReset)
    [Anonymous Symbol]                       0x080003e4   Section        0  aspep.o(.text.ASPEP_HWDataReceivedIT)
    __arm_cp.9_0                             0x08000470   Number         4  aspep.o(.text.ASPEP_HWDataReceivedIT)
    [Anonymous Symbol]                       0x08000474   Section        0  aspep.o(.text.ASPEP_HWDataTransmittedIT)
    [Anonymous Symbol]                       0x08000518   Section        0  aspep.o(.text.ASPEP_RXframeProcess)
    __arm_cp.8_6                             0x08000904   Number         4  aspep.o(.text.ASPEP_RXframeProcess)
    ASPEP_TXframeProcess                     0x08000ae1   Thumb Code   224  aspep.o(.text.ASPEP_TXframeProcess)
    [Anonymous Symbol]                       0x08000ae0   Section        0  aspep.o(.text.ASPEP_TXframeProcess)
    __arm_cp.2_0                             0x08000bc0   Number         4  aspep.o(.text.ASPEP_TXframeProcess)
    __arm_cp.2_1                             0x08000bc4   Number         4  aspep.o(.text.ASPEP_TXframeProcess)
    [Anonymous Symbol]                       0x08000bc8   Section        0  aspep.o(.text.ASPEP_getBuffer)
    [Anonymous Symbol]                       0x08000c20   Section        0  aspep.o(.text.ASPEP_sendPacket)
    [Anonymous Symbol]                       0x08000c6e   Section        0  aspep.o(.text.ASPEP_start)
    [Anonymous Symbol]                       0x08000c94   Section        0  circle_limitation.o(.text.Circle_Limitation)
    __arm_cp.0_0                             0x08000d10   Number         4  circle_limitation.o(.text.Circle_Limitation)
    [Anonymous Symbol]                       0x08000d14   Section        0  stm32g0xx_mc_it.o(.text.DMA1_Channel1_IRQHandler)
    __arm_cp.0_0                             0x08000d24   Number         4  stm32g0xx_mc_it.o(.text.DMA1_Channel1_IRQHandler)
    [Anonymous Symbol]                       0x08000d28   Section        0  stm32g0xx_mc_it.o(.text.DMA1_Channel2_3_IRQHandler)
    __arm_cp.2_0                             0x08000d40   Number         4  stm32g0xx_mc_it.o(.text.DMA1_Channel2_3_IRQHandler)
    __arm_cp.2_1                             0x08000d44   Number         4  stm32g0xx_mc_it.o(.text.DMA1_Channel2_3_IRQHandler)
    [Anonymous Symbol]                       0x08000d48   Section        0  stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.6_0                             0x08000d68   Number         4  stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler)
    [Anonymous Symbol]                       0x08000d6c   Section        0  mc_tasks.o(.text.FOC_CalcCurrRef)
    [Anonymous Symbol]                       0x08000d90   Section        0  mc_tasks.o(.text.FOC_Clear)
    __arm_cp.1_0                             0x08000de0   Number         4  mc_tasks.o(.text.FOC_Clear)
    __arm_cp.1_1                             0x08000de4   Number         4  mc_tasks.o(.text.FOC_Clear)
    __arm_cp.1_2                             0x08000de8   Number         4  mc_tasks.o(.text.FOC_Clear)
    __arm_cp.1_3                             0x08000dec   Number         4  mc_tasks.o(.text.FOC_Clear)
    [Anonymous Symbol]                       0x08000df0   Section        0  mc_tasks.o(.text.FOC_InitAdditionalMethods)
    [Anonymous Symbol]                       0x08000df4   Section        0  stm32g0xx_hal.o(.text.HAL_GetTick)
    [Anonymous Symbol]                       0x08000dfc   Section        0  stm32g0xx_hal.o(.text.HAL_IncTick)
    __arm_cp.5_1                             0x08000e0c   Number         4  stm32g0xx_hal.o(.text.HAL_IncTick)
    [Anonymous Symbol]                       0x08000e10   Section        0  stm32g0xx_hal.o(.text.HAL_Init)
    __arm_cp.0_0                             0x08000e38   Number         4  stm32g0xx_hal.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x08000e3c   Section        0  stm32g0xx_hal.o(.text.HAL_InitTick)
    __arm_cp.1_0                             0x08000e7c   Number         4  stm32g0xx_hal.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x08000e80   Section        0  stm32g0xx_hal_msp.o(.text.HAL_MspInit)
    __arm_cp.0_0                             0x08000ea8   Number         4  stm32g0xx_hal_msp.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x08000eac   Section        0  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    __arm_cp.1_0                             0x08000ec0   Number         4  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08000ec4   Section        0  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    __arm_cp.0_0                             0x08000efc   Number         4  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    __arm_cp.0_1                             0x08000f00   Number         4  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    [Anonymous Symbol]                       0x08000f04   Section        0  stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    __arm_cp.5_0                             0x08000f0c   Number         4  stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    [Anonymous Symbol]                       0x08000f10   Section        0  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Callback)
    [Anonymous Symbol]                       0x08000f14   Section        0  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config)
    __arm_cp.4_0                             0x08000f3c   Number         4  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config)
    __arm_cp.4_1                             0x08000f40   Number         4  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config)
    __arm_cp.4_2                             0x08000f44   Number         4  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config)
    [Anonymous Symbol]                       0x08000f48   Section        0  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler)
    [Anonymous Symbol]                       0x08000f50   Section        0  stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback)
    [Anonymous Symbol]                       0x08000f52   Section        0  stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback)
    [Anonymous Symbol]                       0x08000f54   Section        0  stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback)
    [Anonymous Symbol]                       0x08000f58   Section        0  stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    __arm_cp.0_0                             0x08001014   Number         4  stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    __arm_cp.0_1                             0x08001018   Number         4  stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    __arm_cp.0_2                             0x0800101c   Number         4  stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    __arm_cp.0_3                             0x08001020   Number         4  stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    __arm_cp.0_4                             0x08001024   Number         4  stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    [Anonymous Symbol]                       0x08001028   Section        0  stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspInit)
    __arm_cp.1_0                             0x08001064   Number         4  stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspInit)
    __arm_cp.1_1                             0x08001068   Number         4  stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspInit)
    [Anonymous Symbol]                       0x0800106c   Section        0  stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback)
    [Anonymous Symbol]                       0x08001070   Section        0  stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    __arm_cp.67_0                            0x080011d0   Number         4  stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    [Anonymous Symbol]                       0x080011d4   Section        0  stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback)
    [Anonymous Symbol]                       0x080011d6   Section        0  stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback)
    [Anonymous Symbol]                       0x080011d8   Section        0  stm32g0xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback)
    [Anonymous Symbol]                       0x080011da   Section        0  stm32g0xx_hal_tim.o(.text.HAL_TIM_TriggerCallback)
    [Anonymous Symbol]                       0x080011dc   Section        0  stm32g0xx_mc_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x080011e4   Section        0  stm32g0xx_ll_adc.o(.text.LL_ADC_Init)
    __arm_cp.4_0                             0x08001214   Number         4  stm32g0xx_ll_adc.o(.text.LL_ADC_Init)
    [Anonymous Symbol]                       0x08001218   Section        0  stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init)
    __arm_cp.6_0                             0x0800127c   Number         4  stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init)
    [Anonymous Symbol]                       0x08001280   Section        0  stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init)
    [Anonymous Symbol]                       0x08001348   Section        0  stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq)
    [Anonymous Symbol]                       0x080013cc   Section        0  stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq)
    __arm_cp.2_0                             0x080014d4   Number         4  stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq)
    __arm_cp.2_1                             0x080014d8   Number         4  stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq)
    __arm_cp.2_2                             0x080014dc   Number         4  stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq)
    __arm_cp.2_3                             0x080014e0   Number         4  stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq)
    __arm_cp.2_4                             0x080014e4   Number         4  stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq)
    __arm_cp.2_5                             0x080014e8   Number         4  stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq)
    __arm_cp.2_6                             0x080014ec   Number         4  stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq)
    __arm_cp.2_7                             0x080014f0   Number         4  stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq)
    [Anonymous Symbol]                       0x080014f4   Section        0  stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    __arm_cp.2_0                             0x080014fc   Number         4  stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    [Anonymous Symbol]                       0x08001500   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init)
    __arm_cp.12_0                            0x08001580   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init)
    __arm_cp.12_2                            0x08001584   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init)
    __arm_cp.12_3                            0x08001588   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init)
    __arm_cp.12_4                            0x0800158c   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init)
    [Anonymous Symbol]                       0x08001590   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.2_1                             0x0800160c   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.2_2                             0x08001610   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.2_5                             0x08001614   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    [Anonymous Symbol]                       0x08001618   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_0                             0x080018d4   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_1                             0x080018d8   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_2                             0x080018dc   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_3                             0x080018e0   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_4                             0x080018e4   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_5                             0x080018e8   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_6                             0x080018ec   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_7                             0x080018f0   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_8                             0x080018f4   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_9                             0x080018f8   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    [Anonymous Symbol]                       0x080018fc   Section        0  stm32g0xx_ll_usart.o(.text.LL_USART_Init)
    __arm_cp.1_0                             0x080019c4   Number         4  stm32g0xx_ll_usart.o(.text.LL_USART_Init)
    __arm_cp.1_1                             0x080019c8   Number         4  stm32g0xx_ll_usart.o(.text.LL_USART_Init)
    __arm_cp.1_2                             0x080019cc   Number         4  stm32g0xx_ll_usart.o(.text.LL_USART_Init)
    USART_PRESCALER_TAB                      0x080019d0   Number         0  stm32g0xx_ll_usart.o(.text.LL_USART_Init)
    __arm_cp.1_4                             0x08001a00   Number         4  stm32g0xx_ll_usart.o(.text.LL_USART_Init)
    [Anonymous Symbol]                       0x08001a04   Section        0  mc_interface.o(.text.MCI_Clear_Iqdref)
    [Anonymous Symbol]                       0x08001a16   Section        0  mc_interface.o(.text.MCI_ExecBufferedCommands)
    [Anonymous Symbol]                       0x08001a80   Section        0  mc_interface.o(.text.MCI_ExecSpeedRamp)
    __arm_cp.1_0                             0x08001a90   Number         4  mc_interface.o(.text.MCI_ExecSpeedRamp)
    [Anonymous Symbol]                       0x08001a94   Section        0  mc_interface.o(.text.MCI_ExecTorqueRamp)
    [Anonymous Symbol]                       0x08001aa4   Section        0  mc_interface.o(.text.MCI_FaultAcknowledged)
    [Anonymous Symbol]                       0x08001ace   Section        0  mc_interface.o(.text.MCI_FaultProcessing)
    [Anonymous Symbol]                       0x08001ade   Section        0  mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit)
    [Anonymous Symbol]                       0x08001aec   Section        0  mc_interface.o(.text.MCI_GetControlMode)
    [Anonymous Symbol]                       0x08001af0   Section        0  mc_interface.o(.text.MCI_GetCurrentFaults)
    [Anonymous Symbol]                       0x08001af4   Section        0  mc_interface.o(.text.MCI_GetFaultState)
    [Anonymous Symbol]                       0x08001afe   Section        0  mc_interface.o(.text.MCI_GetIab)
    [Anonymous Symbol]                       0x08001b0a   Section        0  mc_interface.o(.text.MCI_GetIalphabeta)
    [Anonymous Symbol]                       0x08001b16   Section        0  mc_interface.o(.text.MCI_GetImposedMotorDirection)
    [Anonymous Symbol]                       0x08001b5a   Section        0  mc_interface.o(.text.MCI_GetIqd)
    [Anonymous Symbol]                       0x08001b66   Section        0  mc_interface.o(.text.MCI_GetIqdref)
    [Anonymous Symbol]                       0x08001b72   Section        0  mc_interface.o(.text.MCI_GetLastRampFinalDuration)
    [Anonymous Symbol]                       0x08001b76   Section        0  mc_interface.o(.text.MCI_GetLastRampFinalSpeed)
    [Anonymous Symbol]                       0x08001b7c   Section        0  mc_interface.o(.text.MCI_GetLastRampFinalTorque)
    [Anonymous Symbol]                       0x08001b82   Section        0  mc_interface.o(.text.MCI_GetMecSpeedRefUnit)
    [Anonymous Symbol]                       0x08001b8c   Section        0  mc_interface.o(.text.MCI_GetOccurredFaults)
    [Anonymous Symbol]                       0x08001b90   Section        0  mc_interface.o(.text.MCI_GetSTMState)
    [Anonymous Symbol]                       0x08001b94   Section        0  mc_interface.o(.text.MCI_GetTeref)
    [Anonymous Symbol]                       0x08001b9c   Section        0  mc_interface.o(.text.MCI_GetValphabeta)
    [Anonymous Symbol]                       0x08001ba8   Section        0  mc_interface.o(.text.MCI_GetVqd)
    [Anonymous Symbol]                       0x08001bb4   Section        0  mc_interface.o(.text.MCI_Init)
    [Anonymous Symbol]                       0x08001bcc   Section        0  mc_interface.o(.text.MCI_SetCurrentReferences)
    __arm_cp.5_0                             0x08001bdc   Number         4  mc_interface.o(.text.MCI_SetCurrentReferences)
    [Anonymous Symbol]                       0x08001be0   Section        0  mc_interface.o(.text.MCI_StartMotor)
    [Anonymous Symbol]                       0x08001c10   Section        0  mc_interface.o(.text.MCI_StopMotor)
    [Anonymous Symbol]                       0x08001c54   Section        0  mc_interface.o(.text.MCI_StopRamp)
    [Anonymous Symbol]                       0x08001c60   Section        0  mc_math.o(.text.MCM_Clarke)
    __arm_cp.0_0                             0x08001c9c   Number         4  mc_math.o(.text.MCM_Clarke)
    __arm_cp.0_1                             0x08001ca0   Number         4  mc_math.o(.text.MCM_Clarke)
    [Anonymous Symbol]                       0x08001ca4   Section        0  mc_math.o(.text.MCM_Park)
    __arm_cp.1_0                             0x08001d34   Number         4  mc_math.o(.text.MCM_Park)
    __arm_cp.1_1                             0x08001d38   Number         4  mc_math.o(.text.MCM_Park)
    [Anonymous Symbol]                       0x08001d3c   Section        0  mc_math.o(.text.MCM_Rev_Park)
    [Anonymous Symbol]                       0x08001d6c   Section        0  mc_math.o(.text.MCM_Trig_Functions)
    __arm_cp.2_0                             0x08001de4   Number         4  mc_math.o(.text.MCM_Trig_Functions)
    [Anonymous Symbol]                       0x08001de8   Section        0  mcpa.o(.text.MCPA_cfgLog)
    [Anonymous Symbol]                       0x08001ecc   Section        0  mcpa.o(.text.MCPA_dataLog)
    __arm_cp.0_0                             0x080020a8   Number         4  mcpa.o(.text.MCPA_dataLog)
    [Anonymous Symbol]                       0x080020ac   Section        0  mcpa.o(.text.MCPA_flushDataLog)
    [Anonymous Symbol]                       0x08002118   Section        0  mcp.o(.text.MCP_ReceivedPacket)
    __arm_cp.0_1                             0x08002278   Number         4  mcp.o(.text.MCP_ReceivedPacket)
    [Anonymous Symbol]                       0x0800227c   Section        0  mc_app_hooks.o(.text.MC_APP_BootHook)
    [Anonymous Symbol]                       0x0800227e   Section        0  mc_app_hooks.o(.text.MC_APP_PostMediumFrequencyHook_M1)
    [Anonymous Symbol]                       0x08002280   Section        0  mc_api.o(.text.MC_GetSTMStateMotor1)
    [Anonymous Symbol]                       0x0800228c   Section        0  mc_api.o(.text.MC_ProfilerCommand)
    [Anonymous Symbol]                       0x08002290   Section        0  mc_api.o(.text.MC_ProgramSpeedRampMotor1)
    [Anonymous Symbol]                       0x080022a0   Section        0  mc_tasks.o(.text.MC_RunMotorControlTasks)
    [Anonymous Symbol]                       0x080022b4   Section        0  mc_tasks.o(.text.MC_Scheduler)
    __arm_cp.3_1                             0x08002324   Number         4  mc_tasks.o(.text.MC_Scheduler)
    [Anonymous Symbol]                       0x08002328   Section        0  mc_api.o(.text.MC_StartMotor1)
    [Anonymous Symbol]                       0x08002334   Section        0  mc_api.o(.text.MC_StopMotor1)
    [Anonymous Symbol]                       0x08002340   Section        0  mc_tasks.o(.text.MCboot)
    __arm_cp.0_0                             0x08002408   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_1                             0x0800240c   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_2                             0x08002410   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_3                             0x08002414   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_4                             0x08002418   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_5                             0x0800241c   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_6                             0x08002420   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_7                             0x08002424   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_8                             0x08002428   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_9                             0x0800242c   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_10                            0x08002430   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_11                            0x08002434   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_12                            0x08002438   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_13                            0x0800243c   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_14                            0x08002440   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_15                            0x08002444   Number         4  mc_tasks.o(.text.MCboot)
    [Anonymous Symbol]                       0x08002448   Section        0  motorcontrol.o(.text.MX_MotorControl_Init)
    __arm_cp.0_0                             0x08002474   Number         4  motorcontrol.o(.text.MX_MotorControl_Init)
    __arm_cp.0_1                             0x08002478   Number         4  motorcontrol.o(.text.MX_MotorControl_Init)
    [Anonymous Symbol]                       0x0800247c   Section        0  stm32g0xx_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x08002480   Section        0  ntc_temperature_sensor.o(.text.NTC_CalcAvTemp)
    __arm_cp.3_0                             0x080024b8   Number         4  ntc_temperature_sensor.o(.text.NTC_CalcAvTemp)
    [Anonymous Symbol]                       0x080024bc   Section        0  ntc_temperature_sensor.o(.text.NTC_Clear)
    [Anonymous Symbol]                       0x080024c2   Section        0  ntc_temperature_sensor.o(.text.NTC_GetAvTemp_C)
    [Anonymous Symbol]                       0x080024e4   Section        0  ntc_temperature_sensor.o(.text.NTC_Init)
    [Anonymous Symbol]                       0x0800250a   Section        0  ntc_temperature_sensor.o(.text.NTC_SetFaultState)
    [Anonymous Symbol]                       0x08002524   Section        0  pid_regulator.o(.text.PID_GetKD)
    [Anonymous Symbol]                       0x0800252a   Section        0  pid_regulator.o(.text.PID_GetKDDivisorPOW2)
    [Anonymous Symbol]                       0x0800252e   Section        0  pid_regulator.o(.text.PID_GetKI)
    [Anonymous Symbol]                       0x08002534   Section        0  pid_regulator.o(.text.PID_GetKIDivisor)
    [Anonymous Symbol]                       0x08002538   Section        0  pid_regulator.o(.text.PID_GetKIDivisorPOW2)
    [Anonymous Symbol]                       0x0800253c   Section        0  pid_regulator.o(.text.PID_GetKP)
    [Anonymous Symbol]                       0x08002542   Section        0  pid_regulator.o(.text.PID_GetKPDivisorPOW2)
    [Anonymous Symbol]                       0x08002546   Section        0  pid_regulator.o(.text.PID_HandleInit)
    [Anonymous Symbol]                       0x08002556   Section        0  pid_regulator.o(.text.PID_SetIntegralTerm)
    [Anonymous Symbol]                       0x0800255a   Section        0  pid_regulator.o(.text.PID_SetKD)
    [Anonymous Symbol]                       0x0800255e   Section        0  pid_regulator.o(.text.PID_SetKDDivisorPOW2)
    [Anonymous Symbol]                       0x08002568   Section        0  pid_regulator.o(.text.PID_SetKI)
    [Anonymous Symbol]                       0x0800256c   Section        0  pid_regulator.o(.text.PID_SetKIDivisorPOW2)
    __arm_cp.13_0                            0x08002590   Number         4  pid_regulator.o(.text.PID_SetKIDivisorPOW2)
    __arm_cp.13_1                            0x08002594   Number         4  pid_regulator.o(.text.PID_SetKIDivisorPOW2)
    [Anonymous Symbol]                       0x08002598   Section        0  pid_regulator.o(.text.PID_SetKP)
    [Anonymous Symbol]                       0x0800259c   Section        0  pid_regulator.o(.text.PID_SetKPDivisorPOW2)
    [Anonymous Symbol]                       0x080025a6   Section        0  pid_regulator.o(.text.PID_SetLowerIntegralTermLimit)
    [Anonymous Symbol]                       0x080025aa   Section        0  pid_regulator.o(.text.PID_SetUpperIntegralTermLimit)
    [Anonymous Symbol]                       0x080025b0   Section        0  pid_regulator.o(.text.PI_Controller)
    __arm_cp.24_0                            0x08002634   Number         4  pid_regulator.o(.text.PI_Controller)
    [Anonymous Symbol]                       0x08002638   Section        0  pqd_motor_power_measurement.o(.text.PQD_CalcElMotorPower)
    [Anonymous Symbol]                       0x08002668   Section        0  pqd_motor_power_measurement.o(.text.PQD_Clear)
    [Anonymous Symbol]                       0x0800266e   Section        0  pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW)
    [Anonymous Symbol]                       0x0800268c   Section        0  pwm_curr_fdbk.o(.text.PWMC_CheckOverCurrent)
    [Anonymous Symbol]                       0x08002694   Section        0  pwm_curr_fdbk.o(.text.PWMC_CurrentReadingCalibr)
    [Anonymous Symbol]                       0x080026d8   Section        0  pwm_curr_fdbk.o(.text.PWMC_GetPhaseCurrents)
    [Anonymous Symbol]                       0x080026e0   Section        0  pwm_curr_fdbk.o(.text.PWMC_SetPhaseVoltage)
    __arm_cp.4_0                             0x080028c0   Number         4  pwm_curr_fdbk.o(.text.PWMC_SetPhaseVoltage)
    [Anonymous Symbol]                       0x080028c4   Section        0  pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM)
    [Anonymous Symbol]                       0x080028cc   Section        0  pwm_curr_fdbk.o(.text.PWMC_SwitchOnPWM)
    [Anonymous Symbol]                       0x080028d4   Section        0  stm32g0xx_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x080028d8   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    __arm_cp.3_0                             0x080029f0   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    __arm_cp.3_1                             0x080029f4   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    __arm_cp.3_2                             0x080029f8   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    __arm_cp.3_3                             0x080029fc   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    __arm_cp.3_4                             0x08002a00   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    __arm_cp.3_5                             0x08002a04   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    [Anonymous Symbol]                       0x08002a08   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetOffsetCalib)
    [Anonymous Symbol]                       0x08002a18   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents)
    __arm_cp.9_1                             0x08002bb8   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents)
    __arm_cp.9_2                             0x08002bbc   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents)
    __arm_cp.9_3                             0x08002bc0   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents)
    __arm_cp.9_4                             0x08002bc4   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents)
    __arm_cp.9_5                             0x08002bc8   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents)
    __arm_cp.9_6                             0x08002bcc   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents)
    [Anonymous Symbol]                       0x08002bd0   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationAB)
    [Anonymous Symbol]                       0x08002c1c   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationC)
    __arm_cp.8_0                             0x08002c60   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationC)
    [Anonymous Symbol]                       0x08002c64   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    __arm_cp.0_0                             0x08002d80   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    __arm_cp.0_1                             0x08002d84   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    __arm_cp.0_2                             0x08002d88   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    __arm_cp.0_3                             0x08002d8c   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    __arm_cp.0_4                             0x08002d90   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    __arm_cp.0_5                             0x08002d94   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    __arm_cp.0_6                             0x08002d98   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    __arm_cp.0_7                             0x08002d9c   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    [Anonymous Symbol]                       0x08002da0   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_IsOverCurrentOccurred)
    [Anonymous Symbol]                       0x08002dd2   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_OVERCURRENT_IRQHandler)
    [Anonymous Symbol]                       0x08002e0c   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_OVERVOLTAGE_IRQHandler)
    [Anonymous Symbol]                       0x08002e28   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointCalibration)
    [Anonymous Symbol]                       0x08002e46   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX)
    [Anonymous Symbol]                       0x08002eae   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetOffsetCalib)
    [Anonymous Symbol]                       0x08002ec4   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM)
    [Anonymous Symbol]                       0x08002f68   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM)
    __arm_cp.6_1                             0x0800302c   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM)
    __arm_cp.6_2                             0x08003030   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM)
    __arm_cp.6_3                             0x08003034   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM)
    [Anonymous Symbol]                       0x08003038   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TIMx_UP_IRQHandler)
    __arm_cp.15_0                            0x080030a4   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TIMx_UP_IRQHandler)
    __arm_cp.15_2                            0x080030a8   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TIMx_UP_IRQHandler)
    [Anonymous Symbol]                       0x080030ac   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides)
    __arm_cp.14_0                            0x08003100   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides)
    [Anonymous Symbol]                       0x08003104   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters)
    __arm_cp.11_0                            0x08003130   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters)
    [Anonymous Symbol]                       0x08003134   Section        0  regular_conversion_manager.o(.text.RCM_ExecNextConv)
    __arm_cp.8_2                             0x08003190   Number         4  regular_conversion_manager.o(.text.RCM_ExecNextConv)
    [Anonymous Symbol]                       0x08003194   Section        0  regular_conversion_manager.o(.text.RCM_ExecRegularConv)
    __arm_cp.2_1                             0x08003334   Number         4  regular_conversion_manager.o(.text.RCM_ExecRegularConv)
    __arm_cp.2_2                             0x08003338   Number         4  regular_conversion_manager.o(.text.RCM_ExecRegularConv)
    __arm_cp.2_3                             0x0800333c   Number         4  regular_conversion_manager.o(.text.RCM_ExecRegularConv)
    [Anonymous Symbol]                       0x08003340   Section        0  regular_conversion_manager.o(.text.RCM_ExecUserConv)
    [Anonymous Symbol]                       0x0800337c   Section        0  regular_conversion_manager.o(.text.RCM_ReadOngoingConv)
    [Anonymous Symbol]                       0x080033bc   Section        0  regular_conversion_manager.o(.text.RCM_RegisterRegConv)
    __arm_cp.1_0                             0x080034e4   Number         4  regular_conversion_manager.o(.text.RCM_RegisterRegConv)
    __arm_cp.1_1                             0x080034e8   Number         4  regular_conversion_manager.o(.text.RCM_RegisterRegConv)
    [Anonymous Symbol]                       0x080034ec   Section        0  ramp_ext_mngr.o(.text.REMNG_Calc)
    [Anonymous Symbol]                       0x08003518   Section        0  ramp_ext_mngr.o(.text.REMNG_ExecRamp)
    [Anonymous Symbol]                       0x08003598   Section        0  ramp_ext_mngr.o(.text.REMNG_Init)
    [Anonymous Symbol]                       0x080035a8   Section        0  ramp_ext_mngr.o(.text.REMNG_RampCompleted)
    [Anonymous Symbol]                       0x080035b0   Section        0  register_interface.o(.text.RI_GetIDSize)
    [Anonymous Symbol]                       0x080035d0   Section        0  register_interface.o(.text.RI_GetPtrReg)
    __arm_cp.3_0                             0x080036c4   Number         4  register_interface.o(.text.RI_GetPtrReg)
    __arm_cp.3_1                             0x080036c8   Number         4  register_interface.o(.text.RI_GetPtrReg)
    __arm_cp.3_2                             0x080036cc   Number         4  register_interface.o(.text.RI_GetPtrReg)
    __arm_cp.3_3                             0x080036d0   Number         4  register_interface.o(.text.RI_GetPtrReg)
    [Anonymous Symbol]                       0x080036d4   Section        0  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_23                            0x08003a48   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_31                            0x08003e54   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_32                            0x08003e60   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_33                            0x08003e64   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_29                            0x08003eac   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_30                            0x08003eb0   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_0                             0x08003f6c   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_1                             0x08003f70   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_2                             0x08003f74   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_3                             0x08003f78   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_4                             0x08003f7c   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_11                            0x08003f80   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_12                            0x08003f84   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_13                            0x08003f88   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_14                            0x08003f8c   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_15                            0x08003f90   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_16                            0x08003f94   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    [Anonymous Symbol]                       0x08003f98   Section        0  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_38                            0x08004208   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_39                            0x0800420c   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_40                            0x08004210   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_43                            0x0800421c   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_44                            0x08004220   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_45                            0x08004224   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_52                            0x08004648   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_53                            0x0800464c   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_54                            0x08004650   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_55                            0x08004654   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_49                            0x0800469c   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_56                            0x080046a4   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_57                            0x080046a8   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_58                            0x080046c0   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_0                             0x080046c4   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_1                             0x080046c8   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_2                             0x080046cc   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_3                             0x080046d0   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_7                             0x080046d4   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_8                             0x080046d8   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_9                             0x080046dc   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_10                            0x080046e0   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_11                            0x080046e4   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_12                            0x080046e8   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_13                            0x080046ec   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_15                            0x080046f0   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_16                            0x080046f4   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_17                            0x080046f8   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_22                            0x080046fc   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_26                            0x08004700   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_30                            0x08004704   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_31                            0x08004708   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_32                            0x0800470c   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_33                            0x08004710   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_34                            0x08004714   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    [Anonymous Symbol]                       0x08004718   Section        0  revup_ctrl.o(.text.RUC_Clear)
    [Anonymous Symbol]                       0x08004798   Section        0  revup_ctrl.o(.text.RUC_Exec)
    [Anonymous Symbol]                       0x08004800   Section        0  revup_ctrl.o(.text.RUC_FirstAccelerationStageReached)
    [Anonymous Symbol]                       0x08004814   Section        0  revup_ctrl.o(.text.RUC_GetNumberOfPhases)
    [Anonymous Symbol]                       0x0800481a   Section        0  revup_ctrl.o(.text.RUC_GetPhase)
    [Anonymous Symbol]                       0x0800482c   Section        0  revup_ctrl.o(.text.RUC_Init)
    __arm_cp.0_0                             0x0800488c   Number         4  revup_ctrl.o(.text.RUC_Init)
    [Anonymous Symbol]                       0x08004890   Section        0  revup_ctrl.o(.text.RUC_SetPhase)
    [Anonymous Symbol]                       0x080048a4   Section        0  r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus)
    __arm_cp.4_0                             0x0800495c   Number         4  r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus)
    [Anonymous Symbol]                       0x08004960   Section        0  r_divider_bus_voltage_sensor.o(.text.RVBS_CheckFaultState)
    [Anonymous Symbol]                       0x080049ae   Section        0  r_divider_bus_voltage_sensor.o(.text.RVBS_Clear)
    [Anonymous Symbol]                       0x080049f8   Section        0  r_divider_bus_voltage_sensor.o(.text.RVBS_Init)
    [Anonymous Symbol]                       0x08004a0e   Section        0  speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit)
    [Anonymous Symbol]                       0x08004a14   Section        0  speed_pos_fdbk.o(.text.SPD_GetElAngle)
    [Anonymous Symbol]                       0x08004a1a   Section        0  speed_pos_fdbk.o(.text.SPD_GetInstElSpeedDpp)
    [Anonymous Symbol]                       0x08004a20   Section        0  speed_pos_fdbk.o(.text.SPD_GetS16Speed)
    __arm_cp.7_0                             0x08004a38   Number         4  speed_pos_fdbk.o(.text.SPD_GetS16Speed)
    [Anonymous Symbol]                       0x08004a3c   Section        0  speed_pos_fdbk.o(.text.SPD_IsMecSpeedReliable)
    [Anonymous Symbol]                       0x08004a90   Section        0  speed_torq_ctrl.o(.text.STC_CalcTorqueReference)
    __arm_cp.10_0                            0x08004b10   Number         4  speed_torq_ctrl.o(.text.STC_CalcTorqueReference)
    __arm_cp.10_1                            0x08004b14   Number         4  speed_torq_ctrl.o(.text.STC_CalcTorqueReference)
    __arm_cp.10_2                            0x08004b18   Number         4  speed_torq_ctrl.o(.text.STC_CalcTorqueReference)
    [Anonymous Symbol]                       0x08004b1c   Section        0  speed_torq_ctrl.o(.text.STC_Clear)
    [Anonymous Symbol]                       0x08004b30   Section        0  speed_torq_ctrl.o(.text.STC_ExecRamp)
    __arm_cp.8_0                             0x08004bcc   Number         4  speed_torq_ctrl.o(.text.STC_ExecRamp)
    [Anonymous Symbol]                       0x08004bd0   Section        0  speed_torq_ctrl.o(.text.STC_ForceSpeedReferenceToCurrentSpeed)
    [Anonymous Symbol]                       0x08004be0   Section        0  speed_torq_ctrl.o(.text.STC_GetDefaultIqdref)
    [Anonymous Symbol]                       0x08004bea   Section        0  speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnit)
    [Anonymous Symbol]                       0x08004bf0   Section        0  speed_torq_ctrl.o(.text.STC_GetSpeedSensor)
    [Anonymous Symbol]                       0x08004bf4   Section        0  speed_torq_ctrl.o(.text.STC_GetTorqueRef)
    [Anonymous Symbol]                       0x08004bfa   Section        0  speed_torq_ctrl.o(.text.STC_Init)
    [Anonymous Symbol]                       0x08004c1a   Section        0  speed_torq_ctrl.o(.text.STC_SetControlMode)
    [Anonymous Symbol]                       0x08004c22   Section        0  speed_torq_ctrl.o(.text.STC_SetSpeedSensor)
    [Anonymous Symbol]                       0x08004c26   Section        0  speed_torq_ctrl.o(.text.STC_StopRamp)
    [Anonymous Symbol]                       0x08004c2e   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_OTF_ResetPLL)
    [Anonymous Symbol]                       0x08004c3c   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgElSpeedDpp)
    [Anonymous Symbol]                       0x08004c80   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgMecSpeedUnit)
    [Anonymous Symbol]                       0x08004ec8   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcElAngle)
    __arm_cp.3_0                             0x080050e0   Number         4  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcElAngle)
    __arm_cp.3_1                             0x080050e4   Number         4  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcElAngle)
    [Anonymous Symbol]                       0x080050e8   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Clear)
    [Anonymous Symbol]                       0x08005142   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_ForceConvergency1)
    [Anonymous Symbol]                       0x0800514e   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_ForceConvergency2)
    [Anonymous Symbol]                       0x0800515a   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedBemf)
    [Anonymous Symbol]                       0x0800515e   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedBemfLevel)
    [Anonymous Symbol]                       0x08005166   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedCurrent)
    [Anonymous Symbol]                       0x0800517c   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObservedBemfLevel)
    [Anonymous Symbol]                       0x08005182   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObserverGains)
    [Anonymous Symbol]                       0x0800518c   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init)
    __arm_cp.0_0                             0x08005214   Number         4  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init)
    __arm_cp.0_1                             0x08005218   Number         4  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init)
    [Anonymous Symbol]                       0x0800521c   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsObserverConverged)
    [Anonymous Symbol]                       0x080052c2   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsVarianceTight)
    [Anonymous Symbol]                       0x080052ca   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_SetObserverGains)
    [Anonymous Symbol]                       0x080052d0   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_ResetPLL)
    [Anonymous Symbol]                       0x080052dc   Section        0  stm32g0xx_it.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x080052e0   Section        0  stm32g0xx_mc_it.o(.text.SysTick_Handler)
    __arm_cp.5_0                             0x08005314   Number         4  stm32g0xx_mc_it.o(.text.SysTick_Handler)
    __arm_cp.5_1                             0x08005318   Number         4  stm32g0xx_mc_it.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x0800531c   Section        0  main.o(.text.SystemClock_Config)
    __arm_cp.5_0                             0x08005400   Number         4  main.o(.text.SystemClock_Config)
    __arm_cp.5_1                             0x08005404   Number         4  main.o(.text.SystemClock_Config)
    __arm_cp.5_2                             0x08005408   Number         4  main.o(.text.SystemClock_Config)
    __arm_cp.5_3                             0x0800540c   Number         4  main.o(.text.SystemClock_Config)
    __arm_cp.5_4                             0x08005410   Number         4  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x08005414   Section        0  system_stm32g0xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08005418   Section        0  stm32g0xx_it.o(.text.TIM14_IRQHandler)
    __arm_cp.3_0                             0x08005424   Number         4  stm32g0xx_it.o(.text.TIM14_IRQHandler)
    [Anonymous Symbol]                       0x08005428   Section        0  stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.1_0                             0x08005490   Number         4  stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.1_1                             0x08005494   Number         4  stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.1_2                             0x08005498   Number         4  stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.1_3                             0x0800549c   Number         4  stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    [Anonymous Symbol]                       0x080054a0   Section        0  mc_tasks.o(.text.TSK_ChargeBootCapDelayHasElapsedM1)
    [Anonymous Symbol]                       0x080054ac   Section        0  mc_tasks.o(.text.TSK_HardwareFaultTask)
    [Anonymous Symbol]                       0x080054c4   Section        0  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_2                            0x08005648   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_3                            0x0800564c   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_4                            0x08005650   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_5                            0x08005654   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_6                            0x08005658   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_7                            0x0800565c   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_8                            0x08005660   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_9                            0x08005664   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_12                           0x08005668   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_13                           0x0800566c   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    [Anonymous Symbol]                       0x08005670   Section        0  mc_tasks.o(.text.TSK_MF_StopProcessing)
    __arm_cp.5_0                             0x080056a4   Number         4  mc_tasks.o(.text.TSK_MF_StopProcessing)
    __arm_cp.5_2                             0x080056a8   Number         4  mc_tasks.o(.text.TSK_MF_StopProcessing)
    [Anonymous Symbol]                       0x080056ac   Section        0  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    __arm_cp.7_0                             0x080059cc   Number         4  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    __arm_cp.7_1                             0x080059d0   Number         4  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    __arm_cp.7_2                             0x080059d4   Number         4  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    __arm_cp.7_3                             0x080059d8   Number         4  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    __arm_cp.7_4                             0x080059dc   Number         4  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    __arm_cp.7_5                             0x080059e0   Number         4  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    __arm_cp.7_6                             0x080059e4   Number         4  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    __arm_cp.7_8                             0x080059e8   Number         4  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    [Anonymous Symbol]                       0x080059ec   Section        0  mc_tasks.o(.text.TSK_SafetyTask)
    __arm_cp.4_0                             0x08005a04   Number         4  mc_tasks.o(.text.TSK_SafetyTask)
    [Anonymous Symbol]                       0x08005a08   Section        0  mc_tasks.o(.text.TSK_SafetyTask_PWMOFF)
    __arm_cp.14_0                            0x08005a8c   Number         4  mc_tasks.o(.text.TSK_SafetyTask_PWMOFF)
    __arm_cp.14_2                            0x08005a90   Number         4  mc_tasks.o(.text.TSK_SafetyTask_PWMOFF)
    __arm_cp.14_3                            0x08005a94   Number         4  mc_tasks.o(.text.TSK_SafetyTask_PWMOFF)
    __arm_cp.14_4                            0x08005a98   Number         4  mc_tasks.o(.text.TSK_SafetyTask_PWMOFF)
    __arm_cp.14_5                            0x08005a9c   Number         4  mc_tasks.o(.text.TSK_SafetyTask_PWMOFF)
    __arm_cp.14_6                            0x08005aa0   Number         4  mc_tasks.o(.text.TSK_SafetyTask_PWMOFF)
    [Anonymous Symbol]                       0x08005aa4   Section        0  mc_tasks.o(.text.TSK_SetChargeBootCapDelayM1)
    [Anonymous Symbol]                       0x08005aac   Section        0  mc_tasks.o(.text.TSK_SetStopPermanencyTimeM1)
    [Anonymous Symbol]                       0x08005ab4   Section        0  mc_tasks.o(.text.TSK_StopPermanencyTimeHasElapsedM1)
    __arm_cp.12_0                            0x08005ac0   Number         4  mc_tasks.o(.text.TSK_StopPermanencyTimeHasElapsedM1)
    [Anonymous Symbol]                       0x08005ac4   Section        0  usart_aspep_driver.o(.text.UASPEP_IDLE_ENABLE)
    [Anonymous Symbol]                       0x08005ae0   Section        0  usart_aspep_driver.o(.text.UASPEP_INIT)
    [Anonymous Symbol]                       0x08005b70   Section        0  usart_aspep_driver.o(.text.UASPEP_RECEIVE_BUFFER)
    [Anonymous Symbol]                       0x08005b98   Section        0  usart_aspep_driver.o(.text.UASPEP_SEND_PACKET)
    __arm_cp.3_0                             0x08005bc4   Number         4  usart_aspep_driver.o(.text.UASPEP_SEND_PACKET)
    __arm_cp.3_1                             0x08005bc8   Number         4  usart_aspep_driver.o(.text.UASPEP_SEND_PACKET)
    [Anonymous Symbol]                       0x08005bcc   Section        0  mc_tasks.o(.text.UI_HandleStartStopButton_cb)
    [Anonymous Symbol]                       0x08005be4   Section        0  stm32g0xx_mc_it.o(.text.USART2_IRQHandler)
    __arm_cp.3_0                             0x08005cc8   Number         4  stm32g0xx_mc_it.o(.text.USART2_IRQHandler)
    __arm_cp.3_1                             0x08005ccc   Number         4  stm32g0xx_mc_it.o(.text.USART2_IRQHandler)
    __arm_cp.3_2                             0x08005cd0   Number         4  stm32g0xx_mc_it.o(.text.USART2_IRQHandler)
    __arm_cp.3_3                             0x08005cd4   Number         4  stm32g0xx_mc_it.o(.text.USART2_IRQHandler)
    [Anonymous Symbol]                       0x08005cd8   Section        0  bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_V)
    [Anonymous Symbol]                       0x08005ce2   Section        0  bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_d)
    [Anonymous Symbol]                       0x08005ce6   Section        0  virtual_speed_sensor.o(.text.VSS_CalcAvrgMecSpeedUnit)
    [Anonymous Symbol]                       0x08005d70   Section        0  virtual_speed_sensor.o(.text.VSS_CalcElAngle)
    [Anonymous Symbol]                       0x08005e1c   Section        0  virtual_speed_sensor.o(.text.VSS_Clear)
    [Anonymous Symbol]                       0x08005e36   Section        0  virtual_speed_sensor.o(.text.VSS_Init)
    [Anonymous Symbol]                       0x08005e3e   Section        0  virtual_speed_sensor.o(.text.VSS_SetMecAcceleration)
    [Anonymous Symbol]                       0x08005ed4   Section        0  virtual_speed_sensor.o(.text.VSS_SetMecAngle)
    [Anonymous Symbol]                       0x08005eea   Section        0  virtual_speed_sensor.o(.text.VSS_SetStartTransition)
    [Anonymous Symbol]                       0x08005f0c   Section        0  virtual_speed_sensor.o(.text.VSS_TransitionEnded)
    [Anonymous Symbol]                       0x08005f12   Section        0  main.o(.text._sys_exit)
    [Anonymous Symbol]                       0x08005f14   Section        0  led_key.o(.text.exe_key_func)
    __arm_cp.2_0                             0x08005ff4   Number         4  led_key.o(.text.exe_key_func)
    __arm_cp.2_1                             0x08005ff8   Number         4  led_key.o(.text.exe_key_func)
    __arm_cp.2_2                             0x08005ffc   Number         4  led_key.o(.text.exe_key_func)
    __arm_cp.2_3                             0x08006000   Number         4  led_key.o(.text.exe_key_func)
    __arm_cp.2_4                             0x08006004   Number         4  led_key.o(.text.exe_key_func)
    [Anonymous Symbol]                       0x08006008   Section        0  ramp_ext_mngr.o(.text.getScalingFactor)
    [Anonymous Symbol]                       0x0800605c   Section        0  led_key.o(.text.get_key_state)
    __arm_cp.1_0                             0x08006134   Number         4  led_key.o(.text.get_key_state)
    __arm_cp.1_1                             0x08006138   Number         4  led_key.o(.text.get_key_state)
    __arm_cp.1_2                             0x0800613c   Number         4  led_key.o(.text.get_key_state)
    [Anonymous Symbol]                       0x08006140   Section        0  main.o(.text.main)
    __arm_cp.4_20                            0x08006398   Number         4  main.o(.text.main)
    __arm_cp.4_21                            0x0800639c   Number         4  main.o(.text.main)
    __arm_cp.4_22                            0x080063a0   Number         4  main.o(.text.main)
    __arm_cp.4_23                            0x080063a4   Number         4  main.o(.text.main)
    __arm_cp.4_25                            0x080063ac   Number         4  main.o(.text.main)
    __arm_cp.4_26                            0x080063b0   Number         4  main.o(.text.main)
    __arm_cp.4_0                             0x0800676c   Number         4  main.o(.text.main)
    __arm_cp.4_1                             0x08006770   Number         4  main.o(.text.main)
    __arm_cp.4_6                             0x08006774   Number         4  main.o(.text.main)
    __arm_cp.4_9                             0x08006778   Number         4  main.o(.text.main)
    __arm_cp.4_10                            0x0800677c   Number         4  main.o(.text.main)
    __arm_cp.4_11                            0x08006780   Number         4  main.o(.text.main)
    __arm_cp.4_12                            0x08006784   Number         4  main.o(.text.main)
    __arm_cp.4_13                            0x08006788   Number         4  main.o(.text.main)
    __arm_cp.4_14                            0x0800678c   Number         4  main.o(.text.main)
    __arm_cp.4_15                            0x08006790   Number         4  main.o(.text.main)
    __arm_cp.4_16                            0x08006794   Number         4  main.o(.text.main)
    __arm_cp.4_17                            0x08006798   Number         4  main.o(.text.main)
    [Anonymous Symbol]                       0x0800679c   Section        0  mc_tasks.o(.text.mc_lock_pins)
    __arm_cp.18_0                            0x08006870   Number         4  mc_tasks.o(.text.mc_lock_pins)
    __arm_cp.18_1                            0x08006874   Number         4  mc_tasks.o(.text.mc_lock_pins)
    __arm_cp.18_2                            0x08006878   Number         4  mc_tasks.o(.text.mc_lock_pins)
    [Anonymous Symbol]                       0x0800687c   Section        0  pwm_common.o(.text.waitForPolarizationEnd)
    [Anonymous Symbol]                       0x080068b8   Section        0  app_handle.o(.text.work_mode_init)
    __arm_cp.0_0                             0x080068c8   Number         4  app_handle.o(.text.work_mode_init)
    __arm_cp.0_1                             0x080068cc   Number         4  app_handle.o(.text.work_mode_init)
    .text_divfast                            0x080068d0   Section      502  aeabi_sdivfast.o(.text_divfast)
    x$fpl$fmul                               0x08006ac8   Section      176  fmul.o(x$fpl$fmul)
    x$fpl$usenofp                            0x08006b78   Section        0  usenofp.o(x$fpl$usenofp)
    CHANNEL_OFFSET_TAB                       0x08006bd8   Data           5  usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB)
    [Anonymous Symbol]                       0x08006bd8   Section        0  usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB)
    CRC4_Lookup8                             0x08006bdd   Data         256  aspep.o(.rodata.CRC4_Lookup8)
    [Anonymous Symbol]                       0x08006bdd   Section        0  aspep.o(.rodata.CRC4_Lookup8)
    M1_ApplicationConfig_reg                 0x08006cff   Data          14  mc_configuration_registers.o(.rodata.M1_ApplicationConfig_reg)
    [Anonymous Symbol]                       0x08006cff   Section        0  mc_configuration_registers.o(.rodata.M1_ApplicationConfig_reg)
    M1_FOCConfig_reg                         0x08006d0d   Data          14  mc_configuration_registers.o(.rodata.M1_FOCConfig_reg)
    [Anonymous Symbol]                       0x08006d0d   Section        0  mc_configuration_registers.o(.rodata.M1_FOCConfig_reg)
    M1_PWR_BOARD                             0x08006d58   Data          36  mc_configuration_registers.o(.rodata.M1_PWR_BOARD)
    [Anonymous Symbol]                       0x08006d58   Section        0  mc_configuration_registers.o(.rodata.M1_PWR_BOARD)
    CRC4_Lookup4                             0x080075f6   Data          16  aspep.o(.rodata.cst16)
    [Anonymous Symbol]                       0x080075f6   Section        0  aspep.o(.rodata.cst16)
    [Anonymous Symbol]                       0x20000000   Section        0  stm32g0xx_hal.o(.data..L_MergedGlobals)
    SysTick_Handler.SystickDividerCounter    0x20000458   Data           1  stm32g0xx_mc_it.o(.data.SysTick_Handler.SystickDividerCounter)
    [Anonymous Symbol]                       0x20000458   Section        0  stm32g0xx_mc_it.o(.data.SysTick_Handler.SystickDividerCounter)
    UASPEP_A                                 0x20000488   Data          20  mcp_config.o(.data.UASPEP_A)
    [Anonymous Symbol]                       0x20000488   Section        0  mcp_config.o(.data.UASPEP_A)
    .bss                                     0x20000568   Section       96  libspace.o(.bss)
    [Anonymous Symbol]                       0x200005c8   Section        0  main.o(.bss..L_MergedGlobals)
    bMCBootCompleted                         0x2000061c   Data           1  mc_tasks.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x2000061c   Section        0  mc_tasks.o(.bss..L_MergedGlobals)
    hMFTaskCounterM1                         0x20000620   Data           2  mc_tasks.o(.bss..L_MergedGlobals)
    hStopPermanencyCounterM1                 0x20000622   Data           2  mc_tasks.o(.bss..L_MergedGlobals)
    pwmcHandle                               0x20000624   Data           4  mc_tasks.o(.bss..L_MergedGlobals)
    pREMNG.0                                 0x20000628   Data           4  mc_tasks.o(.bss..L_MergedGlobals)
    FOCVars                                  0x2000062c   Data          38  mc_tasks.o(.bss..L_MergedGlobals)
    RCM_currentHandle                        0x20000654   Data           1  regular_conversion_manager.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000654   Section        0  regular_conversion_manager.o(.bss..L_MergedGlobals)
    RCM_UserConvState                        0x20000655   Data           1  regular_conversion_manager.o(.bss..L_MergedGlobals)
    RCM_UserConvHandle                       0x20000656   Data           1  regular_conversion_manager.o(.bss..L_MergedGlobals)
    RCM_UserConvValue                        0x20000658   Data           2  regular_conversion_manager.o(.bss..L_MergedGlobals)
    RCM_handle_array                         0x2000065c   Data          16  regular_conversion_manager.o(.bss..L_MergedGlobals)
    RCM_NoInj_array                          0x2000066c   Data          24  regular_conversion_manager.o(.bss..L_MergedGlobals)
    RCM_CB_array                             0x20000684   Data          32  regular_conversion_manager.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x200006a4   Section        0  user_logic.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x200006c2   Section        0  r3_g0xx_pwm_curr_fdbk.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x200006c8   Section        0  app_error.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x200006d0   Section        0  app_handle.o(.bss..L_MergedGlobals)
    MCPAsyncBuffUARTA_A                      0x200006d8   Data        2054  mcp_config.o(.bss.MCPAsyncBuffUARTA_A)
    [Anonymous Symbol]                       0x200006d8   Section        0  mcp_config.o(.bss.MCPAsyncBuffUARTA_A)
    MCPAsyncBuffUARTA_B                      0x20000ee0   Data        2054  mcp_config.o(.bss.MCPAsyncBuffUARTA_B)
    [Anonymous Symbol]                       0x20000ee0   Section        0  mcp_config.o(.bss.MCPAsyncBuffUARTA_B)
    MCPSyncRXBuff                            0x200016e8   Data         130  mcp_config.o(.bss.MCPSyncRXBuff)
    [Anonymous Symbol]                       0x200016e8   Section        0  mcp_config.o(.bss.MCPSyncRXBuff)
    MCPSyncTxBuff                            0x2000176c   Data         134  mcp_config.o(.bss.MCPSyncTxBuff)
    [Anonymous Symbol]                       0x2000176c   Section        0  mcp_config.o(.bss.MCPSyncTxBuff)
    RI_GetPtrReg.nullData16                  0x2000181c   Data           2  register_interface.o(.bss.RI_GetPtrReg.nullData16)
    [Anonymous Symbol]                       0x2000181c   Section        0  register_interface.o(.bss.RI_GetPtrReg.nullData16)
    RealBusVoltageSensorFilterBufferM1       0x2000181e   Data          20  mc_config.o(.bss.RealBusVoltageSensorFilterBufferM1)
    [Anonymous Symbol]                       0x2000181e   Section        0  mc_config.o(.bss.RealBusVoltageSensorFilterBufferM1)
    key_num                                  0x200018a8   Data           1  led_key.o(.bss.key_num)
    [Anonymous Symbol]                       0x200018a8   Section        0  led_key.o(.bss.key_num)
    Heap_Mem                                 0x200018f0   Data         512  startup_stm32g030xx.o(HEAP)
    HEAP                                     0x200018f0   Section      512  startup_stm32g030xx.o(HEAP)
    Stack_Mem                                0x20001af0   Data        1024  startup_stm32g030xx.o(STACK)
    STACK                                    0x20001af0   Section     1024  startup_stm32g030xx.o(STACK)
    __initial_sp                             0x20001ef0   Data           0  startup_stm32g030xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000c0   Number         0  startup_stm32g030xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32g030xx.o(RESET)
    __Vectors_End                            0x080000c0   Data           0  startup_stm32g030xx.o(RESET)
    __main                                   0x080000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000c9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080000d9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_zeroinit                   0x08000105   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000121   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_1                       0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x08000125   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000129   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000129   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000129   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0800012f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0800012f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x08000133   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000133   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800013b   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0800013d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0800013d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000141   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x08000149   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x08000149   Thumb Code     0  rt_memcpy.o(.emb_text)
    Reset_Handler                            0x08000181   Thumb Code    26  startup_stm32g030xx.o(.text)
    ADC1_IRQHandler                          0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    DMA1_Ch4_5_DMAMUX1_OVR_IRQHandler        0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    EXTI0_1_IRQHandler                       0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    EXTI2_3_IRQHandler                       0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    FLASH_IRQHandler                         0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    I2C1_IRQHandler                          0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    I2C2_IRQHandler                          0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    RCC_IRQHandler                           0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    RTC_TAMP_IRQHandler                      0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    SPI1_IRQHandler                          0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    SPI2_IRQHandler                          0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM16_IRQHandler                         0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM17_IRQHandler                         0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM1_CC_IRQHandler                       0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM3_IRQHandler                          0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    USART1_IRQHandler                        0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    WWDG_IRQHandler                          0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    __user_initial_stackheap                 0x080001a9   Thumb Code     0  startup_stm32g030xx.o(.text)
    __aeabi_lmul                             0x080001cd   Thumb Code    48  llmul.o(.text)
    _ll_mul                                  0x080001cd   Thumb Code     0  llmul.o(.text)
    __aeabi_memcpy                           0x080001fd   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x080001fd   Thumb Code     0  rt_memcpy.o(.text)
    _memset_w                                0x0800027f   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x08000299   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x080002b7   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x080002b7   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x080002bb   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x080002bb   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x080002bb   Thumb Code     4  rt_memclr.o(.text)
    __use_two_region_memory                  0x080002bf   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080002c1   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080002c3   Thumb Code     2  heapauxi.o(.text)
    __aeabi_i2f_normalise                    0x080002c5   Thumb Code    72  fflti.o(.text)
    __aeabi_i2f                              0x0800030d   Thumb Code    16  fflti.o(.text)
    _fflt                                    0x0800030d   Thumb Code     0  fflti.o(.text)
    __aeabi_ui2f                             0x0800031d   Thumb Code     6  fflti.o(.text)
    _ffltu                                   0x0800031d   Thumb Code     0  fflti.o(.text)
    __user_setup_stackheap                   0x08000323   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x08000361   Thumb Code    16  exit.o(.text)
    __user_libspace                          0x08000371   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000371   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x08000371   Thumb Code     0  libspace.o(.text)
    __decompress                             0x08000379   Thumb Code     0  __dczerorl2.o(.text)
    __decompress1                            0x08000379   Thumb Code    86  __dczerorl2.o(.text)
    ASPEP_HWDMAReset                         0x080003cf   Thumb Code    22  aspep.o(.text.ASPEP_HWDMAReset)
    ASPEP_HWDataReceivedIT                   0x080003e5   Thumb Code   140  aspep.o(.text.ASPEP_HWDataReceivedIT)
    ASPEP_HWDataTransmittedIT                0x08000475   Thumb Code   162  aspep.o(.text.ASPEP_HWDataTransmittedIT)
    ASPEP_RXframeProcess                     0x08000519   Thumb Code  1480  aspep.o(.text.ASPEP_RXframeProcess)
    ASPEP_getBuffer                          0x08000bc9   Thumb Code    88  aspep.o(.text.ASPEP_getBuffer)
    ASPEP_sendPacket                         0x08000c21   Thumb Code    78  aspep.o(.text.ASPEP_sendPacket)
    ASPEP_start                              0x08000c6f   Thumb Code    36  aspep.o(.text.ASPEP_start)
    Circle_Limitation                        0x08000c95   Thumb Code   124  circle_limitation.o(.text.Circle_Limitation)
    DMA1_Channel1_IRQHandler                 0x08000d15   Thumb Code    16  stm32g0xx_mc_it.o(.text.DMA1_Channel1_IRQHandler)
    DMA1_Channel2_3_IRQHandler               0x08000d29   Thumb Code    24  stm32g0xx_mc_it.o(.text.DMA1_Channel2_3_IRQHandler)
    EXTI4_15_IRQHandler                      0x08000d49   Thumb Code    32  stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler)
    FOC_CalcCurrRef                          0x08000d6d   Thumb Code    36  mc_tasks.o(.text.FOC_CalcCurrRef)
    FOC_Clear                                0x08000d91   Thumb Code    80  mc_tasks.o(.text.FOC_Clear)
    FOC_InitAdditionalMethods                0x08000df1   Thumb Code     2  mc_tasks.o(.text.FOC_InitAdditionalMethods)
    HAL_GetTick                              0x08000df5   Thumb Code     8  stm32g0xx_hal.o(.text.HAL_GetTick)
    HAL_IncTick                              0x08000dfd   Thumb Code    16  stm32g0xx_hal.o(.text.HAL_IncTick)
    HAL_Init                                 0x08000e11   Thumb Code    40  stm32g0xx_hal.o(.text.HAL_Init)
    HAL_InitTick                             0x08000e3d   Thumb Code    64  stm32g0xx_hal.o(.text.HAL_InitTick)
    HAL_MspInit                              0x08000e81   Thumb Code    40  stm32g0xx_hal_msp.o(.text.HAL_MspInit)
    HAL_NVIC_EnableIRQ                       0x08000ead   Thumb Code    20  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    HAL_NVIC_SetPriority                     0x08000ec5   Thumb Code    56  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    HAL_RCC_GetHCLKFreq                      0x08000f05   Thumb Code     8  stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    HAL_SYSTICK_Callback                     0x08000f11   Thumb Code     2  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Callback)
    HAL_SYSTICK_Config                       0x08000f15   Thumb Code    40  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config)
    HAL_SYSTICK_IRQHandler                   0x08000f49   Thumb Code     8  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler)
    HAL_TIMEx_Break2Callback                 0x08000f51   Thumb Code     2  stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback)
    HAL_TIMEx_BreakCallback                  0x08000f53   Thumb Code     2  stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback)
    HAL_TIMEx_CommutCallback                 0x08000f55   Thumb Code     2  stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback)
    HAL_TIM_Base_Init                        0x08000f59   Thumb Code   188  stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    HAL_TIM_Base_MspInit                     0x08001029   Thumb Code    60  stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspInit)
    HAL_TIM_IC_CaptureCallback               0x0800106d   Thumb Code     2  stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback)
    HAL_TIM_IRQHandler                       0x08001071   Thumb Code   352  stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    HAL_TIM_OC_DelayElapsedCallback          0x080011d5   Thumb Code     2  stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback)
    HAL_TIM_PWM_PulseFinishedCallback        0x080011d7   Thumb Code     2  stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback)
    HAL_TIM_PeriodElapsedCallback            0x080011d9   Thumb Code     2  stm32g0xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback)
    HAL_TIM_TriggerCallback                  0x080011db   Thumb Code     2  stm32g0xx_hal_tim.o(.text.HAL_TIM_TriggerCallback)
    HardFault_Handler                        0x080011dd   Thumb Code     6  stm32g0xx_mc_it.o(.text.HardFault_Handler)
    LL_ADC_Init                              0x080011e5   Thumb Code    48  stm32g0xx_ll_adc.o(.text.LL_ADC_Init)
    LL_ADC_REG_Init                          0x08001219   Thumb Code   100  stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init)
    LL_GPIO_Init                             0x08001281   Thumb Code   198  stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init)
    LL_RCC_GetSystemClocksFreq               0x08001349   Thumb Code   132  stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq)
    LL_RCC_GetUSARTClockFreq                 0x080013cd   Thumb Code   264  stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq)
    LL_SetSystemCoreClock                    0x080014f5   Thumb Code     8  stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    LL_TIM_BDTR_Init                         0x08001501   Thumb Code   128  stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init)
    LL_TIM_Init                              0x08001591   Thumb Code   124  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    LL_TIM_OC_Init                           0x08001619   Thumb Code   700  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    LL_USART_Init                            0x080018fd   Thumb Code   200  stm32g0xx_ll_usart.o(.text.LL_USART_Init)
    MCI_Clear_Iqdref                         0x08001a05   Thumb Code    18  mc_interface.o(.text.MCI_Clear_Iqdref)
    MCI_ExecBufferedCommands                 0x08001a17   Thumb Code   104  mc_interface.o(.text.MCI_ExecBufferedCommands)
    MCI_ExecSpeedRamp                        0x08001a81   Thumb Code    16  mc_interface.o(.text.MCI_ExecSpeedRamp)
    MCI_ExecTorqueRamp                       0x08001a95   Thumb Code    16  mc_interface.o(.text.MCI_ExecTorqueRamp)
    MCI_FaultAcknowledged                    0x08001aa5   Thumb Code    42  mc_interface.o(.text.MCI_FaultAcknowledged)
    MCI_FaultProcessing                      0x08001acf   Thumb Code    16  mc_interface.o(.text.MCI_FaultProcessing)
    MCI_GetAvrgMecSpeedUnit                  0x08001adf   Thumb Code    14  mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit)
    MCI_GetControlMode                       0x08001aed   Thumb Code     4  mc_interface.o(.text.MCI_GetControlMode)
    MCI_GetCurrentFaults                     0x08001af1   Thumb Code     4  mc_interface.o(.text.MCI_GetCurrentFaults)
    MCI_GetFaultState                        0x08001af5   Thumb Code    10  mc_interface.o(.text.MCI_GetFaultState)
    MCI_GetIab                               0x08001aff   Thumb Code    12  mc_interface.o(.text.MCI_GetIab)
    MCI_GetIalphabeta                        0x08001b0b   Thumb Code    12  mc_interface.o(.text.MCI_GetIalphabeta)
    MCI_GetImposedMotorDirection             0x08001b17   Thumb Code    68  mc_interface.o(.text.MCI_GetImposedMotorDirection)
    MCI_GetIqd                               0x08001b5b   Thumb Code    12  mc_interface.o(.text.MCI_GetIqd)
    MCI_GetIqdref                            0x08001b67   Thumb Code    12  mc_interface.o(.text.MCI_GetIqdref)
    MCI_GetLastRampFinalDuration             0x08001b73   Thumb Code     4  mc_interface.o(.text.MCI_GetLastRampFinalDuration)
    MCI_GetLastRampFinalSpeed                0x08001b77   Thumb Code     6  mc_interface.o(.text.MCI_GetLastRampFinalSpeed)
    MCI_GetLastRampFinalTorque               0x08001b7d   Thumb Code     6  mc_interface.o(.text.MCI_GetLastRampFinalTorque)
    MCI_GetMecSpeedRefUnit                   0x08001b83   Thumb Code    10  mc_interface.o(.text.MCI_GetMecSpeedRefUnit)
    MCI_GetOccurredFaults                    0x08001b8d   Thumb Code     4  mc_interface.o(.text.MCI_GetOccurredFaults)
    MCI_GetSTMState                          0x08001b91   Thumb Code     4  mc_interface.o(.text.MCI_GetSTMState)
    MCI_GetTeref                             0x08001b95   Thumb Code     8  mc_interface.o(.text.MCI_GetTeref)
    MCI_GetValphabeta                        0x08001b9d   Thumb Code    12  mc_interface.o(.text.MCI_GetValphabeta)
    MCI_GetVqd                               0x08001ba9   Thumb Code    12  mc_interface.o(.text.MCI_GetVqd)
    MCI_Init                                 0x08001bb5   Thumb Code    24  mc_interface.o(.text.MCI_Init)
    MCI_SetCurrentReferences                 0x08001bcd   Thumb Code    16  mc_interface.o(.text.MCI_SetCurrentReferences)
    MCI_StartMotor                           0x08001be1   Thumb Code    48  mc_interface.o(.text.MCI_StartMotor)
    MCI_StopMotor                            0x08001c11   Thumb Code    68  mc_interface.o(.text.MCI_StopMotor)
    MCI_StopRamp                             0x08001c55   Thumb Code    10  mc_interface.o(.text.MCI_StopRamp)
    MCM_Clarke                               0x08001c61   Thumb Code    60  mc_math.o(.text.MCM_Clarke)
    MCM_Park                                 0x08001ca5   Thumb Code   144  mc_math.o(.text.MCM_Park)
    MCM_Rev_Park                             0x08001d3d   Thumb Code    46  mc_math.o(.text.MCM_Rev_Park)
    MCM_Trig_Functions                       0x08001d6d   Thumb Code   120  mc_math.o(.text.MCM_Trig_Functions)
    MCPA_cfgLog                              0x08001de9   Thumb Code   228  mcpa.o(.text.MCPA_cfgLog)
    MCPA_dataLog                             0x08001ecd   Thumb Code   476  mcpa.o(.text.MCPA_dataLog)
    MCPA_flushDataLog                        0x080020ad   Thumb Code   108  mcpa.o(.text.MCPA_flushDataLog)
    MCP_ReceivedPacket                       0x08002119   Thumb Code   352  mcp.o(.text.MCP_ReceivedPacket)
    MC_APP_BootHook                          0x0800227d   Thumb Code     2  mc_app_hooks.o(.text.MC_APP_BootHook)
    MC_APP_PostMediumFrequencyHook_M1        0x0800227f   Thumb Code     2  mc_app_hooks.o(.text.MC_APP_PostMediumFrequencyHook_M1)
    MC_GetSTMStateMotor1                     0x08002281   Thumb Code    12  mc_api.o(.text.MC_GetSTMStateMotor1)
    MC_ProfilerCommand                       0x0800228d   Thumb Code     4  mc_api.o(.text.MC_ProfilerCommand)
    MC_ProgramSpeedRampMotor1                0x08002291   Thumb Code    16  mc_api.o(.text.MC_ProgramSpeedRampMotor1)
    MC_RunMotorControlTasks                  0x080022a1   Thumb Code    20  mc_tasks.o(.text.MC_RunMotorControlTasks)
    MC_Scheduler                             0x080022b5   Thumb Code   112  mc_tasks.o(.text.MC_Scheduler)
    MC_StartMotor1                           0x08002329   Thumb Code    12  mc_api.o(.text.MC_StartMotor1)
    MC_StopMotor1                            0x08002335   Thumb Code    12  mc_api.o(.text.MC_StopMotor1)
    MCboot                                   0x08002341   Thumb Code   200  mc_tasks.o(.text.MCboot)
    MX_MotorControl_Init                     0x08002449   Thumb Code    44  motorcontrol.o(.text.MX_MotorControl_Init)
    NMI_Handler                              0x0800247d   Thumb Code     2  stm32g0xx_it.o(.text.NMI_Handler)
    NTC_CalcAvTemp                           0x08002481   Thumb Code    56  ntc_temperature_sensor.o(.text.NTC_CalcAvTemp)
    NTC_Clear                                0x080024bd   Thumb Code     6  ntc_temperature_sensor.o(.text.NTC_Clear)
    NTC_GetAvTemp_C                          0x080024c3   Thumb Code    34  ntc_temperature_sensor.o(.text.NTC_GetAvTemp_C)
    NTC_Init                                 0x080024e5   Thumb Code    38  ntc_temperature_sensor.o(.text.NTC_Init)
    NTC_SetFaultState                        0x0800250b   Thumb Code    26  ntc_temperature_sensor.o(.text.NTC_SetFaultState)
    PID_GetKD                                0x08002525   Thumb Code     6  pid_regulator.o(.text.PID_GetKD)
    PID_GetKDDivisorPOW2                     0x0800252b   Thumb Code     4  pid_regulator.o(.text.PID_GetKDDivisorPOW2)
    PID_GetKI                                0x0800252f   Thumb Code     6  pid_regulator.o(.text.PID_GetKI)
    PID_GetKIDivisor                         0x08002535   Thumb Code     4  pid_regulator.o(.text.PID_GetKIDivisor)
    PID_GetKIDivisorPOW2                     0x08002539   Thumb Code     4  pid_regulator.o(.text.PID_GetKIDivisorPOW2)
    PID_GetKP                                0x0800253d   Thumb Code     6  pid_regulator.o(.text.PID_GetKP)
    PID_GetKPDivisorPOW2                     0x08002543   Thumb Code     4  pid_regulator.o(.text.PID_GetKPDivisorPOW2)
    PID_HandleInit                           0x08002547   Thumb Code    16  pid_regulator.o(.text.PID_HandleInit)
    PID_SetIntegralTerm                      0x08002557   Thumb Code     4  pid_regulator.o(.text.PID_SetIntegralTerm)
    PID_SetKD                                0x0800255b   Thumb Code     4  pid_regulator.o(.text.PID_SetKD)
    PID_SetKDDivisorPOW2                     0x0800255f   Thumb Code    10  pid_regulator.o(.text.PID_SetKDDivisorPOW2)
    PID_SetKI                                0x08002569   Thumb Code     4  pid_regulator.o(.text.PID_SetKI)
    PID_SetKIDivisorPOW2                     0x0800256d   Thumb Code    36  pid_regulator.o(.text.PID_SetKIDivisorPOW2)
    PID_SetKP                                0x08002599   Thumb Code     4  pid_regulator.o(.text.PID_SetKP)
    PID_SetKPDivisorPOW2                     0x0800259d   Thumb Code    10  pid_regulator.o(.text.PID_SetKPDivisorPOW2)
    PID_SetLowerIntegralTermLimit            0x080025a7   Thumb Code     4  pid_regulator.o(.text.PID_SetLowerIntegralTermLimit)
    PID_SetUpperIntegralTermLimit            0x080025ab   Thumb Code     4  pid_regulator.o(.text.PID_SetUpperIntegralTermLimit)
    PI_Controller                            0x080025b1   Thumb Code   132  pid_regulator.o(.text.PI_Controller)
    PQD_CalcElMotorPower                     0x08002639   Thumb Code    48  pqd_motor_power_measurement.o(.text.PQD_CalcElMotorPower)
    PQD_Clear                                0x08002669   Thumb Code     6  pqd_motor_power_measurement.o(.text.PQD_Clear)
    PQD_GetAvrgElMotorPowerW                 0x0800266f   Thumb Code    30  pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW)
    PWMC_CheckOverCurrent                    0x0800268d   Thumb Code     8  pwm_curr_fdbk.o(.text.PWMC_CheckOverCurrent)
    PWMC_CurrentReadingCalibr                0x08002695   Thumb Code    68  pwm_curr_fdbk.o(.text.PWMC_CurrentReadingCalibr)
    PWMC_GetPhaseCurrents                    0x080026d9   Thumb Code     8  pwm_curr_fdbk.o(.text.PWMC_GetPhaseCurrents)
    PWMC_SetPhaseVoltage                     0x080026e1   Thumb Code   480  pwm_curr_fdbk.o(.text.PWMC_SetPhaseVoltage)
    PWMC_SwitchOffPWM                        0x080028c5   Thumb Code     8  pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM)
    PWMC_SwitchOnPWM                         0x080028cd   Thumb Code     8  pwm_curr_fdbk.o(.text.PWMC_SwitchOnPWM)
    PendSV_Handler                           0x080028d5   Thumb Code     2  stm32g0xx_it.o(.text.PendSV_Handler)
    R3_1_CurrentReadingCalibration           0x080028d9   Thumb Code   280  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    R3_1_GetOffsetCalib                      0x08002a09   Thumb Code    14  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetOffsetCalib)
    R3_1_GetPhaseCurrents                    0x08002a19   Thumb Code   416  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents)
    R3_1_HFCurrentsCalibrationAB             0x08002bd1   Thumb Code    76  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationAB)
    R3_1_HFCurrentsCalibrationC              0x08002c1d   Thumb Code    68  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationC)
    R3_1_Init                                0x08002c65   Thumb Code   284  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    R3_1_IsOverCurrentOccurred               0x08002da1   Thumb Code    50  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_IsOverCurrentOccurred)
    R3_1_OVERCURRENT_IRQHandler              0x08002dd3   Thumb Code    58  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_OVERCURRENT_IRQHandler)
    R3_1_OVERVOLTAGE_IRQHandler              0x08002e0d   Thumb Code    28  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_OVERVOLTAGE_IRQHandler)
    R3_1_SetADCSampPointCalibration          0x08002e29   Thumb Code    30  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointCalibration)
    R3_1_SetADCSampPointSectX                0x08002e47   Thumb Code   104  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX)
    R3_1_SetOffsetCalib                      0x08002eaf   Thumb Code    20  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetOffsetCalib)
    R3_1_SwitchOffPWM                        0x08002ec5   Thumb Code   164  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM)
    R3_1_SwitchOnPWM                         0x08002f69   Thumb Code   196  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM)
    R3_1_TIMx_UP_IRQHandler                  0x08003039   Thumb Code   108  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TIMx_UP_IRQHandler)
    R3_1_TurnOnLowSides                      0x080030ad   Thumb Code    84  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides)
    R3_1_WriteTIMRegisters                   0x08003105   Thumb Code    44  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters)
    RCM_ExecNextConv                         0x08003135   Thumb Code    92  regular_conversion_manager.o(.text.RCM_ExecNextConv)
    RCM_ExecRegularConv                      0x08003195   Thumb Code   416  regular_conversion_manager.o(.text.RCM_ExecRegularConv)
    RCM_ExecUserConv                         0x08003341   Thumb Code    60  regular_conversion_manager.o(.text.RCM_ExecUserConv)
    RCM_ReadOngoingConv                      0x0800337d   Thumb Code    64  regular_conversion_manager.o(.text.RCM_ReadOngoingConv)
    RCM_RegisterRegConv                      0x080033bd   Thumb Code   296  regular_conversion_manager.o(.text.RCM_RegisterRegConv)
    REMNG_Calc                               0x080034ed   Thumb Code    44  ramp_ext_mngr.o(.text.REMNG_Calc)
    REMNG_ExecRamp                           0x08003519   Thumb Code   128  ramp_ext_mngr.o(.text.REMNG_ExecRamp)
    REMNG_Init                               0x08003599   Thumb Code    16  ramp_ext_mngr.o(.text.REMNG_Init)
    REMNG_RampCompleted                      0x080035a9   Thumb Code     8  ramp_ext_mngr.o(.text.REMNG_RampCompleted)
    RI_GetIDSize                             0x080035b1   Thumb Code    32  register_interface.o(.text.RI_GetIDSize)
    RI_GetPtrReg                             0x080035d1   Thumb Code   244  register_interface.o(.text.RI_GetPtrReg)
    RI_GetRegCommandParser                   0x080036d5   Thumb Code  2196  register_interface.o(.text.RI_GetRegCommandParser)
    RI_SetRegCommandParser                   0x08003f99   Thumb Code  1832  register_interface.o(.text.RI_SetRegCommandParser)
    RUC_Clear                                0x08004719   Thumb Code   128  revup_ctrl.o(.text.RUC_Clear)
    RUC_Exec                                 0x08004799   Thumb Code   104  revup_ctrl.o(.text.RUC_Exec)
    RUC_FirstAccelerationStageReached        0x08004801   Thumb Code    20  revup_ctrl.o(.text.RUC_FirstAccelerationStageReached)
    RUC_GetNumberOfPhases                    0x08004815   Thumb Code     6  revup_ctrl.o(.text.RUC_GetNumberOfPhases)
    RUC_GetPhase                             0x0800481b   Thumb Code    18  revup_ctrl.o(.text.RUC_GetPhase)
    RUC_Init                                 0x0800482d   Thumb Code    96  revup_ctrl.o(.text.RUC_Init)
    RUC_SetPhase                             0x08004891   Thumb Code    18  revup_ctrl.o(.text.RUC_SetPhase)
    RVBS_CalcAvVbus                          0x080048a5   Thumb Code   184  r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus)
    RVBS_CheckFaultState                     0x08004961   Thumb Code    78  r_divider_bus_voltage_sensor.o(.text.RVBS_CheckFaultState)
    RVBS_Clear                               0x080049af   Thumb Code    74  r_divider_bus_voltage_sensor.o(.text.RVBS_Clear)
    RVBS_Init                                0x080049f9   Thumb Code    22  r_divider_bus_voltage_sensor.o(.text.RVBS_Init)
    SPD_GetAvrgMecSpeedUnit                  0x08004a0f   Thumb Code     6  speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit)
    SPD_GetElAngle                           0x08004a15   Thumb Code     6  speed_pos_fdbk.o(.text.SPD_GetElAngle)
    SPD_GetInstElSpeedDpp                    0x08004a1b   Thumb Code     6  speed_pos_fdbk.o(.text.SPD_GetInstElSpeedDpp)
    SPD_GetS16Speed                          0x08004a21   Thumb Code    24  speed_pos_fdbk.o(.text.SPD_GetS16Speed)
    SPD_IsMecSpeedReliable                   0x08004a3d   Thumb Code    84  speed_pos_fdbk.o(.text.SPD_IsMecSpeedReliable)
    STC_CalcTorqueReference                  0x08004a91   Thumb Code   128  speed_torq_ctrl.o(.text.STC_CalcTorqueReference)
    STC_Clear                                0x08004b1d   Thumb Code    18  speed_torq_ctrl.o(.text.STC_Clear)
    STC_ExecRamp                             0x08004b31   Thumb Code   156  speed_torq_ctrl.o(.text.STC_ExecRamp)
    STC_ForceSpeedReferenceToCurrentSpeed    0x08004bd1   Thumb Code    16  speed_torq_ctrl.o(.text.STC_ForceSpeedReferenceToCurrentSpeed)
    STC_GetDefaultIqdref                     0x08004be1   Thumb Code    10  speed_torq_ctrl.o(.text.STC_GetDefaultIqdref)
    STC_GetMecSpeedRefUnit                   0x08004beb   Thumb Code     6  speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnit)
    STC_GetSpeedSensor                       0x08004bf1   Thumb Code     4  speed_torq_ctrl.o(.text.STC_GetSpeedSensor)
    STC_GetTorqueRef                         0x08004bf5   Thumb Code     6  speed_torq_ctrl.o(.text.STC_GetTorqueRef)
    STC_Init                                 0x08004bfb   Thumb Code    32  speed_torq_ctrl.o(.text.STC_Init)
    STC_SetControlMode                       0x08004c1b   Thumb Code     8  speed_torq_ctrl.o(.text.STC_SetControlMode)
    STC_SetSpeedSensor                       0x08004c23   Thumb Code     4  speed_torq_ctrl.o(.text.STC_SetSpeedSensor)
    STC_StopRamp                             0x08004c27   Thumb Code     8  speed_torq_ctrl.o(.text.STC_StopRamp)
    STO_OTF_ResetPLL                         0x08004c2f   Thumb Code    14  sto_pll_speed_pos_fdbk.o(.text.STO_OTF_ResetPLL)
    STO_PLL_CalcAvrgElSpeedDpp               0x08004c3d   Thumb Code    66  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgElSpeedDpp)
    STO_PLL_CalcAvrgMecSpeedUnit             0x08004c81   Thumb Code   584  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgMecSpeedUnit)
    STO_PLL_CalcElAngle                      0x08004ec9   Thumb Code   536  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcElAngle)
    STO_PLL_Clear                            0x080050e9   Thumb Code    90  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Clear)
    STO_PLL_ForceConvergency1                0x08005143   Thumb Code    12  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_ForceConvergency1)
    STO_PLL_ForceConvergency2                0x0800514f   Thumb Code    12  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_ForceConvergency2)
    STO_PLL_GetEstimatedBemf                 0x0800515b   Thumb Code     4  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedBemf)
    STO_PLL_GetEstimatedBemfLevel            0x0800515f   Thumb Code     8  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedBemfLevel)
    STO_PLL_GetEstimatedCurrent              0x08005167   Thumb Code    22  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedCurrent)
    STO_PLL_GetObservedBemfLevel             0x0800517d   Thumb Code     6  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObservedBemfLevel)
    STO_PLL_GetObserverGains                 0x08005183   Thumb Code    10  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObserverGains)
    STO_PLL_Init                             0x0800518d   Thumb Code   136  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init)
    STO_PLL_IsObserverConverged              0x0800521d   Thumb Code   166  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsObserverConverged)
    STO_PLL_IsVarianceTight                  0x080052c3   Thumb Code     8  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsVarianceTight)
    STO_PLL_SetObserverGains                 0x080052cb   Thumb Code     6  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_SetObserverGains)
    STO_ResetPLL                             0x080052d1   Thumb Code    12  sto_pll_speed_pos_fdbk.o(.text.STO_ResetPLL)
    SVC_Handler                              0x080052dd   Thumb Code     2  stm32g0xx_it.o(.text.SVC_Handler)
    SysTick_Handler                          0x080052e1   Thumb Code    52  stm32g0xx_mc_it.o(.text.SysTick_Handler)
    SystemClock_Config                       0x0800531d   Thumb Code   228  main.o(.text.SystemClock_Config)
    SystemInit                               0x08005415   Thumb Code     2  system_stm32g0xx.o(.text.SystemInit)
    TIM14_IRQHandler                         0x08005419   Thumb Code    12  stm32g0xx_it.o(.text.TIM14_IRQHandler)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x08005429   Thumb Code   104  stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    TSK_ChargeBootCapDelayHasElapsedM1       0x080054a1   Thumb Code    12  mc_tasks.o(.text.TSK_ChargeBootCapDelayHasElapsedM1)
    TSK_HardwareFaultTask                    0x080054ad   Thumb Code    24  mc_tasks.o(.text.TSK_HardwareFaultTask)
    TSK_HighFrequencyTask                    0x080054c5   Thumb Code   388  mc_tasks.o(.text.TSK_HighFrequencyTask)
    TSK_MF_StopProcessing                    0x08005671   Thumb Code    52  mc_tasks.o(.text.TSK_MF_StopProcessing)
    TSK_MediumFrequencyTaskM1                0x080056ad   Thumb Code   800  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    TSK_SafetyTask                           0x080059ed   Thumb Code    24  mc_tasks.o(.text.TSK_SafetyTask)
    TSK_SafetyTask_PWMOFF                    0x08005a09   Thumb Code   132  mc_tasks.o(.text.TSK_SafetyTask_PWMOFF)
    TSK_SetChargeBootCapDelayM1              0x08005aa5   Thumb Code     8  mc_tasks.o(.text.TSK_SetChargeBootCapDelayM1)
    TSK_SetStopPermanencyTimeM1              0x08005aad   Thumb Code     8  mc_tasks.o(.text.TSK_SetStopPermanencyTimeM1)
    TSK_StopPermanencyTimeHasElapsedM1       0x08005ab5   Thumb Code    12  mc_tasks.o(.text.TSK_StopPermanencyTimeHasElapsedM1)
    UASPEP_IDLE_ENABLE                       0x08005ac5   Thumb Code    28  usart_aspep_driver.o(.text.UASPEP_IDLE_ENABLE)
    UASPEP_INIT                              0x08005ae1   Thumb Code   144  usart_aspep_driver.o(.text.UASPEP_INIT)
    UASPEP_RECEIVE_BUFFER                    0x08005b71   Thumb Code    40  usart_aspep_driver.o(.text.UASPEP_RECEIVE_BUFFER)
    UASPEP_SEND_PACKET                       0x08005b99   Thumb Code    44  usart_aspep_driver.o(.text.UASPEP_SEND_PACKET)
    UI_HandleStartStopButton_cb              0x08005bcd   Thumb Code    22  mc_tasks.o(.text.UI_HandleStartStopButton_cb)
    USART2_IRQHandler                        0x08005be5   Thumb Code   228  stm32g0xx_mc_it.o(.text.USART2_IRQHandler)
    VBS_GetAvBusVoltage_V                    0x08005cd9   Thumb Code    10  bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_V)
    VBS_GetAvBusVoltage_d                    0x08005ce3   Thumb Code     4  bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_d)
    VSS_CalcAvrgMecSpeedUnit                 0x08005ce7   Thumb Code   138  virtual_speed_sensor.o(.text.VSS_CalcAvrgMecSpeedUnit)
    VSS_CalcElAngle                          0x08005d71   Thumb Code   172  virtual_speed_sensor.o(.text.VSS_CalcElAngle)
    VSS_Clear                                0x08005e1d   Thumb Code    26  virtual_speed_sensor.o(.text.VSS_Clear)
    VSS_Init                                 0x08005e37   Thumb Code     8  virtual_speed_sensor.o(.text.VSS_Init)
    VSS_SetMecAcceleration                   0x08005e3f   Thumb Code   150  virtual_speed_sensor.o(.text.VSS_SetMecAcceleration)
    VSS_SetMecAngle                          0x08005ed5   Thumb Code    22  virtual_speed_sensor.o(.text.VSS_SetMecAngle)
    VSS_SetStartTransition                   0x08005eeb   Thumb Code    34  virtual_speed_sensor.o(.text.VSS_SetStartTransition)
    VSS_TransitionEnded                      0x08005f0d   Thumb Code     6  virtual_speed_sensor.o(.text.VSS_TransitionEnded)
    _sys_exit                                0x08005f13   Thumb Code     2  main.o(.text._sys_exit)
    exe_key_func                             0x08005f15   Thumb Code   224  led_key.o(.text.exe_key_func)
    getScalingFactor                         0x08006009   Thumb Code    84  ramp_ext_mngr.o(.text.getScalingFactor)
    get_key_state                            0x0800605d   Thumb Code   216  led_key.o(.text.get_key_state)
    main                                     0x08006141   Thumb Code  1580  main.o(.text.main)
    mc_lock_pins                             0x0800679d   Thumb Code   212  mc_tasks.o(.text.mc_lock_pins)
    waitForPolarizationEnd                   0x0800687d   Thumb Code    60  pwm_common.o(.text.waitForPolarizationEnd)
    work_mode_init                           0x080068b9   Thumb Code    16  app_handle.o(.text.work_mode_init)
    __aeabi_uidiv                            0x080068d1   Thumb Code    68  aeabi_sdivfast.o(.text_divfast)
    __aeabi_idiv                             0x08006915   Thumb Code   434  aeabi_sdivfast.o(.text_divfast)
    __aeabi_fmul                             0x08006ac9   Thumb Code     0  fmul.o(x$fpl$fmul)
    _fmul                                    0x08006ac9   Thumb Code   172  fmul.o(x$fpl$fmul)
    AHBPrescTable                            0x08006b78   Data          64  system_stm32g0xx.o(.rodata.AHBPrescTable)
    __I$use$fp                               0x08006b78   Number         0  usenofp.o(x$fpl$usenofp)
    APBPrescTable                            0x08006bb8   Data          32  system_stm32g0xx.o(.rodata.APBPrescTable)
    CTL_BOARD                                0x08006cdd   Data          14  mc_configuration_registers.o(.rodata.CTL_BOARD)
    FIRMWARE_NAME                            0x08006ceb   Data          20  mc_configuration_registers.o(.rodata.FIRMWARE_NAME)
    M1_MotorConfig_reg                       0x08006d1c   Data          60  mc_configuration_registers.o(.rodata.M1_MotorConfig_reg)
    R3_1_Params                              0x08006d7c   Data         120  mc_parameters.o(.rodata.R3_1_Params)
    SqrtTable                                0x08006df4   Data        2050  circle_limitation.o(.rodata.SqrtTable)
    globalConfig_reg                         0x08007606   Data          10  mc_configuration_registers.o(.rodata.globalConfig_reg)
    hSin_Cos_Table                           0x08007610   Data         512  mc_math.o(.rodata.hSin_Cos_Table)
    Region$$Table$$Base                      0x08007810   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08007830   Number         0  anon$$obj.o(Region$$Table)
    uwTickFreq                               0x20000000   Data           1  stm32g0xx_hal.o(.data..L_MergedGlobals)
    uwTickPrio                               0x20000004   Data           4  stm32g0xx_hal.o(.data..L_MergedGlobals)
    ApplicationConfig_reg                    0x20000008   Data           4  mc_configuration_registers.o(.data.ApplicationConfig_reg)
    BusVoltageSensor_M1                      0x2000000c   Data          44  mc_config.o(.data.BusVoltageSensor_M1)
    CircleLimitationM1                       0x20000038   Data         180  mc_config.o(.data.CircleLimitationM1)
    FOCConfig_reg                            0x200000ec   Data           4  mc_configuration_registers.o(.data.FOCConfig_reg)
    MCPA_UART_A                              0x200000f0   Data          44  mcp_config.o(.data.MCPA_UART_A)
    MCP_Over_UartA                           0x2000011c   Data          16  mcp_config.o(.data.MCP_Over_UartA)
    MotorConfig_reg                          0x2000012c   Data           4  mc_configuration_registers.o(.data.MotorConfig_reg)
    PIDIdHandle_M1                           0x20000130   Data          44  mc_config.o(.data.PIDIdHandle_M1)
    PIDIqHandle_M1                           0x2000015c   Data          44  mc_config.o(.data.PIDIqHandle_M1)
    PIDSpeedHandle_M1                        0x20000188   Data          44  mc_config.o(.data.PIDSpeedHandle_M1)
    PQD_MotorPowMeasM1                       0x200001b4   Data          16  mc_config.o(.data.PQD_MotorPowMeasM1)
    PWM_Handle_M1                            0x200001c4   Data         144  mc_config.o(.data.PWM_Handle_M1)
    PWR_BOARD_NAME                           0x20000254   Data           4  mc_configuration_registers.o(.data.PWR_BOARD_NAME)
    RampExtMngrHFParamsM1                    0x20000258   Data          24  mc_config.o(.data.RampExtMngrHFParamsM1)
    RevUpControlM1                           0x20000270   Data         120  mc_config.o(.data.RevUpControlM1)
    STO_M1                                   0x200002e8   Data          20  mc_config.o(.data.STO_M1)
    STO_PLL_M1                               0x200002fc   Data         296  mc_config.o(.data.STO_PLL_M1)
    SpeednTorqCtrlM1                         0x20000424   Data          52  mc_config.o(.data.SpeednTorqCtrlM1)
    SystemCoreClock                          0x2000045c   Data           4  system_stm32g0xx.o(.data.SystemCoreClock)
    TempSensor_M1                            0x20000460   Data          40  mc_config.o(.data.TempSensor_M1)
    VirtualSpeedSensorM1                     0x2000049c   Data          56  mc_config.o(.data.VirtualSpeedSensorM1)
    aspepOverUartA                           0x200004d4   Data         116  mcp_config.o(.data.aspepOverUartA)
    g_work_mode                              0x20000548   Data           1  app_handle.o(.data.g_work_mode)
    pMPM                                     0x2000054c   Data           4  mc_config.o(.data.pMPM)
    pPIDId                                   0x20000550   Data           4  mc_config.o(.data.pPIDId)
    pPIDIq                                   0x20000554   Data           4  mc_config.o(.data.pPIDIq)
    pSTC                                     0x20000558   Data           4  mc_config.o(.data.pSTC)
    pTemperatureSensor                       0x2000055c   Data           4  mc_config.o(.data.pTemperatureSensor)
    switch_mode_tmp                          0x20000560   Data           1  led_key.o(.data.switch_mode_tmp)
    __libspace_start                         0x20000568   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200005c8   Data           0  libspace.o(.bss)
    time_1000ms                              0x200005c8   Data           4  main.o(.bss..L_MergedGlobals)
    time_ms                                  0x200005cc   Data           4  main.o(.bss..L_MergedGlobals)
    htim14                                   0x200005d0   Data          76  main.o(.bss..L_MergedGlobals)
    hBootCapDelayCounterM1                   0x2000061e   Data           2  mc_tasks.o(.bss..L_MergedGlobals)
    M1EnableStartFlag                        0x200006a4   Data           1  user_logic.o(.bss..L_MergedGlobals)
    UARTSpeedCMD_M1                          0x200006a6   Data           2  user_logic.o(.bss..L_MergedGlobals)
    UARTSpeedCMDLast_M1                      0x200006a8   Data           2  user_logic.o(.bss..L_MergedGlobals)
    report_speed                             0x200006aa   Data           2  user_logic.o(.bss..L_MergedGlobals)
    speed_cmd                                0x200006ac   Data           2  user_logic.o(.bss..L_MergedGlobals)
    report_speed_buf                         0x200006b0   Data           4  user_logic.o(.bss..L_MergedGlobals)
    lib_debug_compressor_speed_fdbk          0x200006b4   Data           4  user_logic.o(.bss..L_MergedGlobals)
    lib_debug                                0x200006b8   Data          10  user_logic.o(.bss..L_MergedGlobals)
    test_c                                   0x200006c2   Data           2  r3_g0xx_pwm_curr_fdbk.o(.bss..L_MergedGlobals)
    testhReg1                                0x200006c4   Data           2  r3_g0xx_pwm_curr_fdbk.o(.bss..L_MergedGlobals)
    testhReg2                                0x200006c6   Data           2  r3_g0xx_pwm_curr_fdbk.o(.bss..L_MergedGlobals)
    IPM_ErrFlag                              0x200006c8   Data           1  app_error.o(.bss..L_MergedGlobals)
    BusVoltage                               0x200006ca   Data           2  app_error.o(.bss..L_MergedGlobals)
    BusVoltage_LTime                         0x200006cc   Data           2  app_error.o(.bss..L_MergedGlobals)
    BusVoltage_HTime                         0x200006ce   Data           2  app_error.o(.bss..L_MergedGlobals)
    g_work_mode_ppre                         0x200006d0   Data           1  app_handle.o(.bss..L_MergedGlobals)
    g_work_mode_pre                          0x200006d1   Data           1  app_handle.o(.bss..L_MergedGlobals)
    GLOBAL_TIMESTAMP                         0x200006d4   Data           4  mcpa.o(.bss.GLOBAL_TIMESTAMP)
    MCP_UserCallBack                         0x200017f4   Data           8  mcp_config.o(.bss.MCP_UserCallBack)
    Mci                                      0x200017fc   Data          32  mc_config.o(.bss.Mci)
    User_Logic_Handle_Counter                0x20001832   Data           2  stm32g0xx_mc_it.o(.bss.User_Logic_Handle_Counter)
    dataPtrTableA                            0x20001834   Data          40  mcp_config.o(.bss.dataPtrTableA)
    dataPtrTableBuffA                        0x2000185c   Data          40  mcp_config.o(.bss.dataPtrTableBuffA)
    dataSizeTableA                           0x20001884   Data          10  mcp_config.o(.bss.dataSizeTableA)
    dataSizeTableBuffA                       0x2000188e   Data          10  mcp_config.o(.bss.dataSizeTableBuffA)
    hCurrentReference                        0x20001898   Data           2  speed_torq_ctrl.o(.bss.hCurrentReference)
    key                                      0x2000189c   Data          12  led_key.o(.bss.key)
    mrx_data                                 0x200018a9   Data           1  main.o(.bss.mrx_data)
    myxflag                                  0x200018ac   Data           4  speed_torq_ctrl.o(.bss.myxflag)
    pMCI                                     0x200018b0   Data           4  motorcontrol.o(.bss.pMCI)
    target_p_s                               0x200018b4   Data           4  main.o(.bss.target_p_s)
    test_max                                 0x200018b8   Data           4  pwm_curr_fdbk.o(.bss.test_max)
    test_time                                0x200018bc   Data           4  stm32g0xx_mc_it.o(.bss.test_time)
    uwTick                                   0x200018c0   Data           4  stm32g0xx_hal.o(.bss.uwTick)
    watch_data                               0x200018c4   Data          40  watch_data.o(.bss.watch_data)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000c1

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00007d98, Max: 0x00020000, ABSOLUTE, COMPRESSED[0x00007a00])

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00007830, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000c0   Data   RO            3    RESET               startup_stm32g030xx.o
    0x080000c0   0x080000c0   0x00000008   Code   RO         2328  * !!!main             c_p.l(__main.o)
    0x080000c8   0x080000c8   0x0000003c   Code   RO         2526    !!!scatter          c_p.l(__scatter.o)
    0x08000104   0x08000104   0x0000001c   Code   RO         2528    !!handler_zi        c_p.l(__scatter_zi.o)
    0x08000120   0x08000120   0x00000002   Code   RO         2393    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2407    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2409    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2411    .ARM.Collect$$libinit$$00000006  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2414    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2416    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2418    .ARM.Collect$$libinit$$00000010  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2421    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2423    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2425    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2427    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2429    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2431    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2433    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2435    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2437    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2439    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2441    .ARM.Collect$$libinit$$00000027  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2445    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2447    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2449    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2451    .ARM.Collect$$libinit$$00000034  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000002   Code   RO         2452    .ARM.Collect$$libinit$$00000035  c_p.l(libinit2.o)
    0x08000124   0x08000124   0x00000002   Code   RO         2476    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x08000126   0x08000126   0x00000000   Code   RO         2504    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x08000126   0x08000126   0x00000000   Code   RO         2506    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x08000126   0x08000126   0x00000000   Code   RO         2509    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x08000126   0x08000126   0x00000000   Code   RO         2512    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x08000126   0x08000126   0x00000000   Code   RO         2514    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x08000126   0x08000126   0x00000000   Code   RO         2517    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x08000126   0x08000126   0x00000002   Code   RO         2518    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x08000128   0x08000128   0x00000000   Code   RO         2356    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x08000128   0x08000128   0x00000000   Code   RO         2363    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x08000128   0x08000128   0x00000006   Code   RO         2375    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         2365    .ARM.Collect$$rtentry$$00000009  c_p.l(__rtentry2.o)
    0x0800012e   0x0800012e   0x00000004   Code   RO         2366    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x08000132   0x08000132   0x00000000   Code   RO         2368    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x08000132   0x08000132   0x00000008   Code   RO         2369    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x0800013a   0x0800013a   0x00000002   Code   RO         2398    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x0800013c   0x0800013c   0x00000000   Code   RO         2454    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x0800013c   0x0800013c   0x00000004   Code   RO         2455    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x08000140   0x08000140   0x00000006   Code   RO         2456    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x08000146   0x08000146   0x00000002   PAD
    0x08000148   0x08000148   0x00000038   Code   RO         2312    .emb_text           c_p.l(rt_memcpy.o)
    0x08000180   0x08000180   0x0000004c   Code   RO            4    .text               startup_stm32g030xx.o
    0x080001cc   0x080001cc   0x00000030   Code   RO         2308    .text               c_p.l(llmul.o)
    0x080001fc   0x080001fc   0x00000082   Code   RO         2313    .text               c_p.l(rt_memcpy.o)
    0x0800027e   0x0800027e   0x00000040   Code   RO         2316    .text               c_p.l(rt_memclr.o)
    0x080002be   0x080002be   0x00000006   Code   RO         2326    .text               c_p.l(heapauxi.o)
    0x080002c4   0x080002c4   0x0000005e   Code   RO         2352    .text               fz_ps.l(fflti.o)
    0x08000322   0x08000322   0x0000003e   Code   RO         2379    .text               c_p.l(sys_stackheap_outer.o)
    0x08000360   0x08000360   0x00000010   Code   RO         2382    .text               c_p.l(exit.o)
    0x08000370   0x08000370   0x00000008   Code   RO         2394    .text               c_p.l(libspace.o)
    0x08000378   0x08000378   0x00000056   Code   RO         2524    .text               c_p.l(__dczerorl2.o)
    0x080003ce   0x080003ce   0x00000016   Code   RO          585    .text.ASPEP_HWDMAReset  aspep.o
    0x080003e4   0x080003e4   0x00000090   Code   RO          583    .text.ASPEP_HWDataReceivedIT  aspep.o
    0x08000474   0x08000474   0x000000a2   Code   RO          579    .text.ASPEP_HWDataTransmittedIT  aspep.o
    0x08000516   0x08000516   0x00000002   PAD
    0x08000518   0x08000518   0x000005c8   Code   RO          581    .text.ASPEP_RXframeProcess  aspep.o
    0x08000ae0   0x08000ae0   0x000000e8   Code   RO          569    .text.ASPEP_TXframeProcess  aspep.o
    0x08000bc8   0x08000bc8   0x00000058   Code   RO          573    .text.ASPEP_getBuffer  aspep.o
    0x08000c20   0x08000c20   0x0000004e   Code   RO          577    .text.ASPEP_sendPacket  aspep.o
    0x08000c6e   0x08000c6e   0x00000024   Code   RO          565    .text.ASPEP_start   aspep.o
    0x08000c92   0x08000c92   0x00000002   PAD
    0x08000c94   0x08000c94   0x00000080   Code   RO         1578    .text.Circle_Limitation  circle_limitation.o
    0x08000d14   0x08000d14   0x00000014   Code   RO          480    .text.DMA1_Channel1_IRQHandler  stm32g0xx_mc_it.o
    0x08000d28   0x08000d28   0x00000020   Code   RO          484    .text.DMA1_Channel2_3_IRQHandler  stm32g0xx_mc_it.o
    0x08000d48   0x08000d48   0x00000024   Code   RO          492    .text.EXTI4_15_IRQHandler  stm32g0xx_mc_it.o
    0x08000d6c   0x08000d6c   0x00000024   Code   RO          216    .text.FOC_CalcCurrRef  mc_tasks.o
    0x08000d90   0x08000d90   0x00000060   Code   RO          196    .text.FOC_Clear     mc_tasks.o
    0x08000df0   0x08000df0   0x00000002   Code   RO          214    .text.FOC_InitAdditionalMethods  mc_tasks.o
    0x08000df2   0x08000df2   0x00000002   PAD
    0x08000df4   0x08000df4   0x00000008   Code   RO         1082    .text.HAL_GetTick   stm32g0xx_hal.o
    0x08000dfc   0x08000dfc   0x00000014   Code   RO         1080    .text.HAL_IncTick   stm32g0xx_hal.o
    0x08000e10   0x08000e10   0x0000002c   Code   RO         1070    .text.HAL_Init      stm32g0xx_hal.o
    0x08000e3c   0x08000e3c   0x00000044   Code   RO         1072    .text.HAL_InitTick  stm32g0xx_hal.o
    0x08000e80   0x08000e80   0x0000002c   Code   RO          623    .text.HAL_MspInit   stm32g0xx_hal_msp.o
    0x08000eac   0x08000eac   0x00000018   Code   RO         1034    .text.HAL_NVIC_EnableIRQ  stm32g0xx_hal_cortex.o
    0x08000ec4   0x08000ec4   0x00000040   Code   RO         1032    .text.HAL_NVIC_SetPriority  stm32g0xx_hal_cortex.o
    0x08000f04   0x08000f04   0x0000000c   Code   RO          779    .text.HAL_RCC_GetHCLKFreq  stm32g0xx_hal_rcc.o
    0x08000f10   0x08000f10   0x00000002   Code   RO         1054    .text.HAL_SYSTICK_Callback  stm32g0xx_hal_cortex.o
    0x08000f12   0x08000f12   0x00000002   PAD
    0x08000f14   0x08000f14   0x00000034   Code   RO         1040    .text.HAL_SYSTICK_Config  stm32g0xx_hal_cortex.o
    0x08000f48   0x08000f48   0x00000008   Code   RO         1052    .text.HAL_SYSTICK_IRQHandler  stm32g0xx_hal_cortex.o
    0x08000f50   0x08000f50   0x00000002   Code   RO         1481    .text.HAL_TIMEx_Break2Callback  stm32g0xx_hal_tim_ex.o
    0x08000f52   0x08000f52   0x00000002   Code   RO         1479    .text.HAL_TIMEx_BreakCallback  stm32g0xx_hal_tim_ex.o
    0x08000f54   0x08000f54   0x00000002   Code   RO         1475    .text.HAL_TIMEx_CommutCallback  stm32g0xx_hal_tim_ex.o
    0x08000f56   0x08000f56   0x00000002   PAD
    0x08000f58   0x08000f58   0x000000d0   Code   RO         1164    .text.HAL_TIM_Base_Init  stm32g0xx_hal_tim.o
    0x08001028   0x08001028   0x00000044   Code   RO          625    .text.HAL_TIM_Base_MspInit  stm32g0xx_hal_msp.o
    0x0800106c   0x0800106c   0x00000002   Code   RO         1300    .text.HAL_TIM_IC_CaptureCallback  stm32g0xx_hal_tim.o
    0x0800106e   0x0800106e   0x00000002   PAD
    0x08001070   0x08001070   0x00000164   Code   RO         1298    .text.HAL_TIM_IRQHandler  stm32g0xx_hal_tim.o
    0x080011d4   0x080011d4   0x00000002   Code   RO         1302    .text.HAL_TIM_OC_DelayElapsedCallback  stm32g0xx_hal_tim.o
    0x080011d6   0x080011d6   0x00000002   Code   RO         1304    .text.HAL_TIM_PWM_PulseFinishedCallback  stm32g0xx_hal_tim.o
    0x080011d8   0x080011d8   0x00000002   Code   RO         1306    .text.HAL_TIM_PeriodElapsedCallback  stm32g0xx_hal_tim.o
    0x080011da   0x080011da   0x00000002   Code   RO         1308    .text.HAL_TIM_TriggerCallback  stm32g0xx_hal_tim.o
    0x080011dc   0x080011dc   0x00000006   Code   RO          488    .text.HardFault_Handler  stm32g0xx_mc_it.o
    0x080011e2   0x080011e2   0x00000002   PAD
    0x080011e4   0x080011e4   0x00000034   Code   RO          717    .text.LL_ADC_Init   stm32g0xx_ll_adc.o
    0x08001218   0x08001218   0x00000068   Code   RO          721    .text.LL_ADC_REG_Init  stm32g0xx_ll_adc.o
    0x08001280   0x08001280   0x000000c6   Code   RO          697    .text.LL_GPIO_Init  stm32g0xx_ll_gpio.o
    0x08001346   0x08001346   0x00000002   PAD
    0x08001348   0x08001348   0x00000084   Code   RO          749    .text.LL_RCC_GetSystemClocksFreq  stm32g0xx_ll_rcc.o
    0x080013cc   0x080013cc   0x00000128   Code   RO          751    .text.LL_RCC_GetUSARTClockFreq  stm32g0xx_ll_rcc.o
    0x080014f4   0x080014f4   0x0000000c   Code   RO          663    .text.LL_SetSystemCoreClock  stm32g0xx_ll_utils.o
    0x08001500   0x08001500   0x00000090   Code   RO         1519    .text.LL_TIM_BDTR_Init  stm32g0xx_ll_tim.o
    0x08001590   0x08001590   0x00000088   Code   RO         1499    .text.LL_TIM_Init   stm32g0xx_ll_tim.o
    0x08001618   0x08001618   0x000002e4   Code   RO         1503    .text.LL_TIM_OC_Init  stm32g0xx_ll_tim.o
    0x080018fc   0x080018fc   0x00000108   Code   RO         1531    .text.LL_USART_Init  stm32g0xx_ll_usart.o
    0x08001a04   0x08001a04   0x00000012   Code   RO          470    .text.MCI_Clear_Iqdref  mc_interface.o
    0x08001a16   0x08001a16   0x00000068   Code   RO          406    .text.MCI_ExecBufferedCommands  mc_interface.o
    0x08001a7e   0x08001a7e   0x00000002   PAD
    0x08001a80   0x08001a80   0x00000014   Code   RO          366    .text.MCI_ExecSpeedRamp  mc_interface.o
    0x08001a94   0x08001a94   0x00000010   Code   RO          370    .text.MCI_ExecTorqueRamp  mc_interface.o
    0x08001aa4   0x08001aa4   0x0000002a   Code   RO          402    .text.MCI_FaultAcknowledged  mc_interface.o
    0x08001ace   0x08001ace   0x00000010   Code   RO          404    .text.MCI_FaultProcessing  mc_interface.o
    0x08001ade   0x08001ade   0x0000000e   Code   RO          432    .text.MCI_GetAvrgMecSpeedUnit  mc_interface.o
    0x08001aec   0x08001aec   0x00000004   Code   RO          412    .text.MCI_GetControlMode  mc_interface.o
    0x08001af0   0x08001af0   0x00000004   Code   RO          390    .text.MCI_GetCurrentFaults  mc_interface.o
    0x08001af4   0x08001af4   0x0000000a   Code   RO          410    .text.MCI_GetFaultState  mc_interface.o
    0x08001afe   0x08001afe   0x0000000c   Code   RO          440    .text.MCI_GetIab    mc_interface.o
    0x08001b0a   0x08001b0a   0x0000000c   Code   RO          444    .text.MCI_GetIalphabeta  mc_interface.o
    0x08001b16   0x08001b16   0x00000044   Code   RO          414    .text.MCI_GetImposedMotorDirection  mc_interface.o
    0x08001b5a   0x08001b5a   0x0000000c   Code   RO          446    .text.MCI_GetIqd    mc_interface.o
    0x08001b66   0x08001b66   0x0000000c   Code   RO          452    .text.MCI_GetIqdref  mc_interface.o
    0x08001b72   0x08001b72   0x00000004   Code   RO          420    .text.MCI_GetLastRampFinalDuration  mc_interface.o
    0x08001b76   0x08001b76   0x00000006   Code   RO          416    .text.MCI_GetLastRampFinalSpeed  mc_interface.o
    0x08001b7c   0x08001b7c   0x00000006   Code   RO          418    .text.MCI_GetLastRampFinalTorque  mc_interface.o
    0x08001b82   0x08001b82   0x0000000a   Code   RO          436    .text.MCI_GetMecSpeedRefUnit  mc_interface.o
    0x08001b8c   0x08001b8c   0x00000004   Code   RO          388    .text.MCI_GetOccurredFaults  mc_interface.o
    0x08001b90   0x08001b90   0x00000004   Code   RO          386    .text.MCI_GetSTMState  mc_interface.o
    0x08001b94   0x08001b94   0x00000008   Code   RO          462    .text.MCI_GetTeref  mc_interface.o
    0x08001b9c   0x08001b9c   0x0000000c   Code   RO          458    .text.MCI_GetValphabeta  mc_interface.o
    0x08001ba8   0x08001ba8   0x0000000c   Code   RO          456    .text.MCI_GetVqd    mc_interface.o
    0x08001bb4   0x08001bb4   0x00000018   Code   RO          364    .text.MCI_Init      mc_interface.o
    0x08001bcc   0x08001bcc   0x00000014   Code   RO          374    .text.MCI_SetCurrentReferences  mc_interface.o
    0x08001be0   0x08001be0   0x00000030   Code   RO          384    .text.MCI_StartMotor  mc_interface.o
    0x08001c10   0x08001c10   0x00000044   Code   RO          400    .text.MCI_StopMotor  mc_interface.o
    0x08001c54   0x08001c54   0x0000000a   Code   RO          428    .text.MCI_StopRamp  mc_interface.o
    0x08001c5e   0x08001c5e   0x00000002   PAD
    0x08001c60   0x08001c60   0x00000044   Code   RO          343    .text.MCM_Clarke    mc_math.o
    0x08001ca4   0x08001ca4   0x00000098   Code   RO          345    .text.MCM_Park      mc_math.o
    0x08001d3c   0x08001d3c   0x0000002e   Code   RO          349    .text.MCM_Rev_Park  mc_math.o
    0x08001d6a   0x08001d6a   0x00000002   PAD
    0x08001d6c   0x08001d6c   0x0000007c   Code   RO          347    .text.MCM_Trig_Functions  mc_math.o
    0x08001de8   0x08001de8   0x000000e4   Code   RO         2043    .text.MCPA_cfgLog   mcpa.o
    0x08001ecc   0x08001ecc   0x000001e0   Code   RO         2039    .text.MCPA_dataLog  mcpa.o
    0x080020ac   0x080020ac   0x0000006c   Code   RO         2041    .text.MCPA_flushDataLog  mcpa.o
    0x08002118   0x08002118   0x00000164   Code   RO         2027    .text.MCP_ReceivedPacket  mcp.o
    0x0800227c   0x0800227c   0x00000002   Code   RO          597    .text.MC_APP_BootHook  mc_app_hooks.o
    0x0800227e   0x0800227e   0x00000002   Code   RO          599    .text.MC_APP_PostMediumFrequencyHook_M1  mc_app_hooks.o
    0x08002280   0x08002280   0x0000000c   Code   RO          127    .text.MC_GetSTMStateMotor1  mc_api.o
    0x0800228c   0x0800228c   0x00000004   Code   RO          137    .text.MC_ProfilerCommand  mc_api.o
    0x08002290   0x08002290   0x00000010   Code   RO           57    .text.MC_ProgramSpeedRampMotor1  mc_api.o
    0x080022a0   0x080022a0   0x00000014   Code   RO          198    .text.MC_RunMotorControlTasks  mc_tasks.o
    0x080022b4   0x080022b4   0x00000074   Code   RO          200    .text.MC_Scheduler  mc_tasks.o
    0x08002328   0x08002328   0x0000000c   Code   RO           53    .text.MC_StartMotor1  mc_api.o
    0x08002334   0x08002334   0x0000000c   Code   RO           55    .text.MC_StopMotor1  mc_api.o
    0x08002340   0x08002340   0x00000108   Code   RO          194    .text.MCboot        mc_tasks.o
    0x08002448   0x08002448   0x00000034   Code   RO           44    .text.MX_MotorControl_Init  motorcontrol.o
    0x0800247c   0x0800247c   0x00000002   Code   RO          608    .text.NMI_Handler   stm32g0xx_it.o
    0x0800247e   0x0800247e   0x00000002   PAD
    0x08002480   0x08002480   0x0000003c   Code   RO         1606    .text.NTC_CalcAvTemp  ntc_temperature_sensor.o
    0x080024bc   0x080024bc   0x00000006   Code   RO         1604    .text.NTC_Clear     ntc_temperature_sensor.o
    0x080024c2   0x080024c2   0x00000022   Code   RO         1610    .text.NTC_GetAvTemp_C  ntc_temperature_sensor.o
    0x080024e4   0x080024e4   0x00000026   Code   RO         1602    .text.NTC_Init      ntc_temperature_sensor.o
    0x0800250a   0x0800250a   0x0000001a   Code   RO         1600    .text.NTC_SetFaultState  ntc_temperature_sensor.o
    0x08002524   0x08002524   0x00000006   Code   RO         1682    .text.PID_GetKD     pid_regulator.o
    0x0800252a   0x0800252a   0x00000004   Code   RO         1686    .text.PID_GetKDDivisorPOW2  pid_regulator.o
    0x0800252e   0x0800252e   0x00000006   Code   RO         1650    .text.PID_GetKI     pid_regulator.o
    0x08002534   0x08002534   0x00000004   Code   RO         1664    .text.PID_GetKIDivisor  pid_regulator.o
    0x08002538   0x08002538   0x00000004   Code   RO         1666    .text.PID_GetKIDivisorPOW2  pid_regulator.o
    0x0800253c   0x0800253c   0x00000006   Code   RO         1648    .text.PID_GetKP     pid_regulator.o
    0x08002542   0x08002542   0x00000004   Code   RO         1660    .text.PID_GetKPDivisorPOW2  pid_regulator.o
    0x08002546   0x08002546   0x00000010   Code   RO         1642    .text.PID_HandleInit  pid_regulator.o
    0x08002556   0x08002556   0x00000004   Code   RO         1656    .text.PID_SetIntegralTerm  pid_regulator.o
    0x0800255a   0x0800255a   0x00000004   Code   RO         1680    .text.PID_SetKD     pid_regulator.o
    0x0800255e   0x0800255e   0x0000000a   Code   RO         1688    .text.PID_SetKDDivisorPOW2  pid_regulator.o
    0x08002568   0x08002568   0x00000004   Code   RO         1646    .text.PID_SetKI     pid_regulator.o
    0x0800256c   0x0800256c   0x0000002c   Code   RO         1668    .text.PID_SetKIDivisorPOW2  pid_regulator.o
    0x08002598   0x08002598   0x00000004   Code   RO         1644    .text.PID_SetKP     pid_regulator.o
    0x0800259c   0x0800259c   0x0000000a   Code   RO         1662    .text.PID_SetKPDivisorPOW2  pid_regulator.o
    0x080025a6   0x080025a6   0x00000004   Code   RO         1672    .text.PID_SetLowerIntegralTermLimit  pid_regulator.o
    0x080025aa   0x080025aa   0x00000004   Code   RO         1670    .text.PID_SetUpperIntegralTermLimit  pid_regulator.o
    0x080025ae   0x080025ae   0x00000002   PAD
    0x080025b0   0x080025b0   0x00000088   Code   RO         1690    .text.PI_Controller  pid_regulator.o
    0x08002638   0x08002638   0x00000030   Code   RO         1702    .text.PQD_CalcElMotorPower  pqd_motor_power_measurement.o
    0x08002668   0x08002668   0x00000006   Code   RO         1704    .text.PQD_Clear     pqd_motor_power_measurement.o
    0x0800266e   0x0800266e   0x0000001e   Code   RO         1706    .text.PQD_GetAvrgElMotorPowerW  pqd_motor_power_measurement.o
    0x0800268c   0x0800268c   0x00000008   Code   RO          263    .text.PWMC_CheckOverCurrent  pwm_curr_fdbk.o
    0x08002694   0x08002694   0x00000044   Code   RO          257    .text.PWMC_CurrentReadingCalibr  pwm_curr_fdbk.o
    0x080026d8   0x080026d8   0x00000008   Code   RO          249    .text.PWMC_GetPhaseCurrents  pwm_curr_fdbk.o
    0x080026e0   0x080026e0   0x000001e4   Code   RO          251    .text.PWMC_SetPhaseVoltage  pwm_curr_fdbk.o
    0x080028c4   0x080028c4   0x00000008   Code   RO          253    .text.PWMC_SwitchOffPWM  pwm_curr_fdbk.o
    0x080028cc   0x080028cc   0x00000008   Code   RO          255    .text.PWMC_SwitchOnPWM  pwm_curr_fdbk.o
    0x080028d4   0x080028d4   0x00000002   Code   RO          612    .text.PendSV_Handler  stm32g0xx_it.o
    0x080028d6   0x080028d6   0x00000002   PAD
    0x080028d8   0x080028d8   0x00000130   Code   RO         1986    .text.R3_1_CurrentReadingCalibration  r3_g0xx_pwm_curr_fdbk.o
    0x08002a08   0x08002a08   0x0000000e   Code   RO         1984    .text.R3_1_GetOffsetCalib  r3_g0xx_pwm_curr_fdbk.o
    0x08002a16   0x08002a16   0x00000002   PAD
    0x08002a18   0x08002a18   0x000001b8   Code   RO         1998    .text.R3_1_GetPhaseCurrents  r3_g0xx_pwm_curr_fdbk.o
    0x08002bd0   0x08002bd0   0x0000004c   Code   RO         1988    .text.R3_1_HFCurrentsCalibrationAB  r3_g0xx_pwm_curr_fdbk.o
    0x08002c1c   0x08002c1c   0x00000048   Code   RO         1996    .text.R3_1_HFCurrentsCalibrationC  r3_g0xx_pwm_curr_fdbk.o
    0x08002c64   0x08002c64   0x0000013c   Code   RO         1980    .text.R3_1_Init     r3_g0xx_pwm_curr_fdbk.o
    0x08002da0   0x08002da0   0x00000032   Code   RO         2016    .text.R3_1_IsOverCurrentOccurred  r3_g0xx_pwm_curr_fdbk.o
    0x08002dd2   0x08002dd2   0x0000003a   Code   RO         2012    .text.R3_1_OVERCURRENT_IRQHandler  r3_g0xx_pwm_curr_fdbk.o
    0x08002e0c   0x08002e0c   0x0000001c   Code   RO         2014    .text.R3_1_OVERVOLTAGE_IRQHandler  r3_g0xx_pwm_curr_fdbk.o
    0x08002e28   0x08002e28   0x0000001e   Code   RO         1990    .text.R3_1_SetADCSampPointCalibration  r3_g0xx_pwm_curr_fdbk.o
    0x08002e46   0x08002e46   0x00000068   Code   RO         2004    .text.R3_1_SetADCSampPointSectX  r3_g0xx_pwm_curr_fdbk.o
    0x08002eae   0x08002eae   0x00000014   Code   RO         1982    .text.R3_1_SetOffsetCalib  r3_g0xx_pwm_curr_fdbk.o
    0x08002ec2   0x08002ec2   0x00000002   PAD
    0x08002ec4   0x08002ec4   0x000000a4   Code   RO         1994    .text.R3_1_SwitchOffPWM  r3_g0xx_pwm_curr_fdbk.o
    0x08002f68   0x08002f68   0x000000d0   Code   RO         1992    .text.R3_1_SwitchOnPWM  r3_g0xx_pwm_curr_fdbk.o
    0x08003038   0x08003038   0x00000074   Code   RO         2010    .text.R3_1_TIMx_UP_IRQHandler  r3_g0xx_pwm_curr_fdbk.o
    0x080030ac   0x080030ac   0x00000058   Code   RO         2008    .text.R3_1_TurnOnLowSides  r3_g0xx_pwm_curr_fdbk.o
    0x08003104   0x08003104   0x00000030   Code   RO         2002    .text.R3_1_WriteTIMRegisters  r3_g0xx_pwm_curr_fdbk.o
    0x08003134   0x08003134   0x00000060   Code   RO          330    .text.RCM_ExecNextConv  regular_conversion_manager.o
    0x08003194   0x08003194   0x000001ac   Code   RO          318    .text.RCM_ExecRegularConv  regular_conversion_manager.o
    0x08003340   0x08003340   0x0000003c   Code   RO          324    .text.RCM_ExecUserConv  regular_conversion_manager.o
    0x0800337c   0x0800337c   0x00000040   Code   RO          332    .text.RCM_ReadOngoingConv  regular_conversion_manager.o
    0x080033bc   0x080033bc   0x00000130   Code   RO          316    .text.RCM_RegisterRegConv  regular_conversion_manager.o
    0x080034ec   0x080034ec   0x0000002c   Code   RO         1745    .text.REMNG_Calc    ramp_ext_mngr.o
    0x08003518   0x08003518   0x00000080   Code   RO         1747    .text.REMNG_ExecRamp  ramp_ext_mngr.o
    0x08003598   0x08003598   0x00000010   Code   RO         1743    .text.REMNG_Init    ramp_ext_mngr.o
    0x080035a8   0x080035a8   0x00000008   Code   RO         1753    .text.REMNG_RampCompleted  ramp_ext_mngr.o
    0x080035b0   0x080035b0   0x00000020   Code   RO          515    .text.RI_GetIDSize  register_interface.o
    0x080035d0   0x080035d0   0x00000104   Code   RO          517    .text.RI_GetPtrReg  register_interface.o
    0x080036d4   0x080036d4   0x000008c4   Code   RO          513    .text.RI_GetRegCommandParser  register_interface.o
    0x08003f98   0x08003f98   0x00000780   Code   RO          511    .text.RI_SetRegCommandParser  register_interface.o
    0x08004718   0x08004718   0x00000080   Code   RO         1767    .text.RUC_Clear     revup_ctrl.o
    0x08004798   0x08004798   0x00000068   Code   RO         1771    .text.RUC_Exec      revup_ctrl.o
    0x08004800   0x08004800   0x00000014   Code   RO         1779    .text.RUC_FirstAccelerationStageReached  revup_ctrl.o
    0x08004814   0x08004814   0x00000006   Code   RO         1795    .text.RUC_GetNumberOfPhases  revup_ctrl.o
    0x0800481a   0x0800481a   0x00000012   Code   RO         1797    .text.RUC_GetPhase  revup_ctrl.o
    0x0800482c   0x0800482c   0x00000064   Code   RO         1765    .text.RUC_Init      revup_ctrl.o
    0x08004890   0x08004890   0x00000012   Code   RO         1787    .text.RUC_SetPhase  revup_ctrl.o
    0x080048a2   0x080048a2   0x00000002   PAD
    0x080048a4   0x080048a4   0x000000bc   Code   RO         1733    .text.RVBS_CalcAvVbus  r_divider_bus_voltage_sensor.o
    0x08004960   0x08004960   0x0000004e   Code   RO         1731    .text.RVBS_CheckFaultState  r_divider_bus_voltage_sensor.o
    0x080049ae   0x080049ae   0x0000004a   Code   RO         1727    .text.RVBS_Clear    r_divider_bus_voltage_sensor.o
    0x080049f8   0x080049f8   0x00000016   Code   RO         1725    .text.RVBS_Init     r_divider_bus_voltage_sensor.o
    0x08004a0e   0x08004a0e   0x00000006   Code   RO         1813    .text.SPD_GetAvrgMecSpeedUnit  speed_pos_fdbk.o
    0x08004a14   0x08004a14   0x00000006   Code   RO         1809    .text.SPD_GetElAngle  speed_pos_fdbk.o
    0x08004a1a   0x08004a1a   0x00000006   Code   RO         1817    .text.SPD_GetInstElSpeedDpp  speed_pos_fdbk.o
    0x08004a20   0x08004a20   0x0000001c   Code   RO         1823    .text.SPD_GetS16Speed  speed_pos_fdbk.o
    0x08004a3c   0x08004a3c   0x00000054   Code   RO         1821    .text.SPD_IsMecSpeedReliable  speed_pos_fdbk.o
    0x08004a90   0x08004a90   0x0000008c   Code   RO         1857    .text.STC_CalcTorqueReference  speed_torq_ctrl.o
    0x08004b1c   0x08004b1c   0x00000012   Code   RO         1843    .text.STC_Clear     speed_torq_ctrl.o
    0x08004b2e   0x08004b2e   0x00000002   PAD
    0x08004b30   0x08004b30   0x000000a0   Code   RO         1853    .text.STC_ExecRamp  speed_torq_ctrl.o
    0x08004bd0   0x08004bd0   0x00000010   Code   RO         1873    .text.STC_ForceSpeedReferenceToCurrentSpeed  speed_torq_ctrl.o
    0x08004be0   0x08004be0   0x0000000a   Code   RO         1869    .text.STC_GetDefaultIqdref  speed_torq_ctrl.o
    0x08004bea   0x08004bea   0x00000006   Code   RO         1845    .text.STC_GetMecSpeedRefUnit  speed_torq_ctrl.o
    0x08004bf0   0x08004bf0   0x00000004   Code   RO         1841    .text.STC_GetSpeedSensor  speed_torq_ctrl.o
    0x08004bf4   0x08004bf4   0x00000006   Code   RO         1847    .text.STC_GetTorqueRef  speed_torq_ctrl.o
    0x08004bfa   0x08004bfa   0x00000020   Code   RO         1837    .text.STC_Init      speed_torq_ctrl.o
    0x08004c1a   0x08004c1a   0x00000008   Code   RO         1849    .text.STC_SetControlMode  speed_torq_ctrl.o
    0x08004c22   0x08004c22   0x00000004   Code   RO         1839    .text.STC_SetSpeedSensor  speed_torq_ctrl.o
    0x08004c26   0x08004c26   0x00000008   Code   RO         1855    .text.STC_StopRamp  speed_torq_ctrl.o
    0x08004c2e   0x08004c2e   0x0000000e   Code   RO         1914    .text.STO_OTF_ResetPLL  sto_pll_speed_pos_fdbk.o
    0x08004c3c   0x08004c3c   0x00000042   Code   RO         1896    .text.STO_PLL_CalcAvrgElSpeedDpp  sto_pll_speed_pos_fdbk.o
    0x08004c7e   0x08004c7e   0x00000002   PAD
    0x08004c80   0x08004c80   0x00000248   Code   RO         1894    .text.STO_PLL_CalcAvrgMecSpeedUnit  sto_pll_speed_pos_fdbk.o
    0x08004ec8   0x08004ec8   0x00000220   Code   RO         1892    .text.STO_PLL_CalcElAngle  sto_pll_speed_pos_fdbk.o
    0x080050e8   0x080050e8   0x0000005a   Code   RO         1888    .text.STO_PLL_Clear  sto_pll_speed_pos_fdbk.o
    0x08005142   0x08005142   0x0000000c   Code   RO         1930    .text.STO_PLL_ForceConvergency1  sto_pll_speed_pos_fdbk.o
    0x0800514e   0x0800514e   0x0000000c   Code   RO         1932    .text.STO_PLL_ForceConvergency2  sto_pll_speed_pos_fdbk.o
    0x0800515a   0x0800515a   0x00000004   Code   RO         1900    .text.STO_PLL_GetEstimatedBemf  sto_pll_speed_pos_fdbk.o
    0x0800515e   0x0800515e   0x00000008   Code   RO         1920    .text.STO_PLL_GetEstimatedBemfLevel  sto_pll_speed_pos_fdbk.o
    0x08005166   0x08005166   0x00000016   Code   RO         1902    .text.STO_PLL_GetEstimatedCurrent  sto_pll_speed_pos_fdbk.o
    0x0800517c   0x0800517c   0x00000006   Code   RO         1922    .text.STO_PLL_GetObservedBemfLevel  sto_pll_speed_pos_fdbk.o
    0x08005182   0x08005182   0x0000000a   Code   RO         1904    .text.STO_PLL_GetObserverGains  sto_pll_speed_pos_fdbk.o
    0x0800518c   0x0800518c   0x00000090   Code   RO         1886    .text.STO_PLL_Init  sto_pll_speed_pos_fdbk.o
    0x0800521c   0x0800521c   0x000000a6   Code   RO         1898    .text.STO_PLL_IsObserverConverged  sto_pll_speed_pos_fdbk.o
    0x080052c2   0x080052c2   0x00000008   Code   RO         1928    .text.STO_PLL_IsVarianceTight  sto_pll_speed_pos_fdbk.o
    0x080052ca   0x080052ca   0x00000006   Code   RO         1906    .text.STO_PLL_SetObserverGains  sto_pll_speed_pos_fdbk.o
    0x080052d0   0x080052d0   0x0000000c   Code   RO         1916    .text.STO_ResetPLL  sto_pll_speed_pos_fdbk.o
    0x080052dc   0x080052dc   0x00000002   Code   RO          610    .text.SVC_Handler   stm32g0xx_it.o
    0x080052de   0x080052de   0x00000002   PAD
    0x080052e0   0x080052e0   0x0000003c   Code   RO          490    .text.SysTick_Handler  stm32g0xx_mc_it.o
    0x0800531c   0x0800531c   0x000000f8   Code   RO           21    .text.SystemClock_Config  main.o
    0x08005414   0x08005414   0x00000002   Code   RO         1547    .text.SystemInit    system_stm32g0xx.o
    0x08005416   0x08005416   0x00000002   PAD
    0x08005418   0x08005418   0x00000010   Code   RO          614    .text.TIM14_IRQHandler  stm32g0xx_it.o
    0x08005428   0x08005428   0x00000078   Code   RO          482    .text.TIM1_BRK_UP_TRG_COM_IRQHandler  stm32g0xx_mc_it.o
    0x080054a0   0x080054a0   0x0000000c   Code   RO          212    .text.TSK_ChargeBootCapDelayHasElapsedM1  mc_tasks.o
    0x080054ac   0x080054ac   0x00000018   Code   RO          226    .text.TSK_HardwareFaultTask  mc_tasks.o
    0x080054c4   0x080054c4   0x000001ac   Code   RO          220    .text.TSK_HighFrequencyTask  mc_tasks.o
    0x08005670   0x08005670   0x0000003c   Code   RO          204    .text.TSK_MF_StopProcessing  mc_tasks.o
    0x080056ac   0x080056ac   0x00000340   Code   RO          208    .text.TSK_MediumFrequencyTaskM1  mc_tasks.o
    0x080059ec   0x080059ec   0x0000001c   Code   RO          202    .text.TSK_SafetyTask  mc_tasks.o
    0x08005a08   0x08005a08   0x0000009c   Code   RO          222    .text.TSK_SafetyTask_PWMOFF  mc_tasks.o
    0x08005aa4   0x08005aa4   0x00000008   Code   RO          210    .text.TSK_SetChargeBootCapDelayM1  mc_tasks.o
    0x08005aac   0x08005aac   0x00000008   Code   RO          206    .text.TSK_SetStopPermanencyTimeM1  mc_tasks.o
    0x08005ab4   0x08005ab4   0x00000010   Code   RO          218    .text.TSK_StopPermanencyTimeHasElapsedM1  mc_tasks.o
    0x08005ac4   0x08005ac4   0x0000001c   Code   RO          538    .text.UASPEP_IDLE_ENABLE  usart_aspep_driver.o
    0x08005ae0   0x08005ae0   0x00000090   Code   RO          528    .text.UASPEP_INIT   usart_aspep_driver.o
    0x08005b70   0x08005b70   0x00000028   Code   RO          536    .text.UASPEP_RECEIVE_BUFFER  usart_aspep_driver.o
    0x08005b98   0x08005b98   0x00000034   Code   RO          534    .text.UASPEP_SEND_PACKET  usart_aspep_driver.o
    0x08005bcc   0x08005bcc   0x00000016   Code   RO          228    .text.UI_HandleStartStopButton_cb  mc_tasks.o
    0x08005be2   0x08005be2   0x00000002   PAD
    0x08005be4   0x08005be4   0x000000f4   Code   RO          486    .text.USART2_IRQHandler  stm32g0xx_mc_it.o
    0x08005cd8   0x08005cd8   0x0000000a   Code   RO         1566    .text.VBS_GetAvBusVoltage_V  bus_voltage_sensor.o
    0x08005ce2   0x08005ce2   0x00000004   Code   RO         1564    .text.VBS_GetAvBusVoltage_d  bus_voltage_sensor.o
    0x08005ce6   0x08005ce6   0x0000008a   Code   RO         1952    .text.VSS_CalcAvrgMecSpeedUnit  virtual_speed_sensor.o
    0x08005d70   0x08005d70   0x000000ac   Code   RO         1950    .text.VSS_CalcElAngle  virtual_speed_sensor.o
    0x08005e1c   0x08005e1c   0x0000001a   Code   RO         1948    .text.VSS_Clear     virtual_speed_sensor.o
    0x08005e36   0x08005e36   0x00000008   Code   RO         1946    .text.VSS_Init      virtual_speed_sensor.o
    0x08005e3e   0x08005e3e   0x00000096   Code   RO         1956    .text.VSS_SetMecAcceleration  virtual_speed_sensor.o
    0x08005ed4   0x08005ed4   0x00000016   Code   RO         1954    .text.VSS_SetMecAngle  virtual_speed_sensor.o
    0x08005eea   0x08005eea   0x00000022   Code   RO         1962    .text.VSS_SetStartTransition  virtual_speed_sensor.o
    0x08005f0c   0x08005f0c   0x00000006   Code   RO         1966    .text.VSS_TransitionEnded  virtual_speed_sensor.o
    0x08005f12   0x08005f12   0x00000002   Code   RO           13    .text._sys_exit     main.o
    0x08005f14   0x08005f14   0x000000f4   Code   RO         2158    .text.exe_key_func  led_key.o
    0x08006008   0x08006008   0x00000054   Code   RO         1749    .text.getScalingFactor  ramp_ext_mngr.o
    0x0800605c   0x0800605c   0x000000e4   Code   RO         2156    .text.get_key_state  led_key.o
    0x08006140   0x08006140   0x0000065c   Code   RO           19    .text.main          main.o
    0x0800679c   0x0800679c   0x000000e0   Code   RO          230    .text.mc_lock_pins  mc_tasks.o
    0x0800687c   0x0800687c   0x0000003c   Code   RO         1716    .text.waitForPolarizationEnd  pwm_common.o
    0x080068b8   0x080068b8   0x00000018   Code   RO         2221    .text.work_mode_init  app_handle.o
    0x080068d0   0x080068d0   0x000001f6   Code   RO         2319    .text_divfast       c_p.l(aeabi_sdivfast.o)
    0x08006ac6   0x08006ac6   0x00000002   PAD
    0x08006ac8   0x08006ac8   0x000000b0   Code   RO         2354    x$fpl$fmul          fz_ps.l(fmul.o)
    0x08006b78   0x08006b78   0x00000000   Code   RO         2361    x$fpl$usenofp       fz_ps.l(usenofp.o)
    0x08006b78   0x08006b78   0x00000040   Data   RO         1552    .rodata.AHBPrescTable  system_stm32g0xx.o
    0x08006bb8   0x08006bb8   0x00000020   Data   RO         1553    .rodata.APBPrescTable  system_stm32g0xx.o
    0x08006bd8   0x08006bd8   0x00000005   Data   RO          540    .rodata.CHANNEL_OFFSET_TAB  usart_aspep_driver.o
    0x08006bdd   0x08006bdd   0x00000100   Data   RO          587    .rodata.CRC4_Lookup8  aspep.o
    0x08006cdd   0x08006cdd   0x0000000e   Data   RO          549    .rodata.CTL_BOARD   mc_configuration_registers.o
    0x08006ceb   0x08006ceb   0x00000014   Data   RO          550    .rodata.FIRMWARE_NAME  mc_configuration_registers.o
    0x08006cff   0x08006cff   0x0000000e   Data   RO          558    .rodata.M1_ApplicationConfig_reg  mc_configuration_registers.o
    0x08006d0d   0x08006d0d   0x0000000e   Data   RO          555    .rodata.M1_FOCConfig_reg  mc_configuration_registers.o
    0x08006d1b   0x08006d1b   0x00000001   PAD
    0x08006d1c   0x08006d1c   0x0000003c   Data   RO          552    .rodata.M1_MotorConfig_reg  mc_configuration_registers.o
    0x08006d58   0x08006d58   0x00000024   Data   RO          553    .rodata.M1_PWR_BOARD  mc_configuration_registers.o
    0x08006d7c   0x08006d7c   0x00000078   Data   RO          505    .rodata.R3_1_Params  mc_parameters.o
    0x08006df4   0x08006df4   0x00000802   Data   RO         1580    .rodata.SqrtTable   circle_limitation.o
    0x080075f6   0x080075f6   0x00000010   Data   RO          588    .rodata.cst16       aspep.o
    0x08007606   0x08007606   0x0000000a   Data   RO          551    .rodata.globalConfig_reg  mc_configuration_registers.o
    0x08007610   0x08007610   0x00000200   Data   RO          355    .rodata.hSin_Cos_Table  mc_math.o
    0x08007810   0x08007810   0x00000020   Data   RO         2523    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08007830, Size: 0x00001ef0, Max: 0x00009000, ABSOLUTE, COMPRESSED[0x000001d0])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000008   Data   RW         1129    .data..L_MergedGlobals  stm32g0xx_hal.o
    0x20000008   COMPRESSED   0x00000004   Data   RW          559    .data.ApplicationConfig_reg  mc_configuration_registers.o
    0x2000000c   COMPRESSED   0x0000002c   Data   RW          161    .data.BusVoltageSensor_M1  mc_config.o
    0x20000038   COMPRESSED   0x000000b4   Data   RW          163    .data.CircleLimitationM1  mc_config.o
    0x200000ec   COMPRESSED   0x00000004   Data   RW          556    .data.FOCConfig_reg  mc_configuration_registers.o
    0x200000f0   COMPRESSED   0x0000002c   Data   RW          187    .data.MCPA_UART_A   mcp_config.o
    0x2000011c   COMPRESSED   0x00000010   Data   RW          182    .data.MCP_Over_UartA  mcp_config.o
    0x2000012c   COMPRESSED   0x00000004   Data   RW          557    .data.MotorConfig_reg  mc_configuration_registers.o
    0x20000130   COMPRESSED   0x0000002c   Data   RW          150    .data.PIDIdHandle_M1  mc_config.o
    0x2000015c   COMPRESSED   0x0000002c   Data   RW          149    .data.PIDIqHandle_M1  mc_config.o
    0x20000188   COMPRESSED   0x0000002c   Data   RW          148    .data.PIDSpeedHandle_M1  mc_config.o
    0x200001b4   COMPRESSED   0x00000010   Data   RW          147    .data.PQD_MotorPowMeasM1  mc_config.o
    0x200001c4   COMPRESSED   0x00000090   Data   RW          155    .data.PWM_Handle_M1  mc_config.o
    0x20000254   COMPRESSED   0x00000004   Data   RW          554    .data.PWR_BOARD_NAME  mc_configuration_registers.o
    0x20000258   COMPRESSED   0x00000018   Data   RW          162    .data.RampExtMngrHFParamsM1  mc_config.o
    0x20000270   COMPRESSED   0x00000078   Data   RW          152    .data.RevUpControlM1  mc_config.o
    0x200002e8   COMPRESSED   0x00000014   Data   RW          158    .data.STO_M1        mc_config.o
    0x200002fc   COMPRESSED   0x00000128   Data   RW          157    .data.STO_PLL_M1    mc_config.o
    0x20000424   COMPRESSED   0x00000034   Data   RW          151    .data.SpeednTorqCtrlM1  mc_config.o
    0x20000458   COMPRESSED   0x00000001   Data   RW          496    .data.SysTick_Handler.SystickDividerCounter  stm32g0xx_mc_it.o
    0x20000459   COMPRESSED   0x00000003   PAD
    0x2000045c   COMPRESSED   0x00000004   Data   RW         1551    .data.SystemCoreClock  system_stm32g0xx.o
    0x20000460   COMPRESSED   0x00000028   Data   RW          159    .data.TempSensor_M1  mc_config.o
    0x20000488   COMPRESSED   0x00000014   Data   RW          176    .data.UASPEP_A      mcp_config.o
    0x2000049c   COMPRESSED   0x00000038   Data   RW          156    .data.VirtualSpeedSensorM1  mc_config.o
    0x200004d4   COMPRESSED   0x00000074   Data   RW          181    .data.aspepOverUartA  mcp_config.o
    0x20000548   COMPRESSED   0x00000001   Data   RW         2227    .data.g_work_mode   app_handle.o
    0x20000549   COMPRESSED   0x00000003   PAD
    0x2000054c   COMPRESSED   0x00000004   Data   RW          168    .data.pMPM          mc_config.o
    0x20000550   COMPRESSED   0x00000004   Data   RW          167    .data.pPIDId        mc_config.o
    0x20000554   COMPRESSED   0x00000004   Data   RW          166    .data.pPIDIq        mc_config.o
    0x20000558   COMPRESSED   0x00000004   Data   RW          164    .data.pSTC          mc_config.o
    0x2000055c   COMPRESSED   0x00000004   Data   RW          165    .data.pTemperatureSensor  mc_config.o
    0x20000560   COMPRESSED   0x00000001   Data   RW         2164    .data.switch_mode_tmp  led_key.o
    0x20000561   COMPRESSED   0x00000007   PAD
    0x20000568        -       0x00000060   Zero   RW         2395    .bss                c_p.l(libspace.o)
    0x200005c8        -       0x00000054   Zero   RW           35    .bss..L_MergedGlobals  main.o
    0x2000061c        -       0x00000036   Zero   RW          234    .bss..L_MergedGlobals  mc_tasks.o
    0x20000652   COMPRESSED   0x00000002   PAD
    0x20000654        -       0x00000050   Zero   RW          334    .bss..L_MergedGlobals  regular_conversion_manager.o
    0x200006a4        -       0x0000001e   Zero   RW          650    .bss..L_MergedGlobals  user_logic.o
    0x200006c2        -       0x00000006   Zero   RW         2018    .bss..L_MergedGlobals  r3_g0xx_pwm_curr_fdbk.o
    0x200006c8        -       0x00000008   Zero   RW         2212    .bss..L_MergedGlobals  app_error.o
    0x200006d0        -       0x00000002   Zero   RW         2229    .bss..L_MergedGlobals  app_handle.o
    0x200006d2   COMPRESSED   0x00000002   PAD
    0x200006d4        -       0x00000004   Zero   RW         2045    .bss.GLOBAL_TIMESTAMP  mcpa.o
    0x200006d8        -       0x00000806   Zero   RW          179    .bss.MCPAsyncBuffUARTA_A  mcp_config.o
    0x20000ede   COMPRESSED   0x00000002   PAD
    0x20000ee0        -       0x00000806   Zero   RW          180    .bss.MCPAsyncBuffUARTA_B  mcp_config.o
    0x200016e6   COMPRESSED   0x00000002   PAD
    0x200016e8        -       0x00000082   Zero   RW          177    .bss.MCPSyncRXBuff  mcp_config.o
    0x2000176a   COMPRESSED   0x00000002   PAD
    0x2000176c        -       0x00000086   Zero   RW          178    .bss.MCPSyncTxBuff  mcp_config.o
    0x200017f2   COMPRESSED   0x00000002   PAD
    0x200017f4        -       0x00000008   Zero   RW          188    .bss.MCP_UserCallBack  mcp_config.o
    0x200017fc        -       0x00000020   Zero   RW          170    .bss.Mci            mc_config.o
    0x2000181c        -       0x00000002   Zero   RW          519    .bss.RI_GetPtrReg.nullData16  register_interface.o
    0x2000181e        -       0x00000014   Zero   RW          160    .bss.RealBusVoltageSensorFilterBufferM1  mc_config.o
    0x20001832        -       0x00000002   Zero   RW          494    .bss.User_Logic_Handle_Counter  stm32g0xx_mc_it.o
    0x20001834        -       0x00000028   Zero   RW          183    .bss.dataPtrTableA  mcp_config.o
    0x2000185c        -       0x00000028   Zero   RW          184    .bss.dataPtrTableBuffA  mcp_config.o
    0x20001884        -       0x0000000a   Zero   RW          185    .bss.dataSizeTableA  mcp_config.o
    0x2000188e        -       0x0000000a   Zero   RW          186    .bss.dataSizeTableBuffA  mcp_config.o
    0x20001898        -       0x00000002   Zero   RW         1875    .bss.hCurrentReference  speed_torq_ctrl.o
    0x2000189a   COMPRESSED   0x00000002   PAD
    0x2000189c        -       0x0000000c   Zero   RW         2165    .bss.key            led_key.o
    0x200018a8        -       0x00000001   Zero   RW         2166    .bss.key_num        led_key.o
    0x200018a9        -       0x00000001   Zero   RW           30    .bss.mrx_data       main.o
    0x200018aa   COMPRESSED   0x00000002   PAD
    0x200018ac        -       0x00000004   Zero   RW         1876    .bss.myxflag        speed_torq_ctrl.o
    0x200018b0        -       0x00000004   Zero   RW           46    .bss.pMCI           motorcontrol.o
    0x200018b4        -       0x00000004   Zero   RW           29    .bss.target_p_s     main.o
    0x200018b8        -       0x00000004   Zero   RW          305    .bss.test_max       pwm_curr_fdbk.o
    0x200018bc        -       0x00000004   Zero   RW          495    .bss.test_time      stm32g0xx_mc_it.o
    0x200018c0        -       0x00000004   Zero   RW         1128    .bss.uwTick         stm32g0xx_hal.o
    0x200018c4        -       0x00000028   Zero   RW          637    .bss.watch_data     watch_data.o
    0x200018ec   COMPRESSED   0x00000004   PAD
    0x200018f0        -       0x00000200   Zero   RW            2    HEAP                startup_stm32g030xx.o
    0x20001af0        -       0x00000400   Zero   RW            1    STACK               startup_stm32g030xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0          0          0          8       2546   app_error.o
        24          8          0          1          2       1481   app_handle.o
      2242         32        272          0          0      17187   aspep.o
        14          0          0          0          0       1744   bus_voltage_sensor.o
       128          4       2050          0          0       2305   circle_limitation.o
       472         32          0          1         13       4468   led_key.o
      1878        104          0          0         89      19432   main.o
        56          0          0          0          0       7951   mc_api.o
         4          0          0          0          0        530   mc_app_hooks.o
         0          0          0       1144         52      14445   mc_config.o
         0          0        168         16          0       2246   mc_configuration_registers.o
       600          8          0          0          0      18176   mc_interface.o
       390         24        512          0          0       4661   mc_math.o
         0          0        120          0          0       2279   mc_parameters.o
      2352        228          0          0         54      14590   mc_tasks.o
       356         38          0          0          0       8153   mcp.o
         0          0          0        196       4480       4448   mcp_config.o
       816          4          0          0          4       4301   mcpa.o
        52          8          0          0          4       7052   motorcontrol.o
       164          4          0          0          0       3750   ntc_temperature_sensor.o
       274         12          0          0          0       6289   pid_regulator.o
        84          0          0          0          0       2483   pqd_motor_power_measurement.o
        60          0          0          0          0       2150   pwm_common.o
       584          4          0          0          4      10477   pwm_curr_fdbk.o
      2136        112          0          0          6      22077   r3_g0xx_pwm_curr_fdbk.o
       362          4          0          0          0       5145   r_divider_bus_voltage_sensor.o
       280          0          0          0          0       3453   ramp_ext_mngr.o
      4456        808          0          0          2      28555   register_interface.o
       952         24          0          0         80       8766   regular_conversion_manager.o
       394          4          0          0          0      13106   revup_ctrl.o
       130          4          0          0          0       3663   speed_pos_fdbk.o
       412         16          0          0          6       7167   speed_torq_ctrl.o
        76         28        192          0       1536        680   startup_stm32g030xx.o
       140         12          0          8          4       6698   stm32g0xx_hal.o
       150         24          0          0          0       6602   stm32g0xx_hal_cortex.o
       112         12          0          0          0       5666   stm32g0xx_hal_msp.o
        12          4          0          0          0       9208   stm32g0xx_hal_rcc.o
       574         24          0          0          0      68521   stm32g0xx_hal_tim.o
         6          0          0          0          0      26531   stm32g0xx_hal_tim_ex.o
        22          4          0          0          0       1598   stm32g0xx_it.o
       156          8          0          0          0       6700   stm32g0xx_ll_adc.o
       198          0          0          0          0       3833   stm32g0xx_ll_gpio.o
       428         32          0          0          0      10019   stm32g0xx_ll_rcc.o
      1020         68          0          0          0      13355   stm32g0xx_ll_tim.o
       264         64          0          0          0       5612   stm32g0xx_ll_usart.o
        12          4          0          0          0       8470   stm32g0xx_ll_utils.o
       518         56          0          1          6       7783   stm32g0xx_mc_it.o
      1708         16          0          0          0      15578   sto_pll_speed_pos_fdbk.o
         2          0         96          4          0       1994   system_stm32g0xx.o
       264          8          5          0          0       7484   usart_aspep_driver.o
         0          0          0          0         30       3131   user_logic.o
       556          0          0          0          0       5933   virtual_speed_sensor.o
         0          0          0          0         40       1202   watch_data.o

    ----------------------------------------------------------------------
     25934       1846       3448       1380       6444     471674   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        44          0          1          9         24          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        86          0          0          0          0          0   __dczerorl2.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
       502          0          0          0          0         92   aeabi_sdivfast.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        48          0          0          0          0         72   llmul.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        62          0          0          0          0         80   sys_stackheap_outer.o
        94          0          0          0          0         92   fflti.o
       176          4          0          0          0         80   fmul.o
         0          0          0          0          0          0   usenofp.o

    ----------------------------------------------------------------------
      1386         16          0          0         96       1008   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1112         12          0          0         96        836   c_p.l
       270          4          0          0          0        172   fz_ps.l

    ----------------------------------------------------------------------
      1386         16          0          0         96       1008   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     27320       1862       3448       1380       6540     471478   Grand Totals
     27320       1862       3448        464       6540     471478   ELF Image Totals (compressed)
     27320       1862       3448        464          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                30768 (  30.05kB)
    Total RW  Size (RW Data + ZI Data)              7920 (   7.73kB)
    Total ROM Size (Code + RO Data + RW Data)      31232 (  30.50kB)

==============================================================================

