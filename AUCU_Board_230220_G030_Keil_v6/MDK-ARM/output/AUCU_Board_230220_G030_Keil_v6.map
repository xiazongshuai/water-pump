Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    startup_stm32g030xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32g030xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32g030xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32g030xx.o(RESET) refers to startup_stm32g030xx.o(STACK) for __initial_sp
    startup_stm32g030xx.o(RESET) refers to startup_stm32g030xx.o(.text) for Reset_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_mc_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_it.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_it.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_mc_it.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler) for EXTI4_15_IRQHandler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_mc_it.o(.text.DMA1_Channel1_IRQHandler) for DMA1_Channel1_IRQHandler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_mc_it.o(.text.DMA1_Channel2_3_IRQHandler) for DMA1_Channel2_3_IRQHandler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) for TIM1_BRK_UP_TRG_COM_IRQHandler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_it.o(.text.TIM14_IRQHandler) for TIM14_IRQHandler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_it.o(.text.TIM17_IRQHandler) for TIM17_IRQHandler
    startup_stm32g030xx.o(RESET) refers to lin.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_mc_it.o(.text.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32g030xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32g030xx.o(.text) refers to system_stm32g0xx.o(.text.SystemInit) for SystemInit
    startup_stm32g030xx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32g030xx.o(.text) refers to startup_stm32g030xx.o(HEAP) for Heap_Mem
    startup_stm32g030xx.o(.text) refers to startup_stm32g030xx.o(STACK) for Stack_Mem
    main.o(.text.millis) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    main.o(.ARM.exidx.text.millis) refers to main.o(.text.millis) for [Anonymous Symbol]
    main.o(.ARM.exidx.text._sys_exit) refers to main.o(.text._sys_exit) for [Anonymous Symbol]
    main.o(.ARM.exidx.text._ttywrch) refers to main.o(.text._ttywrch) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.fputc) refers to main.o(.text.fputc) for [Anonymous Symbol]
    main.o(.text.main) refers to stm32g0xx_hal.o(.text.HAL_Init) for HAL_Init
    main.o(.text.main) refers to main.o(.text.SystemClock_Config) for SystemClock_Config
    main.o(.text.main) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    main.o(.text.main) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_Init) for LL_ADC_Init
    main.o(.text.main) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init) for LL_ADC_REG_Init
    main.o(.text.main) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_Init) for LL_TIM_Init
    main.o(.text.main) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init) for LL_TIM_OC_Init
    main.o(.text.main) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init) for LL_TIM_BDTR_Init
    main.o(.text.main) refers to motorcontrol.o(.text.MX_MotorControl_Init) for MX_MotorControl_Init
    main.o(.text.main) refers to app_handle.o(.text.work_mode_init) for work_mode_init
    main.o(.text.main) refers to adc_cin.o(.text.ADC_CIN_INIT) for ADC_CIN_INIT
    main.o(.text.main) refers to adc_cin.o(.text.ADC_VTS_INIT) for ADC_VTS_INIT
    main.o(.text.main) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    main.o(.text.main) refers to mc_api.o(.text.MC_GetMecSpeedAverageMotor1) for MC_GetMecSpeedAverageMotor1
    main.o(.text.main) refers to mc_api.o(.text.MC_GetSTMStateMotor1) for MC_GetSTMStateMotor1
    main.o(.text.main) refers to mc_api.o(.text.MC_GetOccurredFaultsMotor1) for MC_GetOccurredFaultsMotor1
    main.o(.text.main) refers to led_key.o(.text.exe_key_func) for exe_key_func
    main.o(.text.main) refers to app_handle.o(.text.work_mode_perfrom) for work_mode_perfrom
    main.o(.text.main) refers to app_error.o(.text.error_check) for error_check
    main.o(.text.main) refers to main.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    main.o(.text.main) refers to watch_data.o(.bss.watch_data) for watch_data
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock) for LL_SetSystemCoreClock
    main.o(.text.SystemClock_Config) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Error_Handler) refers to main.o(.text.Error_Handler) for [Anonymous Symbol]
    main.o(.text.MX_TIM17_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init) for HAL_TIM_Base_Init
    main.o(.text.MX_TIM17_Init) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    main.o(.text.MX_TIM17_Init) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    main.o(.text.MX_TIM17_Init) refers to main.o(.bss.htim17) for htim17
    main.o(.ARM.exidx.text.MX_TIM17_Init) refers to main.o(.text.MX_TIM17_Init) for [Anonymous Symbol]
    main.o(.text.MX_USART1_UART_Init) refers to stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for HAL_RCCEx_PeriphCLKConfig
    main.o(.text.MX_USART1_UART_Init) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    main.o(.text.MX_USART1_UART_Init) refers to stm32g0xx_ll_usart.o(.text.LL_USART_Init) for LL_USART_Init
    main.o(.ARM.exidx.text.MX_USART1_UART_Init) refers to main.o(.text.MX_USART1_UART_Init) for [Anonymous Symbol]
    motorcontrol.o(.text.MX_MotorControl_Init) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    motorcontrol.o(.text.MX_MotorControl_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    motorcontrol.o(.text.MX_MotorControl_Init) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    motorcontrol.o(.text.MX_MotorControl_Init) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    motorcontrol.o(.text.MX_MotorControl_Init) refers to mc_tasks.o(.text.MCboot) for MCboot
    motorcontrol.o(.text.MX_MotorControl_Init) refers to mc_tasks.o(.text.mc_lock_pins) for mc_lock_pins
    motorcontrol.o(.text.MX_MotorControl_Init) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for uwTickPrio
    motorcontrol.o(.text.MX_MotorControl_Init) refers to motorcontrol.o(.bss.pMCI) for pMCI
    motorcontrol.o(.ARM.exidx.text.MX_MotorControl_Init) refers to motorcontrol.o(.text.MX_MotorControl_Init) for [Anonymous Symbol]
    mc_api.o(.text.MC_StartMotor1) refers to mc_interface.o(.text.MCI_StartMotor) for MCI_StartMotor
    mc_api.o(.text.MC_StartMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_StartMotor1) refers to mc_api.o(.text.MC_StartMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_StopMotor1) refers to mc_interface.o(.text.MCI_StopMotor) for MCI_StopMotor
    mc_api.o(.text.MC_StopMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_StopMotor1) refers to mc_api.o(.text.MC_StopMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_ProgramSpeedRampMotor1) refers to mc_interface.o(.text.MCI_ExecSpeedRamp) for MCI_ExecSpeedRamp
    mc_api.o(.text.MC_ProgramSpeedRampMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_ProgramSpeedRampMotor1) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_ProgramSpeedRampMotor1_F) refers to mc_interface.o(.text.MCI_ExecSpeedRamp_F) for MCI_ExecSpeedRamp_F
    mc_api.o(.text.MC_ProgramSpeedRampMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_ProgramSpeedRampMotor1_F) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_ProgramTorqueRampMotor1) refers to mc_interface.o(.text.MCI_ExecTorqueRamp) for MCI_ExecTorqueRamp
    mc_api.o(.text.MC_ProgramTorqueRampMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_ProgramTorqueRampMotor1) refers to mc_api.o(.text.MC_ProgramTorqueRampMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_ProgramTorqueRampMotor1_F) refers to mc_interface.o(.text.MCI_ExecTorqueRamp_F) for MCI_ExecTorqueRamp_F
    mc_api.o(.text.MC_ProgramTorqueRampMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_ProgramTorqueRampMotor1_F) refers to mc_api.o(.text.MC_ProgramTorqueRampMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_SetCurrentReferenceMotor1) refers to mc_interface.o(.text.MCI_SetCurrentReferences) for MCI_SetCurrentReferences
    mc_api.o(.text.MC_SetCurrentReferenceMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_SetCurrentReferenceMotor1) refers to mc_api.o(.text.MC_SetCurrentReferenceMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_SetCurrentReferenceMotor1_F) refers to mc_interface.o(.text.MCI_SetCurrentReferences_F) for MCI_SetCurrentReferences_F
    mc_api.o(.text.MC_SetCurrentReferenceMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_SetCurrentReferenceMotor1_F) refers to mc_api.o(.text.MC_SetCurrentReferenceMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetCommandStateMotor1) refers to mc_interface.o(.text.MCI_IsCommandAcknowledged) for MCI_IsCommandAcknowledged
    mc_api.o(.text.MC_GetCommandStateMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetCommandStateMotor1) refers to mc_api.o(.text.MC_GetCommandStateMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_StopSpeedRampMotor1) refers to mc_interface.o(.text.MCI_StopSpeedRamp) for MCI_StopSpeedRamp
    mc_api.o(.text.MC_StopSpeedRampMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_StopSpeedRampMotor1) refers to mc_api.o(.text.MC_StopSpeedRampMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_StopRampMotor1) refers to mc_interface.o(.text.MCI_StopRamp) for MCI_StopRamp
    mc_api.o(.text.MC_StopRampMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_StopRampMotor1) refers to mc_api.o(.text.MC_StopRampMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_HasRampCompletedMotor1) refers to mc_interface.o(.text.MCI_RampCompleted) for MCI_RampCompleted
    mc_api.o(.text.MC_HasRampCompletedMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_HasRampCompletedMotor1) refers to mc_api.o(.text.MC_HasRampCompletedMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetMecSpeedReferenceMotor1) refers to mc_interface.o(.text.MCI_GetMecSpeedRefUnit) for MCI_GetMecSpeedRefUnit
    mc_api.o(.text.MC_GetMecSpeedReferenceMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetMecSpeedReferenceMotor1) refers to mc_api.o(.text.MC_GetMecSpeedReferenceMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetMecSpeedAverageMotor1) refers to mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit) for MCI_GetAvrgMecSpeedUnit
    mc_api.o(.text.MC_GetMecSpeedAverageMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetMecSpeedAverageMotor1) refers to mc_api.o(.text.MC_GetMecSpeedAverageMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1) refers to mc_interface.o(.text.MCI_GetLastRampFinalSpeed) for MCI_GetLastRampFinalSpeed
    mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetLastRampFinalSpeedMotor1) refers to mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1_F) refers to mc_interface.o(.text.MCI_GetLastRampFinalSpeed_F) for MCI_GetLastRampFinalSpeed_F
    mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetLastRampFinalSpeedMotor1_F) refers to mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetControlModeMotor1) refers to mc_interface.o(.text.MCI_GetControlMode) for MCI_GetControlMode
    mc_api.o(.text.MC_GetControlModeMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetControlModeMotor1) refers to mc_api.o(.text.MC_GetControlModeMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetImposedDirectionMotor1) refers to mc_interface.o(.text.MCI_GetImposedMotorDirection) for MCI_GetImposedMotorDirection
    mc_api.o(.text.MC_GetImposedDirectionMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetImposedDirectionMotor1) refers to mc_api.o(.text.MC_GetImposedDirectionMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetSpeedSensorReliabilityMotor1) refers to mc_interface.o(.text.MCI_GetSpdSensorReliability) for MCI_GetSpdSensorReliability
    mc_api.o(.text.MC_GetSpeedSensorReliabilityMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetSpeedSensorReliabilityMotor1) refers to mc_api.o(.text.MC_GetSpeedSensorReliabilityMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetPhaseCurrentAmplitudeMotor1) refers to mc_interface.o(.text.MCI_GetPhaseCurrentAmplitude) for MCI_GetPhaseCurrentAmplitude
    mc_api.o(.text.MC_GetPhaseCurrentAmplitudeMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetPhaseCurrentAmplitudeMotor1) refers to mc_api.o(.text.MC_GetPhaseCurrentAmplitudeMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetPhaseVoltageAmplitudeMotor1) refers to mc_interface.o(.text.MCI_GetPhaseVoltageAmplitude) for MCI_GetPhaseVoltageAmplitude
    mc_api.o(.text.MC_GetPhaseVoltageAmplitudeMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetPhaseVoltageAmplitudeMotor1) refers to mc_api.o(.text.MC_GetPhaseVoltageAmplitudeMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIabMotor1) refers to mc_interface.o(.text.MCI_GetIab) for MCI_GetIab
    mc_api.o(.text.MC_GetIabMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetIabMotor1) refers to mc_api.o(.text.MC_GetIabMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIabMotor1_F) refers to mc_interface.o(.text.MCI_GetIab_F) for MCI_GetIab_F
    mc_api.o(.text.MC_GetIabMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetIabMotor1_F) refers to mc_api.o(.text.MC_GetIabMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIalphabetaMotor1) refers to mc_interface.o(.text.MCI_GetIalphabeta) for MCI_GetIalphabeta
    mc_api.o(.text.MC_GetIalphabetaMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetIalphabetaMotor1) refers to mc_api.o(.text.MC_GetIalphabetaMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIqdMotor1) refers to mc_interface.o(.text.MCI_GetIqd) for MCI_GetIqd
    mc_api.o(.text.MC_GetIqdMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetIqdMotor1) refers to mc_api.o(.text.MC_GetIqdMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIqdMotor1_F) refers to mc_interface.o(.text.MCI_GetIqd_F) for MCI_GetIqd_F
    mc_api.o(.text.MC_GetIqdMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetIqdMotor1_F) refers to mc_api.o(.text.MC_GetIqdMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIqdrefMotor1) refers to mc_interface.o(.text.MCI_GetIqdref) for MCI_GetIqdref
    mc_api.o(.text.MC_GetIqdrefMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetIqdrefMotor1) refers to mc_api.o(.text.MC_GetIqdrefMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetIqdrefMotor1_F) refers to mc_interface.o(.text.MCI_GetIqdref_F) for MCI_GetIqdref_F
    mc_api.o(.text.MC_GetIqdrefMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetIqdrefMotor1_F) refers to mc_api.o(.text.MC_GetIqdrefMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetVqdMotor1) refers to mc_interface.o(.text.MCI_GetVqd) for MCI_GetVqd
    mc_api.o(.text.MC_GetVqdMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetVqdMotor1) refers to mc_api.o(.text.MC_GetVqdMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetValphabetaMotor1) refers to mc_interface.o(.text.MCI_GetValphabeta) for MCI_GetValphabeta
    mc_api.o(.text.MC_GetValphabetaMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetValphabetaMotor1) refers to mc_api.o(.text.MC_GetValphabetaMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetElAngledppMotor1) refers to mc_interface.o(.text.MCI_GetElAngledpp) for MCI_GetElAngledpp
    mc_api.o(.text.MC_GetElAngledppMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetElAngledppMotor1) refers to mc_api.o(.text.MC_GetElAngledppMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetTerefMotor1) refers to mc_interface.o(.text.MCI_GetTeref) for MCI_GetTeref
    mc_api.o(.text.MC_GetTerefMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetTerefMotor1) refers to mc_api.o(.text.MC_GetTerefMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetTerefMotor1_F) refers to mc_interface.o(.text.MCI_GetTeref_F) for MCI_GetTeref_F
    mc_api.o(.text.MC_GetTerefMotor1_F) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetTerefMotor1_F) refers to mc_api.o(.text.MC_GetTerefMotor1_F) for [Anonymous Symbol]
    mc_api.o(.text.MC_Clear_IqdrefMotor1) refers to mc_interface.o(.text.MCI_Clear_Iqdref) for MCI_Clear_Iqdref
    mc_api.o(.text.MC_Clear_IqdrefMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_Clear_IqdrefMotor1) refers to mc_api.o(.text.MC_Clear_IqdrefMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_AcknowledgeFaultMotor1) refers to mc_interface.o(.text.MCI_FaultAcknowledged) for MCI_FaultAcknowledged
    mc_api.o(.text.MC_AcknowledgeFaultMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_AcknowledgeFaultMotor1) refers to mc_api.o(.text.MC_AcknowledgeFaultMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetOccurredFaultsMotor1) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_api.o(.text.MC_GetOccurredFaultsMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetOccurredFaultsMotor1) refers to mc_api.o(.text.MC_GetOccurredFaultsMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetCurrentFaultsMotor1) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_api.o(.text.MC_GetCurrentFaultsMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetCurrentFaultsMotor1) refers to mc_api.o(.text.MC_GetCurrentFaultsMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetSTMStateMotor1) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_api.o(.text.MC_GetSTMStateMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetSTMStateMotor1) refers to mc_api.o(.text.MC_GetSTMStateMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_SetPolarizationOffsetsMotor1) refers to mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) for MCI_SetCalibratedOffsetsMotor
    mc_api.o(.text.MC_SetPolarizationOffsetsMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_SetPolarizationOffsetsMotor1) refers to mc_api.o(.text.MC_SetPolarizationOffsetsMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetPolarizationOffsetsMotor1) refers to mc_interface.o(.text.MCI_GetCalibratedOffsetsMotor) for MCI_GetCalibratedOffsetsMotor
    mc_api.o(.text.MC_GetPolarizationOffsetsMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_GetPolarizationOffsetsMotor1) refers to mc_api.o(.text.MC_GetPolarizationOffsetsMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_StartPolarizationOffsetsMeasurementMotor1) refers to mc_interface.o(.text.MCI_StartOffsetMeasurments) for MCI_StartOffsetMeasurments
    mc_api.o(.text.MC_StartPolarizationOffsetsMeasurementMotor1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    mc_api.o(.ARM.exidx.text.MC_StartPolarizationOffsetsMeasurementMotor1) refers to mc_api.o(.text.MC_StartPolarizationOffsetsMeasurementMotor1) for [Anonymous Symbol]
    mc_api.o(.text.MC_GetAveragePowerMotor1_F) refers to pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW) for PQD_GetAvrgElMotorPowerW
    mc_api.o(.text.MC_GetAveragePowerMotor1_F) refers to mc_config.o(.data.pMPM) for pMPM
    mc_api.o(.ARM.exidx.text.MC_GetAveragePowerMotor1_F) refers to mc_api.o(.text.MC_GetAveragePowerMotor1_F) for [Anonymous Symbol]
    mc_api.o(.ARM.exidx.text.MC_ProfilerCommand) refers to mc_api.o(.text.MC_ProfilerCommand) for [Anonymous Symbol]
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents) for R3_1_GetPhaseCurrents
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for R3_1_SwitchOffPWM
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM) for R3_1_SwitchOnPWM
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) for R3_1_CurrentReadingCalibration
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides) for R3_1_TurnOnLowSides
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX) for R3_1_SetADCSampPointSectX
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_IsOverCurrentOccurred) for R3_1_IsOverCurrentOccurred
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetOffsetCalib) for R3_1_SetOffsetCalib
    mc_config.o(.data.PWM_Handle_M1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetOffsetCalib) for R3_1_GetOffsetCalib
    mc_config.o(.data.PWM_Handle_M1) refers to mc_parameters.o(.rodata.R3_1_Params) for R3_1_Params
    mc_config.o(.data.STO_M1) refers to mc_config.o(.data.STO_PLL_M1) for STO_PLL_M1
    mc_config.o(.data.STO_M1) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_ForceConvergency1) for STO_PLL_ForceConvergency1
    mc_config.o(.data.STO_M1) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_ForceConvergency2) for STO_PLL_ForceConvergency2
    mc_config.o(.data.STO_M1) refers to sto_pll_speed_pos_fdbk.o(.text.STO_OTF_ResetPLL) for STO_OTF_ResetPLL
    mc_config.o(.data.STO_M1) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsVarianceTight) for STO_PLL_IsVarianceTight
    mc_config.o(.data.BusVoltageSensor_M1) refers to mc_config.o(.bss.RealBusVoltageSensorFilterBufferM1) for [Anonymous Symbol]
    mc_config.o(.data.pSTC) refers to mc_config.o(.data.SpeednTorqCtrlM1) for SpeednTorqCtrlM1
    mc_config.o(.data.pTemperatureSensor) refers to mc_config.o(.data.TempSensor_M1) for TempSensor_M1
    mc_config.o(.data.pPIDIq) refers to mc_config.o(.data.PIDIqHandle_M1) for PIDIqHandle_M1
    mc_config.o(.data.pPIDId) refers to mc_config.o(.data.PIDIdHandle_M1) for PIDIdHandle_M1
    mc_config.o(.data.pMPM) refers to mc_config.o(.data.PQD_MotorPowMeasM1) for PQD_MotorPowMeasM1
    mcp_config.o(.data.aspepOverUartA) refers to aspep.o(.text.ASPEP_getBuffer) for ASPEP_getBuffer
    mcp_config.o(.data.aspepOverUartA) refers to aspep.o(.text.ASPEP_sendPacket) for ASPEP_sendPacket
    mcp_config.o(.data.aspepOverUartA) refers to aspep.o(.text.ASPEP_RXframeProcess) for ASPEP_RXframeProcess
    mcp_config.o(.data.aspepOverUartA) refers to mcp_config.o(.data.UASPEP_A) for [Anonymous Symbol]
    mcp_config.o(.data.aspepOverUartA) refers to mcp_config.o(.bss.MCPSyncRXBuff) for [Anonymous Symbol]
    mcp_config.o(.data.aspepOverUartA) refers to mcp_config.o(.bss.MCPSyncTxBuff) for [Anonymous Symbol]
    mcp_config.o(.data.aspepOverUartA) refers to mcp_config.o(.bss.MCPAsyncBuffUARTA_A) for [Anonymous Symbol]
    mcp_config.o(.data.aspepOverUartA) refers to mcp_config.o(.bss.MCPAsyncBuffUARTA_B) for [Anonymous Symbol]
    mcp_config.o(.data.aspepOverUartA) refers to usart_aspep_driver.o(.text.UASPEP_INIT) for UASPEP_INIT
    mcp_config.o(.data.aspepOverUartA) refers to usart_aspep_driver.o(.text.UASPEP_IDLE_ENABLE) for UASPEP_IDLE_ENABLE
    mcp_config.o(.data.aspepOverUartA) refers to usart_aspep_driver.o(.text.UASPEP_RECEIVE_BUFFER) for UASPEP_RECEIVE_BUFFER
    mcp_config.o(.data.aspepOverUartA) refers to usart_aspep_driver.o(.text.UASPEP_SEND_PACKET) for UASPEP_SEND_PACKET
    mcp_config.o(.data.MCP_Over_UartA) refers to mcp_config.o(.data.aspepOverUartA) for aspepOverUartA
    mcp_config.o(.data.MCPA_UART_A) refers to mcp_config.o(.data.aspepOverUartA) for aspepOverUartA
    mcp_config.o(.data.MCPA_UART_A) refers to mcp_config.o(.bss.dataPtrTableA) for dataPtrTableA
    mcp_config.o(.data.MCPA_UART_A) refers to mcp_config.o(.bss.dataPtrTableBuffA) for dataPtrTableBuffA
    mcp_config.o(.data.MCPA_UART_A) refers to mcp_config.o(.bss.dataSizeTableA) for dataSizeTableA
    mcp_config.o(.data.MCPA_UART_A) refers to mcp_config.o(.bss.dataSizeTableBuffA) for dataSizeTableBuffA
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_Clear) refers to pwm_curr_fdbk.o(.text.PWMC_Clear) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetOffsetCalib) refers to pwm_curr_fdbk.o(.text.PWMC_SetOffsetCalib) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetOffsetCalib) refers to pwm_curr_fdbk.o(.text.PWMC_GetOffsetCalib) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetPhaseCurrents) refers to pwm_curr_fdbk.o(.text.PWMC_GetPhaseCurrents) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetPhaseVoltage) refers to pwm_curr_fdbk.o(.text.PWMC_SetPhaseVoltage) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SwitchOffPWM) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SwitchOnPWM) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOnPWM) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.text.PWMC_CurrentReadingCalibr) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM) for PWMC_SwitchOffPWM
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_CurrentReadingCalibr) refers to pwm_curr_fdbk.o(.text.PWMC_CurrentReadingCalibr) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.text.PWMC_CalcPhaseCurrentsEst) refers to mc_math.o(.text.MCM_Rev_Park) for MCM_Rev_Park
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_CalcPhaseCurrentsEst) refers to pwm_curr_fdbk.o(.text.PWMC_CalcPhaseCurrentsEst) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_TurnOnLowSides) refers to pwm_curr_fdbk.o(.text.PWMC_TurnOnLowSides) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_CheckOverCurrent) refers to pwm_curr_fdbk.o(.text.PWMC_CheckOverCurrent) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_OCPSetReferenceVoltage) refers to pwm_curr_fdbk.o(.text.PWMC_OCPSetReferenceVoltage) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetTurnOnLowSidesAction) refers to pwm_curr_fdbk.o(.text.PWMC_GetTurnOnLowSidesAction) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_DPWM_ModeEnable) refers to pwm_curr_fdbk.o(.text.PWMC_DPWM_ModeEnable) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_DPWM_ModeDisable) refers to pwm_curr_fdbk.o(.text.PWMC_DPWM_ModeDisable) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetDPWM_Mode) refers to pwm_curr_fdbk.o(.text.PWMC_GetDPWM_Mode) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeEnable) refers to pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeEnable) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeDisable) refers to pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeDisable) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeSetDuty) refers to pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeSetDuty) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetAlignFlag) refers to pwm_curr_fdbk.o(.text.PWMC_SetAlignFlag) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterGetPhaseCurrentsCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterGetPhaseCurrentsCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSwitchOffPwmCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterSwitchOffPwmCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSwitchonPwmCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterSwitchonPwmCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterReadingCalibrationCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterReadingCalibrationCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterTurnOnLowSidesCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterTurnOnLowSidesCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSampPointSectXCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterSampPointSectXCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterIsOverCurrentOccurredCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterIsOverCurrentOccurredCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterOCPSetRefVoltageCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterOCPSetRefVoltageCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeEnableCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeEnableCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeDisableCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeDisableCallBack) for [Anonymous Symbol]
    pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeSetDutyCallBack) refers to pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeSetDutyCallBack) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_RegisterRegConv_WithCB) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_RegisterRegConv_WithCB) refers to regular_conversion_manager.o(.text.RCM_RegisterRegConv_WithCB) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_RegisterRegConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_RegisterRegConv) refers to regular_conversion_manager.o(.text.RCM_RegisterRegConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_ExecRegularConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_ExecRegularConv) refers to mc_config.o(.data.PWM_Handle_M1) for PWM_Handle_M1
    regular_conversion_manager.o(.ARM.exidx.text.RCM_ExecRegularConv) refers to regular_conversion_manager.o(.text.RCM_ExecRegularConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_RequestUserConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_RequestUserConv) refers to regular_conversion_manager.o(.text.RCM_RequestUserConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_GetUserConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_GetUserConv) refers to regular_conversion_manager.o(.text.RCM_GetUserConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_ExecUserConv) refers to regular_conversion_manager.o(.text.RCM_ExecRegularConv) for RCM_ExecRegularConv
    regular_conversion_manager.o(.text.RCM_ExecUserConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_ExecUserConv) refers to regular_conversion_manager.o(.text.RCM_ExecUserConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_GetUserConvState) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_GetUserConvState) refers to regular_conversion_manager.o(.text.RCM_GetUserConvState) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_PauseRegularConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_PauseRegularConv) refers to regular_conversion_manager.o(.text.RCM_PauseRegularConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_ExecNextConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_ExecNextConv) refers to regular_conversion_manager.o(.text.RCM_ExecNextConv) for [Anonymous Symbol]
    regular_conversion_manager.o(.text.RCM_ReadOngoingConv) refers to regular_conversion_manager.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    regular_conversion_manager.o(.ARM.exidx.text.RCM_ReadOngoingConv) refers to regular_conversion_manager.o(.text.RCM_ReadOngoingConv) for [Anonymous Symbol]
    mc_math.o(.ARM.exidx.text.MCM_Clarke) refers to mc_math.o(.text.MCM_Clarke) for [Anonymous Symbol]
    mc_math.o(.text.MCM_Park) refers to mc_math.o(.text.MCM_Trig_Functions) for MCM_Trig_Functions
    mc_math.o(.ARM.exidx.text.MCM_Park) refers to mc_math.o(.text.MCM_Park) for [Anonymous Symbol]
    mc_math.o(.text.MCM_Trig_Functions) refers to mc_math.o(.rodata.hSin_Cos_Table) for hSin_Cos_Table
    mc_math.o(.ARM.exidx.text.MCM_Trig_Functions) refers to mc_math.o(.text.MCM_Trig_Functions) for [Anonymous Symbol]
    mc_math.o(.text.MCM_Rev_Park) refers to mc_math.o(.text.MCM_Trig_Functions) for MCM_Trig_Functions
    mc_math.o(.ARM.exidx.text.MCM_Rev_Park) refers to mc_math.o(.text.MCM_Rev_Park) for [Anonymous Symbol]
    mc_math.o(.text.MCM_Sqrt) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    mc_math.o(.ARM.exidx.text.MCM_Sqrt) refers to mc_math.o(.text.MCM_Sqrt) for [Anonymous Symbol]
    mc_math.o(.ARM.exidx.text.MCM_floatToIntBit) refers to mc_math.o(.text.MCM_floatToIntBit) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_Init) refers to mc_interface.o(.text.MCI_Init) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_ExecSpeedRamp) refers to mc_interface.o(.text.MCI_ExecSpeedRamp) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_ExecSpeedRamp_F) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    mc_interface.o(.text.MCI_ExecSpeedRamp_F) refers to fdiv.o(.text) for __aeabi_fdiv
    mc_interface.o(.text.MCI_ExecSpeedRamp_F) refers to ffixi.o(.text) for __aeabi_f2iz
    mc_interface.o(.text.MCI_ExecSpeedRamp_F) refers to mc_interface.o(.text.MCI_ExecSpeedRamp) for MCI_ExecSpeedRamp
    mc_interface.o(.ARM.exidx.text.MCI_ExecSpeedRamp_F) refers to mc_interface.o(.text.MCI_ExecSpeedRamp_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_ExecTorqueRamp) refers to mc_interface.o(.text.MCI_ExecTorqueRamp) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_ExecTorqueRamp_F) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    mc_interface.o(.text.MCI_ExecTorqueRamp_F) refers to ffixi.o(.text) for __aeabi_f2iz
    mc_interface.o(.text.MCI_ExecTorqueRamp_F) refers to mc_interface.o(.text.MCI_ExecTorqueRamp) for MCI_ExecTorqueRamp
    mc_interface.o(.ARM.exidx.text.MCI_ExecTorqueRamp_F) refers to mc_interface.o(.text.MCI_ExecTorqueRamp_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_SetCurrentReferences) refers to mc_interface.o(.text.MCI_SetCurrentReferences) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_SetCurrentReferences_F) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    mc_interface.o(.text.MCI_SetCurrentReferences_F) refers to ffixi.o(.text) for __aeabi_f2iz
    mc_interface.o(.text.MCI_SetCurrentReferences_F) refers to mc_interface.o(.text.MCI_SetCurrentReferences) for MCI_SetCurrentReferences
    mc_interface.o(.ARM.exidx.text.MCI_SetCurrentReferences_F) refers to mc_interface.o(.text.MCI_SetCurrentReferences_F) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_SetSpeedMode) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for STC_SetControlMode
    mc_interface.o(.ARM.exidx.text.MCI_SetSpeedMode) refers to mc_interface.o(.text.MCI_SetSpeedMode) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_SetOpenLoopCurrent) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for STC_SetControlMode
    mc_interface.o(.ARM.exidx.text.MCI_SetOpenLoopCurrent) refers to mc_interface.o(.text.MCI_SetOpenLoopCurrent) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_SetOpenLoopVoltage) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for STC_SetControlMode
    mc_interface.o(.ARM.exidx.text.MCI_SetOpenLoopVoltage) refers to mc_interface.o(.text.MCI_SetOpenLoopVoltage) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StartMotor) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_StartMotor) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_interface.o(.text.MCI_StartMotor) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.ARM.exidx.text.MCI_StartMotor) refers to mc_interface.o(.text.MCI_StartMotor) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetSTMState) refers to mc_interface.o(.text.MCI_GetSTMState) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetOccurredFaults) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetCurrentFaults) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StartWithMeasurementOffset) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_StartWithMeasurementOffset) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_interface.o(.text.MCI_StartWithMeasurementOffset) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.ARM.exidx.text.MCI_StartWithMeasurementOffset) refers to mc_interface.o(.text.MCI_StartWithMeasurementOffset) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StartOffsetMeasurments) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_StartOffsetMeasurments) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_interface.o(.text.MCI_StartOffsetMeasurments) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.ARM.exidx.text.MCI_StartOffsetMeasurments) refers to mc_interface.o(.text.MCI_StartOffsetMeasurments) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetCalibratedOffsetsMotor) refers to pwm_curr_fdbk.o(.text.PWMC_GetOffsetCalib) for PWMC_GetOffsetCalib
    mc_interface.o(.ARM.exidx.text.MCI_GetCalibratedOffsetsMotor) refers to mc_interface.o(.text.MCI_GetCalibratedOffsetsMotor) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) refers to pwm_curr_fdbk.o(.text.PWMC_SetOffsetCalib) for PWMC_SetOffsetCalib
    mc_interface.o(.ARM.exidx.text.MCI_SetCalibratedOffsetsMotor) refers to mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StopMotor) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_StopMotor) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_interface.o(.text.MCI_StopMotor) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.ARM.exidx.text.MCI_StopMotor) refers to mc_interface.o(.text.MCI_StopMotor) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_FaultAcknowledged) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_FaultAcknowledged) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_interface.o(.ARM.exidx.text.MCI_FaultAcknowledged) refers to mc_interface.o(.text.MCI_FaultAcknowledged) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_FaultProcessing) refers to mc_interface.o(.text.MCI_FaultProcessing) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_ExecBufferedCommands) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for STC_SetControlMode
    mc_interface.o(.text.MCI_ExecBufferedCommands) refers to speed_torq_ctrl.o(.text.STC_ExecRamp) for STC_ExecRamp
    mc_interface.o(.ARM.exidx.text.MCI_ExecBufferedCommands) refers to mc_interface.o(.text.MCI_ExecBufferedCommands) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_IsCommandAcknowledged) refers to mc_interface.o(.text.MCI_IsCommandAcknowledged) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetFaultState) refers to mc_interface.o(.text.MCI_GetFaultState) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetControlMode) refers to mc_interface.o(.text.MCI_GetControlMode) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetImposedMotorDirection) refers to mc_interface.o(.text.MCI_GetImposedMotorDirection) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalSpeed) refers to mc_interface.o(.text.MCI_GetLastRampFinalSpeed) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalTorque) refers to mc_interface.o(.text.MCI_GetLastRampFinalTorque) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalDuration) refers to mc_interface.o(.text.MCI_GetLastRampFinalDuration) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetLastRampFinalSpeed_F) refers to fflti.o(.text) for __aeabi_i2f
    mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalSpeed_F) refers to mc_interface.o(.text.MCI_GetLastRampFinalSpeed_F) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_RampCompleted) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mc_interface.o(.text.MCI_RampCompleted) refers to speed_torq_ctrl.o(.text.STC_RampCompleted) for STC_RampCompleted
    mc_interface.o(.ARM.exidx.text.MCI_RampCompleted) refers to mc_interface.o(.text.MCI_RampCompleted) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StopSpeedRamp) refers to speed_torq_ctrl.o(.text.STC_StopSpeedRamp) for STC_StopSpeedRamp
    mc_interface.o(.ARM.exidx.text.MCI_StopSpeedRamp) refers to mc_interface.o(.text.MCI_StopSpeedRamp) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_StopRamp) refers to speed_torq_ctrl.o(.text.STC_StopRamp) for STC_StopRamp
    mc_interface.o(.ARM.exidx.text.MCI_StopRamp) refers to mc_interface.o(.text.MCI_StopRamp) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetSpdSensorReliability) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for STC_GetSpeedSensor
    mc_interface.o(.text.MCI_GetSpdSensorReliability) refers to speed_pos_fdbk.o(.text.SPD_Check) for SPD_Check
    mc_interface.o(.ARM.exidx.text.MCI_GetSpdSensorReliability) refers to mc_interface.o(.text.MCI_GetSpdSensorReliability) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for STC_GetSpeedSensor
    mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    mc_interface.o(.ARM.exidx.text.MCI_GetAvrgMecSpeedUnit) refers to mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetAvrgMecSpeed_F) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for STC_GetSpeedSensor
    mc_interface.o(.text.MCI_GetAvrgMecSpeed_F) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    mc_interface.o(.text.MCI_GetAvrgMecSpeed_F) refers to fflti.o(.text) for __aeabi_i2f
    mc_interface.o(.ARM.exidx.text.MCI_GetAvrgMecSpeed_F) refers to mc_interface.o(.text.MCI_GetAvrgMecSpeed_F) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetMecSpeedRefUnit) refers to speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnit) for STC_GetMecSpeedRefUnit
    mc_interface.o(.ARM.exidx.text.MCI_GetMecSpeedRefUnit) refers to mc_interface.o(.text.MCI_GetMecSpeedRefUnit) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetMecSpeedRef_F) refers to speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnit) for STC_GetMecSpeedRefUnit
    mc_interface.o(.text.MCI_GetMecSpeedRef_F) refers to fflti.o(.text) for __aeabi_i2f
    mc_interface.o(.ARM.exidx.text.MCI_GetMecSpeedRef_F) refers to mc_interface.o(.text.MCI_GetMecSpeedRef_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIab) refers to mc_interface.o(.text.MCI_GetIab) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetIab_F) refers to dflti.o(.text) for __aeabi_i2d
    mc_interface.o(.text.MCI_GetIab_F) refers to dmul.o(.text) for __aeabi_dmul
    mc_interface.o(.text.MCI_GetIab_F) refers to d2f.o(.text) for __aeabi_d2f
    mc_interface.o(.ARM.exidx.text.MCI_GetIab_F) refers to mc_interface.o(.text.MCI_GetIab_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIalphabeta) refers to mc_interface.o(.text.MCI_GetIalphabeta) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIqd) refers to mc_interface.o(.text.MCI_GetIqd) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetIqd_F) refers to dflti.o(.text) for __aeabi_i2d
    mc_interface.o(.text.MCI_GetIqd_F) refers to dmul.o(.text) for __aeabi_dmul
    mc_interface.o(.text.MCI_GetIqd_F) refers to d2f.o(.text) for __aeabi_d2f
    mc_interface.o(.ARM.exidx.text.MCI_GetIqd_F) refers to mc_interface.o(.text.MCI_GetIqd_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIqdHF) refers to mc_interface.o(.text.MCI_GetIqdHF) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetIqdref) refers to mc_interface.o(.text.MCI_GetIqdref) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetIqdref_F) refers to dflti.o(.text) for __aeabi_i2d
    mc_interface.o(.text.MCI_GetIqdref_F) refers to dmul.o(.text) for __aeabi_dmul
    mc_interface.o(.text.MCI_GetIqdref_F) refers to d2f.o(.text) for __aeabi_d2f
    mc_interface.o(.ARM.exidx.text.MCI_GetIqdref_F) refers to mc_interface.o(.text.MCI_GetIqdref_F) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetVqd) refers to mc_interface.o(.text.MCI_GetVqd) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetValphabeta) refers to mc_interface.o(.text.MCI_GetValphabeta) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetElAngledpp) refers to mc_interface.o(.text.MCI_GetElAngledpp) for [Anonymous Symbol]
    mc_interface.o(.ARM.exidx.text.MCI_GetTeref) refers to mc_interface.o(.text.MCI_GetTeref) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetTeref_F) refers to dflti.o(.text) for __aeabi_i2d
    mc_interface.o(.text.MCI_GetTeref_F) refers to dmul.o(.text) for __aeabi_dmul
    mc_interface.o(.text.MCI_GetTeref_F) refers to d2f.o(.text) for __aeabi_d2f
    mc_interface.o(.ARM.exidx.text.MCI_GetTeref_F) refers to mc_interface.o(.text.MCI_GetTeref_F) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetPhaseCurrentAmplitude) refers to mc_math.o(.text.MCM_Sqrt) for MCM_Sqrt
    mc_interface.o(.ARM.exidx.text.MCI_GetPhaseCurrentAmplitude) refers to mc_interface.o(.text.MCI_GetPhaseCurrentAmplitude) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_GetPhaseVoltageAmplitude) refers to mc_math.o(.text.MCM_Sqrt) for MCM_Sqrt
    mc_interface.o(.ARM.exidx.text.MCI_GetPhaseVoltageAmplitude) refers to mc_interface.o(.text.MCI_GetPhaseVoltageAmplitude) for [Anonymous Symbol]
    mc_interface.o(.text.MCI_Clear_Iqdref) refers to speed_torq_ctrl.o(.text.STC_GetDefaultIqdref) for STC_GetDefaultIqdref
    mc_interface.o(.ARM.exidx.text.MCI_Clear_Iqdref) refers to mc_interface.o(.text.MCI_Clear_Iqdref) for [Anonymous Symbol]
    stm32g0xx_mc_it.o(.text.DMA1_Channel1_IRQHandler) refers to mc_tasks.o(.text.TSK_HighFrequencyTask) for TSK_HighFrequencyTask
    stm32g0xx_mc_it.o(.ARM.exidx.text.DMA1_Channel1_IRQHandler) refers to stm32g0xx_mc_it.o(.text.DMA1_Channel1_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TIMx_UP_IRQHandler) for R3_1_TIMx_UP_IRQHandler
    stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_OVERCURRENT_IRQHandler) for R3_1_OVERCURRENT_IRQHandler
    stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_OVERVOLTAGE_IRQHandler) for R3_1_OVERVOLTAGE_IRQHandler
    stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to mc_config.o(.data.PWM_Handle_M1) for PWM_Handle_M1
    stm32g0xx_mc_it.o(.ARM.exidx.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_mc_it.o(.text.DMA1_Channel2_3_IRQHandler) refers to aspep.o(.text.ASPEP_HWDataReceivedIT) for ASPEP_HWDataReceivedIT
    stm32g0xx_mc_it.o(.text.DMA1_Channel2_3_IRQHandler) refers to mcp_config.o(.data.aspepOverUartA) for aspepOverUartA
    stm32g0xx_mc_it.o(.ARM.exidx.text.DMA1_Channel2_3_IRQHandler) refers to stm32g0xx_mc_it.o(.text.DMA1_Channel2_3_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_mc_it.o(.text.USART2_IRQHandler) refers to aspep.o(.text.ASPEP_HWDataTransmittedIT) for ASPEP_HWDataTransmittedIT
    stm32g0xx_mc_it.o(.text.USART2_IRQHandler) refers to aspep.o(.text.ASPEP_HWDMAReset) for ASPEP_HWDMAReset
    stm32g0xx_mc_it.o(.text.USART2_IRQHandler) refers to mcp_config.o(.data.aspepOverUartA) for aspepOverUartA
    stm32g0xx_mc_it.o(.ARM.exidx.text.USART2_IRQHandler) refers to stm32g0xx_mc_it.o(.text.USART2_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_mc_it.o(.text.HardFault_Handler) refers to mc_tasks.o(.text.TSK_HardwareFaultTask) for TSK_HardwareFaultTask
    stm32g0xx_mc_it.o(.ARM.exidx.text.HardFault_Handler) refers to stm32g0xx_mc_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    stm32g0xx_mc_it.o(.text.SysTick_Handler) refers to stm32g0xx_hal.o(.text.HAL_IncTick) for HAL_IncTick
    stm32g0xx_mc_it.o(.text.SysTick_Handler) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for HAL_SYSTICK_IRQHandler
    stm32g0xx_mc_it.o(.text.SysTick_Handler) refers to user_logic.o(.text.UI_Process) for UI_Process
    stm32g0xx_mc_it.o(.text.SysTick_Handler) refers to mc_tasks.o(.text.MC_RunMotorControlTasks) for MC_RunMotorControlTasks
    stm32g0xx_mc_it.o(.text.SysTick_Handler) refers to stm32g0xx_mc_it.o(.data.SysTick_Handler.SystickDividerCounter) for [Anonymous Symbol]
    stm32g0xx_mc_it.o(.text.SysTick_Handler) refers to stm32g0xx_mc_it.o(.bss.User_Logic_Handle_Counter) for User_Logic_Handle_Counter
    stm32g0xx_mc_it.o(.ARM.exidx.text.SysTick_Handler) refers to stm32g0xx_mc_it.o(.text.SysTick_Handler) for [Anonymous Symbol]
    stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler) refers to mc_tasks.o(.text.UI_HandleStartStopButton_cb) for UI_HandleStartStopButton_cb
    stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) for HAL_TIM_Base_Start_IT
    stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler) refers to main.o(.bss.htim17) for htim17
    stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler) refers to stm32g0xx_mc_it.o(.bss.rise_time) for rise_time
    stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler) refers to pwm_mode.o(.bss.timer17_updata_time) for timer17_updata_time
    stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler) refers to pwm_mode.o(.bss..L_MergedGlobals) for rise2_cnt
    stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler) refers to pwm_mode.o(.bss.rise1_cnt) for rise1_cnt
    stm32g0xx_mc_it.o(.ARM.exidx.text.EXTI4_15_IRQHandler) refers to stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler) for [Anonymous Symbol]
    mc_tasks.o(.text.MCboot) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init) for R3_1_Init
    mc_tasks.o(.text.MCboot) refers to aspep.o(.text.ASPEP_start) for ASPEP_start
    mc_tasks.o(.text.MCboot) refers to pid_regulator.o(.text.PID_HandleInit) for PID_HandleInit
    mc_tasks.o(.text.MCboot) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init) for STO_PLL_Init
    mc_tasks.o(.text.MCboot) refers to speed_torq_ctrl.o(.text.STC_Init) for STC_Init
    mc_tasks.o(.text.MCboot) refers to virtual_speed_sensor.o(.text.VSS_Init) for VSS_Init
    mc_tasks.o(.text.MCboot) refers to revup_ctrl.o(.text.RUC_Init) for RUC_Init
    mc_tasks.o(.text.MCboot) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_Init) for RVBS_Init
    mc_tasks.o(.text.MCboot) refers to ntc_temperature_sensor.o(.text.NTC_Init) for NTC_Init
    mc_tasks.o(.text.MCboot) refers to ramp_ext_mngr.o(.text.REMNG_Init) for REMNG_Init
    mc_tasks.o(.text.MCboot) refers to mc_tasks.o(.text.FOC_Clear) for FOC_Clear
    mc_tasks.o(.text.MCboot) refers to speed_torq_ctrl.o(.text.STC_GetDefaultIqdref) for STC_GetDefaultIqdref
    mc_tasks.o(.text.MCboot) refers to mc_interface.o(.text.MCI_Init) for MCI_Init
    mc_tasks.o(.text.MCboot) refers to mc_interface.o(.text.MCI_ExecSpeedRamp) for MCI_ExecSpeedRamp
    mc_tasks.o(.text.MCboot) refers to mc_app_hooks.o(.text.MC_APP_BootHook) for MC_APP_BootHook
    mc_tasks.o(.text.MCboot) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.PWM_Handle_M1) for PWM_Handle_M1
    mc_tasks.o(.text.MCboot) refers to mcp_config.o(.data.aspepOverUartA) for aspepOverUartA
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.PIDSpeedHandle_M1) for PIDSpeedHandle_M1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.STO_PLL_M1) for STO_PLL_M1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.pSTC) for pSTC
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.VirtualSpeedSensorM1) for VirtualSpeedSensorM1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.RevUpControlM1) for RevUpControlM1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.STO_M1) for STO_M1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.PIDIqHandle_M1) for PIDIqHandle_M1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.PIDIdHandle_M1) for PIDIdHandle_M1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.BusVoltageSensor_M1) for BusVoltageSensor_M1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.pMPM) for pMPM
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.TempSensor_M1) for TempSensor_M1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.data.RampExtMngrHFParamsM1) for RampExtMngrHFParamsM1
    mc_tasks.o(.text.MCboot) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.ARM.exidx.text.MCboot) refers to mc_tasks.o(.text.MCboot) for [Anonymous Symbol]
    mc_tasks.o(.text.FOC_Clear) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    mc_tasks.o(.text.FOC_Clear) refers to speed_torq_ctrl.o(.text.STC_Clear) for STC_Clear
    mc_tasks.o(.text.FOC_Clear) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM) for PWMC_SwitchOffPWM
    mc_tasks.o(.text.FOC_Clear) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.FOC_Clear) refers to mc_config.o(.data.pPIDIq) for pPIDIq
    mc_tasks.o(.text.FOC_Clear) refers to mc_config.o(.data.pPIDId) for pPIDId
    mc_tasks.o(.text.FOC_Clear) refers to mc_config.o(.data.pSTC) for pSTC
    mc_tasks.o(.ARM.exidx.text.FOC_Clear) refers to mc_tasks.o(.text.FOC_Clear) for [Anonymous Symbol]
    mc_tasks.o(.text.MC_RunMotorControlTasks) refers to mc_tasks.o(.text.MC_Scheduler) for MC_Scheduler
    mc_tasks.o(.text.MC_RunMotorControlTasks) refers to mc_tasks.o(.text.TSK_SafetyTask) for TSK_SafetyTask
    mc_tasks.o(.text.MC_RunMotorControlTasks) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.MC_RunMotorControlTasks) refers to mc_tasks.o(.text.MC_RunMotorControlTasks) for [Anonymous Symbol]
    mc_tasks.o(.text.MC_Scheduler) refers to mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) for TSK_MediumFrequencyTaskM1
    mc_tasks.o(.text.MC_Scheduler) refers to mc_app_hooks.o(.text.MC_APP_PostMediumFrequencyHook_M1) for MC_APP_PostMediumFrequencyHook_M1
    mc_tasks.o(.text.MC_Scheduler) refers to mcp.o(.text.MCP_ReceivedPacket) for MCP_ReceivedPacket
    mc_tasks.o(.text.MC_Scheduler) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.MC_Scheduler) refers to mcp_config.o(.data.MCP_Over_UartA) for MCP_Over_UartA
    mc_tasks.o(.ARM.exidx.text.MC_Scheduler) refers to mc_tasks.o(.text.MC_Scheduler) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_SafetyTask) refers to mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) for TSK_SafetyTask_PWMOFF
    mc_tasks.o(.text.TSK_SafetyTask) refers to regular_conversion_manager.o(.text.RCM_ExecUserConv) for RCM_ExecUserConv
    mc_tasks.o(.text.TSK_SafetyTask) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.TSK_SafetyTask) refers to mc_tasks.o(.text.TSK_SafetyTask) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for R3_1_SwitchOffPWM
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to mc_tasks.o(.text.FOC_Clear) for FOC_Clear
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to pqd_motor_power_measurement.o(.text.PQD_Clear) for PQD_Clear
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to mc_tasks.o(.text.TSK_SetStopPermanencyTimeM1) for TSK_SetStopPermanencyTimeM1
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to mc_config.o(.data.pMPM) for pMPM
    mc_tasks.o(.text.TSK_MF_StopProcessing) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.ARM.exidx.text.TSK_MF_StopProcessing) refers to mc_tasks.o(.text.TSK_MF_StopProcessing) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_SetStopPermanencyTimeM1) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.TSK_SetStopPermanencyTimeM1) refers to mc_tasks.o(.text.TSK_SetStopPermanencyTimeM1) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgMecSpeedUnit) for STO_PLL_CalcAvrgMecSpeedUnit
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to pqd_motor_power_measurement.o(.text.PQD_CalcElMotorPower) for PQD_CalcElMotorPower
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_interface.o(.text.MCI_GetCurrentFaults) for MCI_GetCurrentFaults
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_interface.o(.text.MCI_GetImposedMotorDirection) for MCI_GetImposedMotorDirection
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to revup_ctrl.o(.text.RUC_Clear) for RUC_Clear
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to pwm_curr_fdbk.o(.text.PWMC_CurrentReadingCalibr) for PWMC_CurrentReadingCalibr
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides) for R3_1_TurnOnLowSides
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.TSK_SetChargeBootCapDelayM1) for TSK_SetChargeBootCapDelayM1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.TSK_MF_StopProcessing) for TSK_MF_StopProcessing
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.TSK_StopPermanencyTimeHasElapsedM1) for TSK_StopPermanencyTimeHasElapsedM1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to speed_torq_ctrl.o(.text.STC_SetSpeedSensor) for STC_SetSpeedSensor
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to virtual_speed_sensor.o(.text.VSS_Clear) for VSS_Clear
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to revup_ctrl.o(.text.RUC_Exec) for RUC_Exec
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to speed_torq_ctrl.o(.text.STC_CalcTorqueReference) for STC_CalcTorqueReference
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_interface.o(.text.MCI_ExecBufferedCommands) for MCI_ExecBufferedCommands
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.FOC_CalcCurrRef) for FOC_CalcCurrRef
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_interface.o(.text.MCI_FaultProcessing) for MCI_FaultProcessing
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.TSK_ChargeBootCapDelayHasElapsedM1) for TSK_ChargeBootCapDelayHasElapsedM1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for R3_1_SwitchOffPWM
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Clear) for STO_PLL_Clear
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.FOC_Clear) for FOC_Clear
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOnPWM) for PWMC_SwitchOnPWM
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to pqd_motor_power_measurement.o(.text.PQD_Clear) for PQD_Clear
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to virtual_speed_sensor.o(.text.VSS_CalcAvrgMecSpeedUnit) for VSS_CalcAvrgMecSpeedUnit
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to virtual_speed_sensor.o(.text.VSS_TransitionEnded) for VSS_TransitionEnded
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to pid_regulator.o(.text.PID_GetKIDivisor) for PID_GetKIDivisor
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.FOC_InitAdditionalMethods) for FOC_InitAdditionalMethods
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to speed_torq_ctrl.o(.text.STC_ForceSpeedReferenceToCurrentSpeed) for STC_ForceSpeedReferenceToCurrentSpeed
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to revup_ctrl.o(.text.RUC_FirstAccelerationStageReached) for RUC_FirstAccelerationStageReached
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsObserverConverged) for STO_PLL_IsObserverConverged
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers (Weak) to sto_pll_speed_pos_fdbk.o(.text.STO_SetDirection) for STO_SetDirection
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to virtual_speed_sensor.o(.text.VSS_SetStartTransition) for VSS_SetStartTransition
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to speed_pos_fdbk.o(.text.SPD_GetElAngle) for SPD_GetElAngle
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_math.o(.text.MCM_Park) for MCM_Park
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to ramp_ext_mngr.o(.text.REMNG_Init) for REMNG_Init
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to ramp_ext_mngr.o(.text.REMNG_ExecRamp) for REMNG_ExecRamp
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.STO_PLL_M1) for STO_PLL_M1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to watch_data.o(.bss.watch_data) for watch_data
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.pMPM) for pMPM
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.pSTC) for pSTC
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.VirtualSpeedSensorM1) for VirtualSpeedSensorM1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.RevUpControlM1) for RevUpControlM1
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) refers to mc_config.o(.data.PIDSpeedHandle_M1) for PIDSpeedHandle_M1
    mc_tasks.o(.ARM.exidx.text.TSK_MediumFrequencyTaskM1) refers to mc_tasks.o(.text.TSK_MediumFrequencyTaskM1) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_SetChargeBootCapDelayM1) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.TSK_SetChargeBootCapDelayM1) refers to mc_tasks.o(.text.TSK_SetChargeBootCapDelayM1) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_ChargeBootCapDelayHasElapsedM1) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.TSK_ChargeBootCapDelayHasElapsedM1) refers to mc_tasks.o(.text.TSK_ChargeBootCapDelayHasElapsedM1) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.FOC_InitAdditionalMethods) refers to mc_tasks.o(.text.FOC_InitAdditionalMethods) for [Anonymous Symbol]
    mc_tasks.o(.text.FOC_CalcCurrRef) refers to speed_torq_ctrl.o(.text.STC_CalcTorqueReference) for STC_CalcTorqueReference
    mc_tasks.o(.text.FOC_CalcCurrRef) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.FOC_CalcCurrRef) refers to mc_config.o(.data.pSTC) for pSTC
    mc_tasks.o(.ARM.exidx.text.FOC_CalcCurrRef) refers to mc_tasks.o(.text.FOC_CalcCurrRef) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_StopPermanencyTimeHasElapsedM1) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.TSK_StopPermanencyTimeHasElapsedM1) refers to mc_tasks.o(.text.TSK_StopPermanencyTimeHasElapsedM1) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to ramp_ext_mngr.o(.text.REMNG_RampCompleted) for REMNG_RampCompleted
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to ramp_ext_mngr.o(.text.REMNG_Calc) for REMNG_Calc
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for STC_GetSpeedSensor
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to speed_pos_fdbk.o(.text.SPD_GetElAngle) for SPD_GetElAngle
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to speed_pos_fdbk.o(.text.SPD_GetInstElSpeedDpp) for SPD_GetInstElSpeedDpp
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to pwm_curr_fdbk.o(.text.PWMC_GetPhaseCurrents) for PWMC_GetPhaseCurrents
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to regular_conversion_manager.o(.text.RCM_ExecNextConv) for RCM_ExecNextConv
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_math.o(.text.MCM_Clarke) for MCM_Clarke
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_math.o(.text.MCM_Park) for MCM_Park
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to pid_regulator.o(.text.PI_Controller) for PI_Controller
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to circle_limitation.o(.text.Circle_Limitation) for Circle_Limitation
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_math.o(.text.MCM_Rev_Park) for MCM_Rev_Park
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to regular_conversion_manager.o(.text.RCM_ReadOngoingConv) for RCM_ReadOngoingConv
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to pwm_curr_fdbk.o(.text.PWMC_SetPhaseVoltage) for PWMC_SetPhaseVoltage
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to fflti.o(.text) for __aeabi_i2f
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_interface.o(.text.MCI_FaultProcessing) for MCI_FaultProcessing
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to revup_ctrl.o(.text.RUC_FirstAccelerationStageReached) for RUC_FirstAccelerationStageReached
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_d) for VBS_GetAvBusVoltage_d
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcElAngle) for STO_PLL_CalcElAngle
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgElSpeedDpp) for STO_PLL_CalcAvrgElSpeedDpp
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to sto_pll_speed_pos_fdbk.o(.text.STO_ResetPLL) for STO_ResetPLL
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to virtual_speed_sensor.o(.text.VSS_CalcElAngle) for VSS_CalcElAngle
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mcpa.o(.text.MCPA_dataLog) for MCPA_dataLog
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.pSTC) for pSTC
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.pPIDIq) for pPIDIq
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.pPIDId) for pPIDId
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.CircleLimitationM1) for CircleLimitationM1
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to watch_data.o(.bss.watch_data) for watch_data
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.RevUpControlM1) for RevUpControlM1
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.BusVoltageSensor_M1) for BusVoltageSensor_M1
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.STO_PLL_M1) for STO_PLL_M1
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mc_config.o(.data.VirtualSpeedSensorM1) for VirtualSpeedSensorM1
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mcpa.o(.bss.GLOBAL_TIMESTAMP) for GLOBAL_TIMESTAMP
    mc_tasks.o(.text.TSK_HighFrequencyTask) refers to mcp_config.o(.data.MCPA_UART_A) for MCPA_UART_A
    mc_tasks.o(.ARM.exidx.text.TSK_HighFrequencyTask) refers to mc_tasks.o(.text.TSK_HighFrequencyTask) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to ntc_temperature_sensor.o(.text.NTC_CalcAvTemp) for NTC_CalcAvTemp
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to pwm_curr_fdbk.o(.text.PWMC_CheckOverCurrent) for PWMC_CheckOverCurrent
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus) for RVBS_CalcAvVbus
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_interface.o(.text.MCI_FaultProcessing) for MCI_FaultProcessing
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_interface.o(.text.MCI_GetFaultState) for MCI_GetFaultState
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM) for PWMC_SwitchOffPWM
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mcpa.o(.text.MCPA_flushDataLog) for MCPA_flushDataLog
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_tasks.o(.text.FOC_Clear) for FOC_Clear
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to pqd_motor_power_measurement.o(.text.PQD_Clear) for PQD_Clear
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_config.o(.data.pTemperatureSensor) for pTemperatureSensor
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_config.o(.data.BusVoltageSensor_M1) for BusVoltageSensor_M1
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mcp_config.o(.data.MCPA_UART_A) for MCPA_UART_A
    mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) refers to mc_config.o(.data.pMPM) for pMPM
    mc_tasks.o(.ARM.exidx.text.TSK_SafetyTask_PWMOFF) refers to mc_tasks.o(.text.TSK_SafetyTask_PWMOFF) for [Anonymous Symbol]
    mc_tasks.o(.text.GetMCI) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.ARM.exidx.text.GetMCI) refers to mc_tasks.o(.text.GetMCI) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_HardwareFaultTask) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for R3_1_SwitchOffPWM
    mc_tasks.o(.text.TSK_HardwareFaultTask) refers to mc_interface.o(.text.MCI_FaultProcessing) for MCI_FaultProcessing
    mc_tasks.o(.text.TSK_HardwareFaultTask) refers to mc_tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    mc_tasks.o(.text.TSK_HardwareFaultTask) refers to mc_config.o(.bss.Mci) for Mci
    mc_tasks.o(.ARM.exidx.text.TSK_HardwareFaultTask) refers to mc_tasks.o(.text.TSK_HardwareFaultTask) for [Anonymous Symbol]
    mc_tasks.o(.text.UI_HandleStartStopButton_cb) refers to mc_api.o(.text.MC_GetSTMStateMotor1) for MC_GetSTMStateMotor1
    mc_tasks.o(.text.UI_HandleStartStopButton_cb) refers to mc_api.o(.text.MC_StopMotor1) for MC_StopMotor1
    mc_tasks.o(.text.UI_HandleStartStopButton_cb) refers to mc_api.o(.text.MC_StartMotor1) for MC_StartMotor1
    mc_tasks.o(.ARM.exidx.text.UI_HandleStartStopButton_cb) refers to mc_tasks.o(.text.UI_HandleStartStopButton_cb) for [Anonymous Symbol]
    mc_tasks.o(.ARM.exidx.text.mc_lock_pins) refers to mc_tasks.o(.text.mc_lock_pins) for [Anonymous Symbol]
    mc_parameters.o(.rodata.R3_1_Params) refers to mc_config.o(.data.PWM_Handle_M1) for PWM_Handle_M1
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_interface.o(.text.MCI_GetTeref) for MCI_GetTeref
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_interface.o(.text.MCI_ExecTorqueRamp) for MCI_ExecTorqueRamp
    register_interface.o(.text.RI_SetRegCommandParser) refers to pid_regulator.o(.text.PID_SetKD) for PID_SetKD
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_interface.o(.text.MCI_ExecSpeedRamp) for MCI_ExecSpeedRamp
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_config.o(.bss.Mci) for Mci
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_config.o(.data.PIDSpeedHandle_M1) for PIDSpeedHandle_M1
    register_interface.o(.text.RI_SetRegCommandParser) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_interface.o(.text.MCI_GetMecSpeedRefUnit) for MCI_GetMecSpeedRefUnit
    register_interface.o(.text.RI_SetRegCommandParser) refers to pid_regulator.o(.text.PID_SetKDDivisorPOW2) for PID_SetKDDivisorPOW2
    register_interface.o(.text.RI_SetRegCommandParser) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObserverGains) for STO_PLL_GetObserverGains
    register_interface.o(.text.RI_SetRegCommandParser) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_SetObserverGains) for STO_PLL_SetObserverGains
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_interface.o(.text.MCI_GetIqdref) for MCI_GetIqdref
    register_interface.o(.text.RI_SetRegCommandParser) refers to revup_ctrl.o(.text.RUC_SetPhase) for RUC_SetPhase
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_interface.o(.text.MCI_SetCurrentReferences) for MCI_SetCurrentReferences
    register_interface.o(.text.RI_SetRegCommandParser) refers to mcpa.o(.text.MCPA_cfgLog) for MCPA_cfgLog
    register_interface.o(.text.RI_SetRegCommandParser) refers to pid_regulator.o(.text.PID_SetKP) for PID_SetKP
    register_interface.o(.text.RI_SetRegCommandParser) refers to pid_regulator.o(.text.PID_SetKI) for PID_SetKI
    register_interface.o(.text.RI_SetRegCommandParser) refers to pid_regulator.o(.text.PID_SetKIDivisorPOW2) for PID_SetKIDivisorPOW2
    register_interface.o(.text.RI_SetRegCommandParser) refers to pid_regulator.o(.text.PID_SetKPDivisorPOW2) for PID_SetKPDivisorPOW2
    register_interface.o(.text.RI_SetRegCommandParser) refers to mcp_config.o(.data.MCPA_UART_A) for MCPA_UART_A
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_config.o(.data.RevUpControlM1) for RevUpControlM1
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_config.o(.data.STO_PLL_M1) for STO_PLL_M1
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_config.o(.data.pPIDIq) for pPIDIq
    register_interface.o(.text.RI_SetRegCommandParser) refers to mc_config.o(.data.pPIDId) for pPIDId
    register_interface.o(.ARM.exidx.text.RI_SetRegCommandParser) refers to register_interface.o(.text.RI_SetRegCommandParser) for [Anonymous Symbol]
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetIab) for MCI_GetIab
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetMecSpeedRefUnit) for MCI_GetMecSpeedRefUnit
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.bss.Mci) for Mci
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.data.PIDSpeedHandle_M1) for PIDSpeedHandle_M1
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_configuration_registers.o(.rodata.FIRMWARE_NAME) for FIRMWARE_NAME
    register_interface.o(.text.RI_GetRegCommandParser) refers to pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW) for PQD_GetAvrgElMotorPowerW
    register_interface.o(.text.RI_GetRegCommandParser) refers to revup_ctrl.o(.text.RUC_GetNumberOfPhases) for RUC_GetNumberOfPhases
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetControlMode) for MCI_GetControlMode
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetFaultState) for MCI_GetFaultState
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit) for MCI_GetAvrgMecSpeedUnit
    register_interface.o(.text.RI_GetRegCommandParser) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedBemfLevel) for STO_PLL_GetEstimatedBemfLevel
    register_interface.o(.text.RI_GetRegCommandParser) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObservedBemfLevel) for STO_PLL_GetObservedBemfLevel
    register_interface.o(.text.RI_GetRegCommandParser) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetLastRampFinalSpeed) for MCI_GetLastRampFinalSpeed
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetLastRampFinalDuration) for MCI_GetLastRampFinalDuration
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetLastRampFinalTorque) for MCI_GetLastRampFinalTorque
    register_interface.o(.text.RI_GetRegCommandParser) refers to revup_ctrl.o(.text.RUC_GetPhase) for RUC_GetPhase
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetIqdref) for MCI_GetIqdref
    register_interface.o(.text.RI_GetRegCommandParser) refers to pid_regulator.o(.text.PID_GetKD) for PID_GetKD
    register_interface.o(.text.RI_GetRegCommandParser) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObserverGains) for STO_PLL_GetObserverGains
    register_interface.o(.text.RI_GetRegCommandParser) refers to pid_regulator.o(.text.PID_GetKI) for PID_GetKI
    register_interface.o(.text.RI_GetRegCommandParser) refers to pid_regulator.o(.text.PID_GetKP) for PID_GetKP
    register_interface.o(.text.RI_GetRegCommandParser) refers to bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_V) for VBS_GetAvBusVoltage_V
    register_interface.o(.text.RI_GetRegCommandParser) refers to ntc_temperature_sensor.o(.text.NTC_GetAvTemp_C) for NTC_GetAvTemp_C
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetIalphabeta) for MCI_GetIalphabeta
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_configuration_registers.o(.rodata.globalConfig_reg) for globalConfig_reg
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.data.pMPM) for pMPM
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.data.RevUpControlM1) for RevUpControlM1
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_configuration_registers.o(.rodata.CTL_BOARD) for CTL_BOARD
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetIqd) for MCI_GetIqd
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetVqd) for MCI_GetVqd
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_configuration_registers.o(.data.PWR_BOARD_NAME) for PWR_BOARD_NAME
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_interface.o(.text.MCI_GetValphabeta) for MCI_GetValphabeta
    register_interface.o(.text.RI_GetRegCommandParser) refers to speed_pos_fdbk.o(.text.SPD_GetElAngle) for SPD_GetElAngle
    register_interface.o(.text.RI_GetRegCommandParser) refers to speed_pos_fdbk.o(.text.SPD_GetS16Speed) for SPD_GetS16Speed
    register_interface.o(.text.RI_GetRegCommandParser) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedCurrent) for STO_PLL_GetEstimatedCurrent
    register_interface.o(.text.RI_GetRegCommandParser) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedBemf) for STO_PLL_GetEstimatedBemf
    register_interface.o(.text.RI_GetRegCommandParser) refers to pid_regulator.o(.text.PID_GetKDDivisorPOW2) for PID_GetKDDivisorPOW2
    register_interface.o(.text.RI_GetRegCommandParser) refers to pid_regulator.o(.text.PID_GetKIDivisorPOW2) for PID_GetKIDivisorPOW2
    register_interface.o(.text.RI_GetRegCommandParser) refers to pid_regulator.o(.text.PID_GetKPDivisorPOW2) for PID_GetKPDivisorPOW2
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_configuration_registers.o(.data.MotorConfig_reg) for MotorConfig_reg
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_configuration_registers.o(.data.FOCConfig_reg) for FOCConfig_reg
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_configuration_registers.o(.data.ApplicationConfig_reg) for ApplicationConfig_reg
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.data.STO_PLL_M1) for STO_PLL_M1
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.data.pPIDIq) for pPIDIq
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.data.pPIDId) for pPIDId
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.data.pTemperatureSensor) for pTemperatureSensor
    register_interface.o(.text.RI_GetRegCommandParser) refers to mc_config.o(.data.BusVoltageSensor_M1) for BusVoltageSensor_M1
    register_interface.o(.ARM.exidx.text.RI_GetRegCommandParser) refers to register_interface.o(.text.RI_GetRegCommandParser) for [Anonymous Symbol]
    register_interface.o(.ARM.exidx.text.RI_GetIDSize) refers to register_interface.o(.text.RI_GetIDSize) for [Anonymous Symbol]
    register_interface.o(.text.RI_GetPtrReg) refers to register_interface.o(.bss.RI_GetPtrReg.nullData16) for [Anonymous Symbol]
    register_interface.o(.text.RI_GetPtrReg) refers to mc_config.o(.data.STO_PLL_M1) for STO_PLL_M1
    register_interface.o(.text.RI_GetPtrReg) refers to mc_config.o(.bss.Mci) for Mci
    register_interface.o(.ARM.exidx.text.RI_GetPtrReg) refers to register_interface.o(.text.RI_GetPtrReg) for [Anonymous Symbol]
    usart_aspep_driver.o(.text.UASPEP_INIT) refers to usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_INIT) refers to usart_aspep_driver.o(.text.UASPEP_INIT) for [Anonymous Symbol]
    usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_TX) refers to usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_DAMCONFIG_TX) refers to usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_TX) for [Anonymous Symbol]
    usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_RX) refers to usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_DAMCONFIG_RX) refers to usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_RX) for [Anonymous Symbol]
    usart_aspep_driver.o(.text.UASPEP_SEND_PACKET) refers to usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_SEND_PACKET) refers to usart_aspep_driver.o(.text.UASPEP_SEND_PACKET) for [Anonymous Symbol]
    usart_aspep_driver.o(.text.UASPEP_RECEIVE_BUFFER) refers to usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_RECEIVE_BUFFER) refers to usart_aspep_driver.o(.text.UASPEP_RECEIVE_BUFFER) for [Anonymous Symbol]
    usart_aspep_driver.o(.ARM.exidx.text.UASPEP_IDLE_ENABLE) refers to usart_aspep_driver.o(.text.UASPEP_IDLE_ENABLE) for [Anonymous Symbol]
    mc_configuration_registers.o(.data.PWR_BOARD_NAME) refers to mc_configuration_registers.o(.rodata.M1_PWR_BOARD) for [Anonymous Symbol]
    mc_configuration_registers.o(.data.FOCConfig_reg) refers to mc_configuration_registers.o(.rodata.M1_FOCConfig_reg) for [Anonymous Symbol]
    mc_configuration_registers.o(.data.MotorConfig_reg) refers to mc_configuration_registers.o(.rodata.M1_MotorConfig_reg) for M1_MotorConfig_reg
    mc_configuration_registers.o(.data.ApplicationConfig_reg) refers to mc_configuration_registers.o(.rodata.M1_ApplicationConfig_reg) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_start) refers to aspep.o(.text.ASPEP_start) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_sendBeacon) refers to aspep.o(.rodata.CRC4_Lookup8) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_sendBeacon) refers to aspep.o(.rodata.cst16) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_sendBeacon) refers to aspep.o(.text.ASPEP_sendBeacon) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_TXframeProcess) refers to aspep.o(.rodata.CRC4_Lookup8) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_TXframeProcess) refers to aspep.o(.rodata.cst16) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_TXframeProcess) refers to aspep.o(.text.ASPEP_TXframeProcess) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_sendPing) refers to aspep.o(.rodata.CRC4_Lookup8) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_sendPing) refers to aspep.o(.rodata.cst16) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_sendPing) refers to aspep.o(.text.ASPEP_sendPing) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_getBuffer) refers to aspep.o(.text.ASPEP_getBuffer) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_CheckBeacon) refers to aspep.o(.text.ASPEP_CheckBeacon) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_sendPacket) refers to aspep.o(.text.ASPEP_TXframeProcess) for ASPEP_TXframeProcess
    aspep.o(.ARM.exidx.text.ASPEP_sendPacket) refers to aspep.o(.text.ASPEP_sendPacket) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_HWDataTransmittedIT) refers to aspep.o(.text.ASPEP_HWDataTransmittedIT) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_RXframeProcess) refers to aspep.o(.rodata.CRC4_Lookup8) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_RXframeProcess) refers to aspep.o(.rodata.cst16) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_RXframeProcess) refers to aspep.o(.text.ASPEP_RXframeProcess) for [Anonymous Symbol]
    aspep.o(.text.ASPEP_HWDataReceivedIT) refers to aspep.o(.rodata.CRC4_Lookup8) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_HWDataReceivedIT) refers to aspep.o(.text.ASPEP_HWDataReceivedIT) for [Anonymous Symbol]
    aspep.o(.ARM.exidx.text.ASPEP_HWDMAReset) refers to aspep.o(.text.ASPEP_HWDMAReset) for [Anonymous Symbol]
    mc_app_hooks.o(.ARM.exidx.text.MC_APP_BootHook) refers to mc_app_hooks.o(.text.MC_APP_BootHook) for [Anonymous Symbol]
    mc_app_hooks.o(.ARM.exidx.text.MC_APP_PostMediumFrequencyHook_M1) refers to mc_app_hooks.o(.text.MC_APP_PostMediumFrequencyHook_M1) for [Anonymous Symbol]
    stm32g0xx_it.o(.ARM.exidx.text.NMI_Handler) refers to stm32g0xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    stm32g0xx_it.o(.ARM.exidx.text.SVC_Handler) refers to stm32g0xx_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    stm32g0xx_it.o(.ARM.exidx.text.PendSV_Handler) refers to stm32g0xx_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    stm32g0xx_it.o(.text.TIM14_IRQHandler) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for HAL_TIM_IRQHandler
    stm32g0xx_it.o(.text.TIM14_IRQHandler) refers to main.o(.bss.htim14) for htim14
    stm32g0xx_it.o(.ARM.exidx.text.TIM14_IRQHandler) refers to stm32g0xx_it.o(.text.TIM14_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_it.o(.text.TIM17_IRQHandler) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for HAL_TIM_IRQHandler
    stm32g0xx_it.o(.text.TIM17_IRQHandler) refers to main.o(.bss.htim17) for htim17
    stm32g0xx_it.o(.ARM.exidx.text.TIM17_IRQHandler) refers to stm32g0xx_it.o(.text.TIM17_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit) refers to stm32g0xx_hal_msp.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspInit) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspInit) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    stm32g0xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_Base_MspInit) refers to stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspDeInit) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for HAL_NVIC_DisableIRQ
    stm32g0xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit) refers to stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspDeInit) for [Anonymous Symbol]
    user_logic.o(.text.UART_Emulator_Debug) refers to dflti.o(.text) for __aeabi_i2d
    user_logic.o(.text.UART_Emulator_Debug) refers to ddiv.o(.text) for __aeabi_ddiv
    user_logic.o(.text.UART_Emulator_Debug) refers to dfixi.o(.text) for __aeabi_d2iz
    user_logic.o(.text.UART_Emulator_Debug) refers to mc_api.o(.text.MC_GetMecSpeedReferenceMotor1) for MC_GetMecSpeedReferenceMotor1
    user_logic.o(.text.UART_Emulator_Debug) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    user_logic.o(.text.UART_Emulator_Debug) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for MC_ProgramSpeedRampMotor1
    user_logic.o(.text.UART_Emulator_Debug) refers to user_logic.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    user_logic.o(.text.UART_Emulator_Debug) refers to user_logic.o(.data.Acc_M1) for Acc_M1
    user_logic.o(.ARM.exidx.text.UART_Emulator_Debug) refers to user_logic.o(.text.UART_Emulator_Debug) for [Anonymous Symbol]
    user_logic.o(.text.User_Motor_Control_M1) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    user_logic.o(.text.User_Motor_Control_M1) refers to mc_interface.o(.text.MCI_GetLastRampFinalSpeed) for MCI_GetLastRampFinalSpeed
    user_logic.o(.text.User_Motor_Control_M1) refers to mc_interface.o(.text.MCI_GetOccurredFaults) for MCI_GetOccurredFaults
    user_logic.o(.text.User_Motor_Control_M1) refers to mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit) for MCI_GetAvrgMecSpeedUnit
    user_logic.o(.text.User_Motor_Control_M1) refers to mc_api.o(.text.MC_StartMotor1) for MC_StartMotor1
    user_logic.o(.text.User_Motor_Control_M1) refers to mc_api.o(.text.MC_AcknowledgeFaultMotor1) for MC_AcknowledgeFaultMotor1
    user_logic.o(.text.User_Motor_Control_M1) refers to mc_api.o(.text.MC_StopMotor1) for MC_StopMotor1
    user_logic.o(.text.User_Motor_Control_M1) refers to motorcontrol.o(.bss.pMCI) for pMCI
    user_logic.o(.text.User_Motor_Control_M1) refers to user_logic.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    user_logic.o(.ARM.exidx.text.User_Motor_Control_M1) refers to user_logic.o(.text.User_Motor_Control_M1) for [Anonymous Symbol]
    user_logic.o(.text.UI_Process) refers to dflti.o(.text) for __aeabi_i2d
    user_logic.o(.text.UI_Process) refers to ddiv.o(.text) for __aeabi_ddiv
    user_logic.o(.text.UI_Process) refers to dfixi.o(.text) for __aeabi_d2iz
    user_logic.o(.text.UI_Process) refers to mc_api.o(.text.MC_GetMecSpeedReferenceMotor1) for MC_GetMecSpeedReferenceMotor1
    user_logic.o(.text.UI_Process) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    user_logic.o(.text.UI_Process) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for MC_ProgramSpeedRampMotor1
    user_logic.o(.text.UI_Process) refers to user_logic.o(.text.User_Motor_Control_M1) for User_Motor_Control_M1
    user_logic.o(.text.UI_Process) refers to user_logic.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    user_logic.o(.text.UI_Process) refers to user_logic.o(.data.Acc_M1) for Acc_M1
    user_logic.o(.ARM.exidx.text.UI_Process) refers to user_logic.o(.text.UI_Process) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.LL_Init1msTick) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick) refers to stm32g0xx_ll_utils.o(.text.LL_Init1msTick) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_mDelay) refers to stm32g0xx_ll_utils.o(.text.LL_mDelay) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock) refers to stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32g0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency) refers to stm32g0xx_ll_utils.o(.text.LL_SetFlashLatency) for [Anonymous Symbol]
    stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DeInit) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_Init) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_Init) for [Anonymous Symbol]
    stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_StructInit) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_DeInit) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_Init) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init) for [Anonymous Symbol]
    stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_StructInit) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonDeInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_CommonDeInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_CommonInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonStructInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_CommonStructInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_DeInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_Init) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_Init) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_StructInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_Init) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_StructInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_REG_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_DeInit) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_Init) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_Init) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.text.LL_DMA_StructInit) refers to rt_memclr.o(.text) for __aeabi_memclr4
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_StructInit) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to system_stm32g0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to system_stm32g0xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to system_stm32g0xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to system_stm32g0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to system_stm32g0xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to system_stm32g0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2SClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRTCClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetRTCClockFreq) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for uwTickPrio
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for uwTickPrio
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32g0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for uwTickPrio
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32g0xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableLSECSS) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_EnableLSECSS) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableLSECSS) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_DisableLSECSS) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32g0xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_LSECSSCallback) for HAL_RCC_LSECSSCallback
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_LSECSSCallback) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_LSECSSCallback) for [Anonymous Symbol]
    stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetResetSource) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetResetSource) for [Anonymous Symbol]
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for HAL_PWR_EnableBkUpAccess
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for HAL_PWR_DisableBkUpAccess
    stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSCO) refers to stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO) for [Anonymous Symbol]
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for HAL_PWR_EnableBkUpAccess
    stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for HAL_PWR_DisableBkUpAccess
    stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableLSCO) refers to stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_Program) refers to stm32g0xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_Program) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_flash.o(.text.FLASH_WaitForLastOperation) refers to stm32g0xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32g0xx_hal_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation) refers to stm32g0xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_Program_IT) refers to stm32g0xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program_IT) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_Program_IT) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback) for HAL_FLASH_OperationErrorCallback
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32g0xx_hal_flash_ex.o(.text.FLASH_PageErase) for FLASH_PageErase
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback) for HAL_FLASH_EndOfOperationCallback
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) refers to stm32g0xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_IRQHandler) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OperationErrorCallback) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_EndOfOperationCallback) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Unlock) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_Unlock) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Lock) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_Lock) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Unlock) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_OB_Unlock) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Lock) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_OB_Lock) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Launch) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_OB_Launch) for [Anonymous Symbol]
    stm32g0xx_hal_flash.o(.text.HAL_FLASH_GetError) refers to stm32g0xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_GetError) refers to stm32g0xx_hal_flash.o(.text.HAL_FLASH_GetError) for [Anonymous Symbol]
    stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32g0xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) refers to stm32g0xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase) refers to stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase) for [Anonymous Symbol]
    stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_PageErase) refers to stm32g0xx_hal_flash_ex.o(.text.FLASH_PageErase) for [Anonymous Symbol]
    stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32g0xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) refers to stm32g0xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase_IT) refers to stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT) for [Anonymous Symbol]
    stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32g0xx_hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) refers to stm32g0xx_hal_flash.o(.bss.pFlash) for pFlash
    stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBProgram) refers to stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram) for [Anonymous Symbol]
    stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBGetConfig) refers to stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig) for [Anonymous Symbol]
    stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_FlashEmptyCheck) refers to stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_FlashEmptyCheck) for [Anonymous Symbol]
    stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_ForceFlashEmpty) refers to stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_ForceFlashEmpty) for [Anonymous Symbol]
    stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_FlushCaches) refers to stm32g0xx_hal_flash_ex.o(.text.FLASH_FlushCaches) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Rising_Callback) for HAL_GPIO_EXTI_Rising_Callback
    stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Falling_Callback) for HAL_GPIO_EXTI_Falling_Callback
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Rising_Callback) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Rising_Callback) for [Anonymous Symbol]
    stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Falling_Callback) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Falling_Callback) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.text.HAL_DMA_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Init) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.text.HAL_DMA_DeInit) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_RegisterCallback) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_GetState) for [Anonymous Symbol]
    stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_GetError) for [Anonymous Symbol]
    stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ConfigMuxSync) refers to stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxSync) for [Anonymous Symbol]
    stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ConfigMuxRequestGenerator) refers to stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxRequestGenerator) for [Anonymous Symbol]
    stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_EnableMuxRequestGenerator) refers to stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_EnableMuxRequestGenerator) for [Anonymous Symbol]
    stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_DisableMuxRequestGenerator) refers to stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_DisableMuxRequestGenerator) for [Anonymous Symbol]
    stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MUX_IRQHandler) refers to stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_MUX_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowPowerRunMode) for HAL_PWREx_EnableLowPowerRunMode
    stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode) for HAL_PWREx_DisableLowPowerRunMode
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBatteryCharging) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBatteryCharging) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBatteryCharging) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBatteryCharging) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableInternalWakeUpLine) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableInternalWakeUpLine) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableInternalWakeUpLine) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableInternalWakeUpLine) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullUp) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableGPIOPullUp) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullUp) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableGPIOPullUp) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullDown) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableGPIOPullDown) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullDown) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableGPIOPullDown) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePullUpPullDownConfig) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePullUpPullDownConfig) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePullUpPullDownConfig) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePullUpPullDownConfig) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowPowerRunMode) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowPowerRunMode) for [Anonymous Symbol]
    stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowPowerRunMode) refers to stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32g0xx_hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32g0xx_hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32g0xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_Init) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32g0xx_hal.o(.text.HAL_Init) refers to stm32g0xx_hal_msp.o(.text.HAL_MspInit) for HAL_MspInit
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_Init) refers to stm32g0xx_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_InitTick) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_hal.o(.text.HAL_InitTick) refers to stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32g0xx_hal.o(.text.HAL_InitTick) refers to stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32g0xx_hal.o(.text.HAL_InitTick) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_InitTick) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_InitTick) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_MspInit) refers to stm32g0xx_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_DeInit) refers to stm32g0xx_hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_DeInit) refers to stm32g0xx_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32g0xx_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_IncTick) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_IncTick) refers to stm32g0xx_hal.o(.bss.uwTick) for uwTick
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_IncTick) refers to stm32g0xx_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_GetTick) refers to stm32g0xx_hal.o(.bss.uwTick) for uwTick
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTick) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_GetTickPrio) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32g0xx_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_SetTickFreq) refers to stm32g0xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32g0xx_hal.o(.text.HAL_SetTickFreq) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32g0xx_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_GetTickFreq) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32g0xx_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32g0xx_hal.o(.text.HAL_Delay) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal.o(.text.HAL_Delay) refers to stm32g0xx_hal.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_Delay) refers to stm32g0xx_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32g0xx_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32g0xx_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32g0xx_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32g0xx_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32g0xx_hal.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32g0xx_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32g0xx_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32g0xx_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32g0xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32g0xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32g0xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32g0xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableRemap) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableRemap) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableRemap) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableRemap) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableClampingDiode) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableClampingDiode) for [Anonymous Symbol]
    stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableClampingDiode) refers to stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableClampingDiode) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_SetConfigLine) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_SetConfigLine) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetConfigLine) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetConfigLine) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearConfigLine) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_ClearConfigLine) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_RegisterCallback) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_RegisterCallback) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetHandle) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetHandle) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_IRQHandler) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetPending) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetPending) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearPending) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_ClearPending) for [Anonymous Symbol]
    stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GenerateSWI) refers to stm32g0xx_hal_exti.o(.text.HAL_EXTI_GenerateSWI) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init) refers to stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspInit) for HAL_TIM_Base_MspInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_Base_SetConfig) refers to stm32g0xx_hal_tim.o(.text.TIM_Base_SetConfig) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) refers to stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspDeInit) for HAL_TIM_Base_MspDeInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) refers to pwm_mode.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for HAL_TIM_PeriodElapsedHalfCpltCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMAError) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for HAL_TIM_OC_MspInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Init) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for HAL_TIM_OC_MspDeInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_CCxChannelCmd) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) refers to stm32g0xx_hal_tim.o(.rodata.cst16) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) refers to stm32g0xx_hal_tim.o(.rodata.cst16) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for HAL_TIM_PWM_PulseFinishedHalfCpltCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit) for HAL_TIM_PWM_MspInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Init) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit) for HAL_TIM_PWM_MspDeInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) refers to stm32g0xx_hal_tim.o(.rodata.cst16) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) refers to stm32g0xx_hal_tim.o(.rodata.cst16) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for HAL_TIM_IC_MspInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Init) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for HAL_TIM_IC_MspDeInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) refers to stm32g0xx_hal_tim.o(.rodata.cst16) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) refers to stm32g0xx_hal_tim.o(.rodata.cst16) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMACaptureCplt) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for HAL_TIM_IC_CaptureHalfCpltCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for HAL_TIM_OnePulse_MspInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for HAL_TIM_OnePulse_MspDeInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for HAL_TIM_Encoder_MspInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Init) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for HAL_TIM_Encoder_MspDeInit
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for HAL_TIM_IC_CaptureCallback
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for HAL_TIM_OC_DelayElapsedCallback
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to pwm_mode.o(.text.HAL_TIM_PeriodElapsedCallback) for HAL_TIM_PeriodElapsedCallback
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback) for HAL_TIMEx_BreakCallback
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback) for HAL_TIMEx_Break2Callback
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_OC2_SetConfig) refers to stm32g0xx_hal_tim.o(.text.TIM_OC2_SetConfig) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_SetConfig) refers to stm32g0xx_hal_tim.o(.text.TIM_TI1_SetConfig) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for HAL_TIM_DMABurst_MultiWriteStart
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseCplt) for TIM_DMADelayPulseCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMATriggerCplt) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_TriggerCallback) for HAL_TIM_TriggerCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt) refers to stm32g0xx_hal_tim.o(.text.TIM_DMATriggerCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for HAL_TIM_TriggerHalfCpltCallback
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt) refers to stm32g0xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) for HAL_TIM_DMABurst_MultiReadStart
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMATriggerCplt) for TIM_DMATriggerCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt) for TIM_DMATriggerHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt) for TIM_DMAPeriodElapsedCplt
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt) for TIM_DMAPeriodElapsedHalfCplt
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_GenerateEvent) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_ETR_SetConfig) refers to stm32g0xx_hal_tim.o(.text.TIM_ETR_SetConfig) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) refers to stm32g0xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig) refers to stm32g0xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32g0xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig) for TIM_SlaveTimer_SetConfig
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_GetState) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_GetState) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_GetState) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_GetState) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_GetActiveChannel) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetChannelState) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_GetChannelState) for [Anonymous Symbol]
    stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurstState) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurstState) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit) for HAL_TIMEx_HallSensor_MspInit
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32g0xx_hal_tim.o(.text.TIM_Base_SetConfig) for TIM_Base_SetConfig
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32g0xx_hal_tim.o(.text.TIM_TI1_SetConfig) for TIM_TI1_SetConfig
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) refers to stm32g0xx_hal_tim.o(.text.TIM_OC2_SetConfig) for TIM_OC2_SetConfig
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for HAL_TIMEx_HallSensor_MspDeInit
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureCplt) for TIM_DMACaptureCplt
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt) for TIM_DMACaptureHalfCplt
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for TIM_DMADelayPulseNCplt
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for TIM_DMAErrorCCxN
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback) for HAL_TIM_PWM_PulseFinishedCallback
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMADelayPulseNCplt) refers to stm32g0xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_ErrorCallback) for HAL_TIM_ErrorCallback
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMAErrorCCxN) refers to stm32g0xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt) for TIM_DMADelayPulseNCplt
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt) for TIM_DMADelayPulseHalfCplt
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN) for TIM_DMAErrorCCxN
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd) for TIM_CCxChannelCmd
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for TIMEx_DMACommutationCplt
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for TIMEx_DMACommutationHalfCplt
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32g0xx_hal_tim.o(.text.TIM_DMAError) for TIM_DMAError
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for HAL_TIMEx_CommutCallback
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationCplt) refers to stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for HAL_TIMEx_CommutHalfCpltCallback
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt) refers to stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakInput) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakInput) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_TISelection) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_TISelection) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GroupChannel5) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_GroupChannel5) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_DisarmBreakInput) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_DisarmBreakInput) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ReArmBreakInput) refers to stm32g0xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ReArmBreakInput) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ReArmBreakInput) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_Break2Callback) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_GetState) for [Anonymous Symbol]
    stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GetChannelNState) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_GetChannelNState) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_DeInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_Init) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_IC_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_IC_Init) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_ENCODER_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_ENCODER_Init) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_StructInit) refers to rt_memclr.o(.text) for __aeabi_memclr
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init) for [Anonymous Symbol]
    stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_DeInit) refers to stm32g0xx_ll_usart.o(.text.LL_USART_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_usart.o(.text.LL_USART_Init) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) for LL_RCC_GetUSARTClockFreq
    stm32g0xx_ll_usart.o(.text.LL_USART_Init) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for LL_RCC_GetSystemClocksFreq
    stm32g0xx_ll_usart.o(.text.LL_USART_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_Init) refers to stm32g0xx_ll_usart.o(.text.LL_USART_Init) for [Anonymous Symbol]
    stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_StructInit) refers to stm32g0xx_ll_usart.o(.text.LL_USART_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockInit) refers to stm32g0xx_ll_usart.o(.text.LL_USART_ClockInit) for [Anonymous Symbol]
    stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockStructInit) refers to stm32g0xx_ll_usart.o(.text.LL_USART_ClockStructInit) for [Anonymous Symbol]
    system_stm32g0xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32g0xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32g0xx.o(.text.SystemCoreClockUpdate) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    system_stm32g0xx.o(.text.SystemCoreClockUpdate) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32g0xx.o(.text.SystemCoreClockUpdate) refers to system_stm32g0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32g0xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32g0xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetBusVoltage_d) refers to bus_voltage_sensor.o(.text.VBS_GetBusVoltage_d) for [Anonymous Symbol]
    bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetAvBusVoltage_d) refers to bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_d) for [Anonymous Symbol]
    bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetAvBusVoltage_V) refers to bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_V) for [Anonymous Symbol]
    bus_voltage_sensor.o(.ARM.exidx.text.VBS_CheckVbus) refers to bus_voltage_sensor.o(.text.VBS_CheckVbus) for [Anonymous Symbol]
    circle_limitation.o(.text.Circle_Limitation) refers to watch_data.o(.bss.watch_data) for watch_data
    circle_limitation.o(.text.Circle_Limitation) refers to circle_limitation.o(.rodata.SqrtTable) for SqrtTable
    circle_limitation.o(.ARM.exidx.text.Circle_Limitation) refers to circle_limitation.o(.text.Circle_Limitation) for [Anonymous Symbol]
    digital_output.o(.ARM.exidx.text.DOUT_SetOutputState) refers to digital_output.o(.text.DOUT_SetOutputState) for [Anonymous Symbol]
    digital_output.o(.ARM.exidx.text.DOUT_GetOutputState) refers to digital_output.o(.text.DOUT_GetOutputState) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_SetFaultState) refers to ntc_temperature_sensor.o(.text.NTC_SetFaultState) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.text.NTC_Init) refers to regular_conversion_manager.o(.text.RCM_RegisterRegConv) for RCM_RegisterRegConv
    ntc_temperature_sensor.o(.text.NTC_Init) refers to ntc_temperature_sensor.o(.text.NTC_Clear) for NTC_Clear
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_Init) refers to ntc_temperature_sensor.o(.text.NTC_Init) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_Clear) refers to ntc_temperature_sensor.o(.text.NTC_Clear) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.text.NTC_CalcAvTemp) refers to regular_conversion_manager.o(.text.RCM_ExecRegularConv) for RCM_ExecRegularConv
    ntc_temperature_sensor.o(.text.NTC_CalcAvTemp) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    ntc_temperature_sensor.o(.text.NTC_CalcAvTemp) refers to ntc_temperature_sensor.o(.text.NTC_SetFaultState) for NTC_SetFaultState
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_CalcAvTemp) refers to ntc_temperature_sensor.o(.text.NTC_CalcAvTemp) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_GetAvTemp_d) refers to ntc_temperature_sensor.o(.text.NTC_GetAvTemp_d) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_GetAvTemp_C) refers to ntc_temperature_sensor.o(.text.NTC_GetAvTemp_C) for [Anonymous Symbol]
    ntc_temperature_sensor.o(.ARM.exidx.text.NTC_CheckTemp) refers to ntc_temperature_sensor.o(.text.NTC_CheckTemp) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_Init) refers to open_loop.o(.text.OL_Init) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_VqdConditioning) refers to open_loop.o(.text.OL_VqdConditioning) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_UpdateVoltage) refers to open_loop.o(.text.OL_UpdateVoltage) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_GetVoltage) refers to open_loop.o(.text.OL_GetVoltage) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_Calc) refers to open_loop.o(.text.OL_Calc) for [Anonymous Symbol]
    open_loop.o(.ARM.exidx.text.OL_VF) refers to open_loop.o(.text.OL_VF) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_HandleInit) refers to pid_regulator.o(.text.PID_HandleInit) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetKP) refers to pid_regulator.o(.text.PID_SetKP) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetKI) refers to pid_regulator.o(.text.PID_SetKI) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKP) refers to pid_regulator.o(.text.PID_GetKP) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKI) refers to pid_regulator.o(.text.PID_GetKI) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetDefaultKP) refers to pid_regulator.o(.text.PID_GetDefaultKP) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetDefaultKI) refers to pid_regulator.o(.text.PID_GetDefaultKI) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetIntegralTerm) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKPDivisor) refers to pid_regulator.o(.text.PID_GetKPDivisor) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKPDivisorPOW2) refers to pid_regulator.o(.text.PID_GetKPDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetKPDivisorPOW2) refers to pid_regulator.o(.text.PID_SetKPDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKIDivisor) refers to pid_regulator.o(.text.PID_GetKIDivisor) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKIDivisorPOW2) refers to pid_regulator.o(.text.PID_GetKIDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.text.PID_SetKIDivisorPOW2) refers to pid_regulator.o(.text.PID_SetUpperIntegralTermLimit) for PID_SetUpperIntegralTermLimit
    pid_regulator.o(.text.PID_SetKIDivisorPOW2) refers to pid_regulator.o(.text.PID_SetLowerIntegralTermLimit) for PID_SetLowerIntegralTermLimit
    pid_regulator.o(.ARM.exidx.text.PID_SetKIDivisorPOW2) refers to pid_regulator.o(.text.PID_SetKIDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetUpperIntegralTermLimit) refers to pid_regulator.o(.text.PID_SetUpperIntegralTermLimit) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetLowerIntegralTermLimit) refers to pid_regulator.o(.text.PID_SetLowerIntegralTermLimit) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetLowerOutputLimit) refers to pid_regulator.o(.text.PID_SetLowerOutputLimit) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetUpperOutputLimit) refers to pid_regulator.o(.text.PID_SetUpperOutputLimit) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetPrevError) refers to pid_regulator.o(.text.PID_SetPrevError) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetKD) refers to pid_regulator.o(.text.PID_SetKD) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKD) refers to pid_regulator.o(.text.PID_GetKD) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKDDivisor) refers to pid_regulator.o(.text.PID_GetKDDivisor) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_GetKDDivisorPOW2) refers to pid_regulator.o(.text.PID_GetKDDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PID_SetKDDivisorPOW2) refers to pid_regulator.o(.text.PID_SetKDDivisorPOW2) for [Anonymous Symbol]
    pid_regulator.o(.ARM.exidx.text.PI_Controller) refers to pid_regulator.o(.text.PI_Controller) for [Anonymous Symbol]
    pid_regulator.o(.text.PID_Controller) refers to pid_regulator.o(.text.PI_Controller) for PI_Controller
    pid_regulator.o(.ARM.exidx.text.PID_Controller) refers to pid_regulator.o(.text.PID_Controller) for [Anonymous Symbol]
    pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_CalcElMotorPower) refers to pqd_motor_power_measurement.o(.text.PQD_CalcElMotorPower) for [Anonymous Symbol]
    pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_Clear) refers to pqd_motor_power_measurement.o(.text.PQD_Clear) for [Anonymous Symbol]
    pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW) refers to bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_V) for VBS_GetAvBusVoltage_V
    pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW) refers to fflti.o(.text) for __aeabi_i2f
    pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_GetAvrgElMotorPowerW) refers to pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW) for [Anonymous Symbol]
    pwm_common.o(.ARM.exidx.text.waitForPolarizationEnd) refers to pwm_common.o(.text.waitForPolarizationEnd) for [Anonymous Symbol]
    r_divider_bus_voltage_sensor.o(.text.RVBS_Init) refers to regular_conversion_manager.o(.text.RCM_RegisterRegConv) for RCM_RegisterRegConv
    r_divider_bus_voltage_sensor.o(.text.RVBS_Init) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_Clear) for RVBS_Clear
    r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_Init) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_Init) for [Anonymous Symbol]
    r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_Clear) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_Clear) for [Anonymous Symbol]
    r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbusFilt) refers to regular_conversion_manager.o(.text.RCM_ExecRegularConv) for RCM_ExecRegularConv
    r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbusFilt) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbusFilt) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_CheckFaultState) for RVBS_CheckFaultState
    r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_CalcAvVbusFilt) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbusFilt) for [Anonymous Symbol]
    r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_CheckFaultState) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_CheckFaultState) for [Anonymous Symbol]
    r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus) refers to regular_conversion_manager.o(.text.RCM_ExecRegularConv) for RCM_ExecRegularConv
    r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_CheckFaultState) for RVBS_CheckFaultState
    r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_CalcAvVbus) refers to r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus) for [Anonymous Symbol]
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_Init) refers to ramp_ext_mngr.o(.text.REMNG_Init) for [Anonymous Symbol]
    ramp_ext_mngr.o(.text.REMNG_Calc) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_Calc) refers to ramp_ext_mngr.o(.text.REMNG_Calc) for [Anonymous Symbol]
    ramp_ext_mngr.o(.text.REMNG_ExecRamp) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    ramp_ext_mngr.o(.text.REMNG_ExecRamp) refers to ramp_ext_mngr.o(.text.getScalingFactor) for getScalingFactor
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_ExecRamp) refers to ramp_ext_mngr.o(.text.REMNG_ExecRamp) for [Anonymous Symbol]
    ramp_ext_mngr.o(.ARM.exidx.text.getScalingFactor) refers to ramp_ext_mngr.o(.text.getScalingFactor) for [Anonymous Symbol]
    ramp_ext_mngr.o(.text.REMNG_GetValue) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_GetValue) refers to ramp_ext_mngr.o(.text.REMNG_GetValue) for [Anonymous Symbol]
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_RampCompleted) refers to ramp_ext_mngr.o(.text.REMNG_RampCompleted) for [Anonymous Symbol]
    ramp_ext_mngr.o(.ARM.exidx.text.REMNG_StopRamp) refers to ramp_ext_mngr.o(.text.REMNG_StopRamp) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_Init) refers to revup_ctrl.o(.text.RUC_Init) for [Anonymous Symbol]
    revup_ctrl.o(.text.RUC_Clear) refers to virtual_speed_sensor.o(.text.VSS_Clear) for VSS_Clear
    revup_ctrl.o(.text.RUC_Clear) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for STC_SetControlMode
    revup_ctrl.o(.text.RUC_Clear) refers to virtual_speed_sensor.o(.text.VSS_SetMecAngle) for VSS_SetMecAngle
    revup_ctrl.o(.text.RUC_Clear) refers to speed_torq_ctrl.o(.text.STC_ExecRamp) for STC_ExecRamp
    revup_ctrl.o(.text.RUC_Clear) refers to virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) for VSS_SetMecAcceleration
    revup_ctrl.o(.text.RUC_Clear) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    revup_ctrl.o(.ARM.exidx.text.RUC_Clear) refers to revup_ctrl.o(.text.RUC_Clear) for [Anonymous Symbol]
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM) for PWMC_SwitchOffPWM
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to pwm_curr_fdbk.o(.text.PWMC_TurnOnLowSides) for PWMC_TurnOnLowSides
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to pwm_curr_fdbk.o(.text.PWMC_SwitchOnPWM) for PWMC_SwitchOnPWM
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to speed_torq_ctrl.o(.text.STC_ExecRamp) for STC_ExecRamp
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) for VSS_SetMecAcceleration
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    revup_ctrl.o(.text.RUC_OTF_Exec) refers to virtual_speed_sensor.o(.text.VSS_SetCopyObserver) for VSS_SetCopyObserver
    revup_ctrl.o(.ARM.exidx.text.RUC_OTF_Exec) refers to revup_ctrl.o(.text.RUC_OTF_Exec) for [Anonymous Symbol]
    revup_ctrl.o(.text.RUC_Exec) refers to speed_torq_ctrl.o(.text.STC_ExecRamp) for STC_ExecRamp
    revup_ctrl.o(.text.RUC_Exec) refers to virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) for VSS_SetMecAcceleration
    revup_ctrl.o(.text.RUC_Exec) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    revup_ctrl.o(.ARM.exidx.text.RUC_Exec) refers to revup_ctrl.o(.text.RUC_Exec) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_IsAlignStageNow) refers to revup_ctrl.o(.text.RUC_IsAlignStageNow) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_Completed) refers to revup_ctrl.o(.text.RUC_Completed) for [Anonymous Symbol]
    revup_ctrl.o(.text.RUC_Stop) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    revup_ctrl.o(.text.RUC_Stop) refers to virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) for VSS_SetMecAcceleration
    revup_ctrl.o(.ARM.exidx.text.RUC_Stop) refers to revup_ctrl.o(.text.RUC_Stop) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_FirstAccelerationStageReached) refers to revup_ctrl.o(.text.RUC_FirstAccelerationStageReached) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseDurationms) refers to revup_ctrl.o(.text.RUC_SetPhaseDurationms) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseFinalMecSpeedUnit) refers to revup_ctrl.o(.text.RUC_SetPhaseFinalMecSpeedUnit) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseFinalTorque) refers to revup_ctrl.o(.text.RUC_SetPhaseFinalTorque) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_SetPhase) refers to revup_ctrl.o(.text.RUC_SetPhase) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseDurationms) refers to revup_ctrl.o(.text.RUC_GetPhaseDurationms) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseFinalMecSpeedUnit) refers to revup_ctrl.o(.text.RUC_GetPhaseFinalMecSpeedUnit) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseFinalTorque) refers to revup_ctrl.o(.text.RUC_GetPhaseFinalTorque) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_GetNumberOfPhases) refers to revup_ctrl.o(.text.RUC_GetNumberOfPhases) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_GetPhase) refers to revup_ctrl.o(.text.RUC_GetPhase) for [Anonymous Symbol]
    revup_ctrl.o(.ARM.exidx.text.RUC_Get_SCLowsideOTF_Status) refers to revup_ctrl.o(.text.RUC_Get_SCLowsideOTF_Status) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElAngle) refers to speed_pos_fdbk.o(.text.SPD_GetElAngle) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetMecAngle) refers to speed_pos_fdbk.o(.text.SPD_GetMecAngle) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetAvrgMecSpeedUnit) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElSpeedDpp) refers to speed_pos_fdbk.o(.text.SPD_GetElSpeedDpp) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetInstElSpeedDpp) refers to speed_pos_fdbk.o(.text.SPD_GetInstElSpeedDpp) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_Check) refers to speed_pos_fdbk.o(.text.SPD_Check) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_IsMecSpeedReliable) refers to speed_pos_fdbk.o(.text.SPD_IsMecSpeedReliable) for [Anonymous Symbol]
    speed_pos_fdbk.o(.text.SPD_GetS16Speed) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetS16Speed) refers to speed_pos_fdbk.o(.text.SPD_GetS16Speed) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElToMecRatio) refers to speed_pos_fdbk.o(.text.SPD_GetElToMecRatio) for [Anonymous Symbol]
    speed_pos_fdbk.o(.ARM.exidx.text.SPD_SetElToMecRatio) refers to speed_pos_fdbk.o(.text.SPD_SetElToMecRatio) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_Init) refers to speed_torq_ctrl.o(.text.STC_Init) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_SetSpeedSensor) refers to speed_torq_ctrl.o(.text.STC_SetSpeedSensor) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetSpeedSensor) refers to speed_torq_ctrl.o(.text.STC_GetSpeedSensor) for [Anonymous Symbol]
    speed_torq_ctrl.o(.text.STC_Clear) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    speed_torq_ctrl.o(.ARM.exidx.text.STC_Clear) refers to speed_torq_ctrl.o(.text.STC_Clear) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMecSpeedRefUnit) refers to speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnit) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetTorqueRef) refers to speed_torq_ctrl.o(.text.STC_GetTorqueRef) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_SetControlMode) refers to speed_torq_ctrl.o(.text.STC_SetControlMode) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetControlMode) refers to speed_torq_ctrl.o(.text.STC_GetControlMode) for [Anonymous Symbol]
    speed_torq_ctrl.o(.text.STC_ExecRamp) refers to speed_torq_ctrl.o(.text.STC_GetTorqueRef) for STC_GetTorqueRef
    speed_torq_ctrl.o(.text.STC_ExecRamp) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    speed_torq_ctrl.o(.text.STC_ExecRamp) refers to speed_torq_ctrl.o(.bss.hCurrentReference) for hCurrentReference
    speed_torq_ctrl.o(.ARM.exidx.text.STC_ExecRamp) refers to speed_torq_ctrl.o(.text.STC_ExecRamp) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_StopRamp) refers to speed_torq_ctrl.o(.text.STC_StopRamp) for [Anonymous Symbol]
    speed_torq_ctrl.o(.text.STC_CalcTorqueReference) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    speed_torq_ctrl.o(.text.STC_CalcTorqueReference) refers to pid_regulator.o(.text.PI_Controller) for PI_Controller
    speed_torq_ctrl.o(.text.STC_CalcTorqueReference) refers to lin.o(.bss..L_MergedGlobals) for global_actual_speed
    speed_torq_ctrl.o(.text.STC_CalcTorqueReference) refers to watch_data.o(.bss.watch_data) for watch_data
    speed_torq_ctrl.o(.text.STC_CalcTorqueReference) refers to user_logic.o(.bss..L_MergedGlobals) for lib_debug
    speed_torq_ctrl.o(.ARM.exidx.text.STC_CalcTorqueReference) refers to speed_torq_ctrl.o(.text.STC_CalcTorqueReference) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMecSpeedRefUnitDefault) refers to speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnitDefault) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMaxAppPositiveMecSpeedUnit) refers to speed_torq_ctrl.o(.text.STC_GetMaxAppPositiveMecSpeedUnit) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMinAppNegativeMecSpeedUnit) refers to speed_torq_ctrl.o(.text.STC_GetMinAppNegativeMecSpeedUnit) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_RampCompleted) refers to speed_torq_ctrl.o(.text.STC_RampCompleted) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_StopSpeedRamp) refers to speed_torq_ctrl.o(.text.STC_StopSpeedRamp) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_GetDefaultIqdref) refers to speed_torq_ctrl.o(.text.STC_GetDefaultIqdref) for [Anonymous Symbol]
    speed_torq_ctrl.o(.ARM.exidx.text.STC_SetNominalCurrent) refers to speed_torq_ctrl.o(.text.STC_SetNominalCurrent) for [Anonymous Symbol]
    speed_torq_ctrl.o(.text.STC_ForceSpeedReferenceToCurrentSpeed) refers to speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit) for SPD_GetAvrgMecSpeedUnit
    speed_torq_ctrl.o(.ARM.exidx.text.STC_ForceSpeedReferenceToCurrentSpeed) refers to speed_torq_ctrl.o(.text.STC_ForceSpeedReferenceToCurrentSpeed) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Clear) for STO_PLL_Clear
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init) refers to pid_regulator.o(.text.PID_HandleInit) for PID_HandleInit
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_Init) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Clear) refers to rt_memclr.o(.text) for __aeabi_memclr
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Clear) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_Clear) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Clear) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_Return) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Return) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcElAngle) refers to mc_math.o(.text.MCM_Trig_Functions) for MCM_Trig_Functions
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcElAngle) refers to pid_regulator.o(.text.PI_Controller) for PI_Controller
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_CalcElAngle) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcElAngle) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgMecSpeedUnit) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgMecSpeedUnit) refers to llmul.o(.text) for __aeabi_lmul
    sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgMecSpeedUnit) refers to speed_pos_fdbk.o(.text.SPD_IsMecSpeedReliable) for SPD_IsMecSpeedReliable
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_CalcAvrgMecSpeedUnit) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgMecSpeedUnit) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_CalcAvrgElSpeedDpp) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgElSpeedDpp) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_IsObserverConverged) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsObserverConverged) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetEstimatedBemf) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedBemf) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetEstimatedCurrent) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedCurrent) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetObserverGains) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObserverGains) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_SetObserverGains) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_SetObserverGains) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_GetPLLGains) refers to pid_regulator.o(.text.PID_GetKP) for PID_GetKP
    sto_pll_speed_pos_fdbk.o(.text.STO_GetPLLGains) refers to pid_regulator.o(.text.PID_GetKI) for PID_GetKI
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_GetPLLGains) refers to sto_pll_speed_pos_fdbk.o(.text.STO_GetPLLGains) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_SetPLLGains) refers to pid_regulator.o(.text.PID_SetKP) for PID_SetKP
    sto_pll_speed_pos_fdbk.o(.text.STO_SetPLLGains) refers to pid_regulator.o(.text.PID_SetKI) for PID_SetKI
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_SetPLLGains) refers to sto_pll_speed_pos_fdbk.o(.text.STO_SetPLLGains) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_SetMecAngle) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_SetMecAngle) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_OTF_ResetPLL) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_OTF_ResetPLL) refers to sto_pll_speed_pos_fdbk.o(.text.STO_OTF_ResetPLL) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_ResetPLL) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_ResetPLL) refers to sto_pll_speed_pos_fdbk.o(.text.STO_ResetPLL) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.text.STO_SetPLL) refers to pid_regulator.o(.text.PID_GetKIDivisor) for PID_GetKIDivisor
    sto_pll_speed_pos_fdbk.o(.text.STO_SetPLL) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_SetPLL) refers to sto_pll_speed_pos_fdbk.o(.text.STO_SetPLL) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetEstimatedBemfLevel) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedBemfLevel) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetObservedBemfLevel) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObservedBemfLevel) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_BemfConsistencyCheckSwitch) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_BemfConsistencyCheckSwitch) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_IsBemfConsistent) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsBemfConsistent) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_IsVarianceTight) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsVarianceTight) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_ForceConvergency1) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_ForceConvergency1) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_ForceConvergency2) refers to sto_pll_speed_pos_fdbk.o(.text.STO_PLL_ForceConvergency2) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_SetMinStartUpValidSpeedUnit) refers to sto_pll_speed_pos_fdbk.o(.text.STO_SetMinStartUpValidSpeedUnit) for [Anonymous Symbol]
    sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_SetDirection) refers to sto_pll_speed_pos_fdbk.o(.text.STO_SetDirection) for [Anonymous Symbol]
    virtual_speed_sensor.o(.text.VSS_Init) refers to virtual_speed_sensor.o(.text.VSS_Clear) for VSS_Clear
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_Init) refers to virtual_speed_sensor.o(.text.VSS_Init) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_Clear) refers to virtual_speed_sensor.o(.text.VSS_Clear) for [Anonymous Symbol]
    virtual_speed_sensor.o(.text.VSS_CalcElAngle) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_CalcElAngle) refers to virtual_speed_sensor.o(.text.VSS_CalcElAngle) for [Anonymous Symbol]
    virtual_speed_sensor.o(.text.VSS_CalcAvrgMecSpeedUnit) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    virtual_speed_sensor.o(.text.VSS_CalcAvrgMecSpeedUnit) refers to speed_pos_fdbk.o(.text.SPD_IsMecSpeedReliable) for SPD_IsMecSpeedReliable
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_CalcAvrgMecSpeedUnit) refers to virtual_speed_sensor.o(.text.VSS_CalcAvrgMecSpeedUnit) for [Anonymous Symbol]
    virtual_speed_sensor.o(.text.VSS_SetMecAngle) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetMecAngle) refers to virtual_speed_sensor.o(.text.VSS_SetMecAngle) for [Anonymous Symbol]
    virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetMecAcceleration) refers to virtual_speed_sensor.o(.text.VSS_SetMecAcceleration) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_RampCompleted) refers to virtual_speed_sensor.o(.text.VSS_RampCompleted) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_GetLastRampFinalSpeed) refers to virtual_speed_sensor.o(.text.VSS_GetLastRampFinalSpeed) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetStartTransition) refers to virtual_speed_sensor.o(.text.VSS_SetStartTransition) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_IsTransitionOngoing) refers to virtual_speed_sensor.o(.text.VSS_IsTransitionOngoing) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_TransitionEnded) refers to virtual_speed_sensor.o(.text.VSS_TransitionEnded) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetCopyObserver) refers to virtual_speed_sensor.o(.text.VSS_SetCopyObserver) for [Anonymous Symbol]
    virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetElAngle) refers to virtual_speed_sensor.o(.text.VSS_SetElAngle) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_Init) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetOffsetCalib) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetOffsetCalib) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetOffsetCalib) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetOffsetCalib) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM) for R3_1_SwitchOnPWM
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to pwm_common.o(.text.waitForPolarizationEnd) for waitForPolarizationEnd
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for R3_1_SwitchOffPWM
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointCalibration) for R3_1_SetADCSampPointCalibration
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationAB) for R3_1_HFCurrentsCalibrationAB
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationC) for R3_1_HFCurrentsCalibrationC
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_CurrentReadingCalibration) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_HFCurrentsCalibrationAB) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationAB) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointCalibration) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters) for R3_1_WriteTIMRegisters
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointCalibration) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointCalibration) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SwitchOnPWM) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SwitchOffPWM) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_HFCurrentsCalibrationC) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationC) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetPhaseCurrents) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetPhaseCurrents_OVM) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents_OVM) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_WriteTIMRegisters) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters) for R3_1_WriteTIMRegisters
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointSectX) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX_OVM) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters) for R3_1_WriteTIMRegisters
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointSectX_OVM) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX_OVM) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_TurnOnLowSides) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_TIMx_UP_IRQHandler) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TIMx_UP_IRQHandler) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_OVERCURRENT_IRQHandler) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_OVERCURRENT_IRQHandler) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_OVERVOLTAGE_IRQHandler) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_OVERVOLTAGE_IRQHandler) for [Anonymous Symbol]
    r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_IsOverCurrentOccurred) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_IsOverCurrentOccurred) for [Anonymous Symbol]
    mcp.o(.text.MCP_ReceivedPacket) refers to register_interface.o(.text.RI_SetRegCommandParser) for RI_SetRegCommandParser
    mcp.o(.text.MCP_ReceivedPacket) refers to register_interface.o(.text.RI_GetRegCommandParser) for RI_GetRegCommandParser
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_StartMotor) for MCI_StartMotor
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_StopMotor) for MCI_StopMotor
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_GetSTMState) for MCI_GetSTMState
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_StopRamp) for MCI_StopRamp
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_FaultAcknowledged) for MCI_FaultAcknowledged
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_interface.o(.text.MCI_Clear_Iqdref) for MCI_Clear_Iqdref
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_api.o(.text.MC_ProfilerCommand) for MC_ProfilerCommand
    mcp.o(.text.MCP_ReceivedPacket) refers to mc_config.o(.bss.Mci) for Mci
    mcp.o(.text.MCP_ReceivedPacket) refers to mcp_config.o(.bss.MCP_UserCallBack) for MCP_UserCallBack
    mcp.o(.ARM.exidx.text.MCP_ReceivedPacket) refers to mcp.o(.text.MCP_ReceivedPacket) for [Anonymous Symbol]
    mcp.o(.text.MCP_RegisterCallBack) refers to mcp_config.o(.bss.MCP_UserCallBack) for MCP_UserCallBack
    mcp.o(.ARM.exidx.text.MCP_RegisterCallBack) refers to mcp.o(.text.MCP_RegisterCallBack) for [Anonymous Symbol]
    mcpa.o(.text.MCPA_dataLog) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    mcpa.o(.text.MCPA_dataLog) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    mcpa.o(.text.MCPA_dataLog) refers to mcpa.o(.bss.GLOBAL_TIMESTAMP) for GLOBAL_TIMESTAMP
    mcpa.o(.ARM.exidx.text.MCPA_dataLog) refers to mcpa.o(.text.MCPA_dataLog) for [Anonymous Symbol]
    mcpa.o(.ARM.exidx.text.MCPA_flushDataLog) refers to mcpa.o(.text.MCPA_flushDataLog) for [Anonymous Symbol]
    mcpa.o(.text.MCPA_cfgLog) refers to register_interface.o(.text.RI_GetIDSize) for RI_GetIDSize
    mcpa.o(.text.MCPA_cfgLog) refers to register_interface.o(.text.RI_GetPtrReg) for RI_GetPtrReg
    mcpa.o(.ARM.exidx.text.MCPA_cfgLog) refers to mcpa.o(.text.MCPA_cfgLog) for [Anonymous Symbol]
    flux_weakening_ctrl.o(.ARM.exidx.text.FW_Init) refers to flux_weakening_ctrl.o(.text.FW_Init) for [Anonymous Symbol]
    flux_weakening_ctrl.o(.text.FW_Clear) refers to pid_regulator.o(.text.PID_SetIntegralTerm) for PID_SetIntegralTerm
    flux_weakening_ctrl.o(.ARM.exidx.text.FW_Clear) refers to flux_weakening_ctrl.o(.text.FW_Clear) for [Anonymous Symbol]
    flux_weakening_ctrl.o(.text.FW_CalcCurrRef) refers to mc_math.o(.text.MCM_Sqrt) for MCM_Sqrt
    flux_weakening_ctrl.o(.text.FW_CalcCurrRef) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    flux_weakening_ctrl.o(.text.FW_CalcCurrRef) refers to pid_regulator.o(.text.PI_Controller) for PI_Controller
    flux_weakening_ctrl.o(.text.FW_CalcCurrRef) refers to pid_regulator.o(.text.PID_GetKIDivisor) for PID_GetKIDivisor
    flux_weakening_ctrl.o(.text.FW_CalcCurrRef) refers to pid_regulator.o(.text.PID_SetLowerIntegralTermLimit) for PID_SetLowerIntegralTermLimit
    flux_weakening_ctrl.o(.text.FW_CalcCurrRef) refers to pid_regulator.o(.text.PID_SetUpperIntegralTermLimit) for PID_SetUpperIntegralTermLimit
    flux_weakening_ctrl.o(.ARM.exidx.text.FW_CalcCurrRef) refers to flux_weakening_ctrl.o(.text.FW_CalcCurrRef) for [Anonymous Symbol]
    flux_weakening_ctrl.o(.ARM.exidx.text.FW_DataProcess) refers to flux_weakening_ctrl.o(.text.FW_DataProcess) for [Anonymous Symbol]
    flux_weakening_ctrl.o(.ARM.exidx.text.FW_SetVref) refers to flux_weakening_ctrl.o(.text.FW_SetVref) for [Anonymous Symbol]
    flux_weakening_ctrl.o(.ARM.exidx.text.FW_GetVref) refers to flux_weakening_ctrl.o(.text.FW_GetVref) for [Anonymous Symbol]
    flux_weakening_ctrl.o(.ARM.exidx.text.FW_GetAvVAmplitude) refers to flux_weakening_ctrl.o(.text.FW_GetAvVAmplitude) for [Anonymous Symbol]
    flux_weakening_ctrl.o(.text.FW_GetAvVPercentage) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    flux_weakening_ctrl.o(.ARM.exidx.text.FW_GetAvVPercentage) refers to flux_weakening_ctrl.o(.text.FW_GetAvVPercentage) for [Anonymous Symbol]
    led_key.o(.text.check_key_state) refers to led_key.o(.bss.key) for key
    led_key.o(.ARM.exidx.text.check_key_state) refers to led_key.o(.text.check_key_state) for [Anonymous Symbol]
    led_key.o(.text.get_key_state) refers to led_key.o(.bss.key) for key
    led_key.o(.ARM.exidx.text.get_key_state) refers to led_key.o(.text.get_key_state) for [Anonymous Symbol]
    led_key.o(.text.exe_key_func) refers to led_key.o(.text.get_key_state) for get_key_state
    led_key.o(.text.exe_key_func) refers to app_handle.o(.text.work_mode_switch) for work_mode_switch
    led_key.o(.text.exe_key_func) refers to led_key.o(.data.switch_mode_tmp) for switch_mode_tmp
    led_key.o(.ARM.exidx.text.exe_key_func) refers to led_key.o(.text.exe_key_func) for [Anonymous Symbol]
    led_key.o(.ARM.exidx.text.led_clear) refers to led_key.o(.text.led_clear) for [Anonymous Symbol]
    led_key.o(.text.led_show_err) refers to stm32g0xx_hal.o(.text.HAL_Delay) for HAL_Delay
    led_key.o(.ARM.exidx.text.led_show_err) refers to led_key.o(.text.led_show_err) for [Anonymous Symbol]
    led_key.o(.ARM.exidx.text.led_show_function) refers to led_key.o(.text.led_show_function) for [Anonymous Symbol]
    adc_cin.o(.text.ADC_CIN_INIT) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    adc_cin.o(.text.ADC_CIN_INIT) refers to regular_conversion_manager.o(.text.RCM_RegisterRegConv) for RCM_RegisterRegConv
    adc_cin.o(.text.ADC_CIN_INIT) refers to adc_cin.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    adc_cin.o(.ARM.exidx.text.ADC_CIN_INIT) refers to adc_cin.o(.text.ADC_CIN_INIT) for [Anonymous Symbol]
    adc_cin.o(.text.GET_ADC_CIN_Digital) refers to regular_conversion_manager.o(.text.RCM_GetUserConvState) for RCM_GetUserConvState
    adc_cin.o(.text.GET_ADC_CIN_Digital) refers to regular_conversion_manager.o(.text.RCM_GetUserConv) for RCM_GetUserConv
    adc_cin.o(.text.GET_ADC_CIN_Digital) refers to regular_conversion_manager.o(.text.RCM_RequestUserConv) for RCM_RequestUserConv
    adc_cin.o(.text.GET_ADC_CIN_Digital) refers to adc_cin.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    adc_cin.o(.ARM.exidx.text.GET_ADC_CIN_Digital) refers to adc_cin.o(.text.GET_ADC_CIN_Digital) for [Anonymous Symbol]
    adc_cin.o(.text.ADC_VTS_INIT) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    adc_cin.o(.text.ADC_VTS_INIT) refers to regular_conversion_manager.o(.text.RCM_RegisterRegConv) for RCM_RegisterRegConv
    adc_cin.o(.text.ADC_VTS_INIT) refers to adc_cin.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    adc_cin.o(.ARM.exidx.text.ADC_VTS_INIT) refers to adc_cin.o(.text.ADC_VTS_INIT) for [Anonymous Symbol]
    adc_cin.o(.text.GET_ADC_VTS_Voltage) refers to regular_conversion_manager.o(.text.RCM_GetUserConvState) for RCM_GetUserConvState
    adc_cin.o(.text.GET_ADC_VTS_Voltage) refers to regular_conversion_manager.o(.text.RCM_GetUserConv) for RCM_GetUserConv
    adc_cin.o(.text.GET_ADC_VTS_Voltage) refers to dflti.o(.text) for __aeabi_ui2d
    adc_cin.o(.text.GET_ADC_VTS_Voltage) refers to dmul.o(.text) for __aeabi_dmul
    adc_cin.o(.text.GET_ADC_VTS_Voltage) refers to d2f.o(.text) for __aeabi_d2f
    adc_cin.o(.text.GET_ADC_VTS_Voltage) refers to regular_conversion_manager.o(.text.RCM_RequestUserConv) for RCM_RequestUserConv
    adc_cin.o(.text.GET_ADC_VTS_Voltage) refers to adc_cin.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    adc_cin.o(.ARM.exidx.text.GET_ADC_VTS_Voltage) refers to adc_cin.o(.text.GET_ADC_VTS_Voltage) for [Anonymous Symbol]
    pwm_mode.o(.text.pwm_mode_init) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_Init) for LL_EXTI_Init
    pwm_mode.o(.ARM.exidx.text.pwm_mode_init) refers to pwm_mode.o(.text.pwm_mode_init) for [Anonymous Symbol]
    pwm_mode.o(.text.pwminput_gpio_init) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_Init) for LL_EXTI_Init
    pwm_mode.o(.ARM.exidx.text.pwminput_gpio_init) refers to pwm_mode.o(.text.pwminput_gpio_init) for [Anonymous Symbol]
    pwm_mode.o(.text.pwmoutput_gpio_init) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    pwm_mode.o(.ARM.exidx.text.pwmoutput_gpio_init) refers to pwm_mode.o(.text.pwmoutput_gpio_init) for [Anonymous Symbol]
    pwm_mode.o(.text.pwm_output_config) refers to rt_memclr.o(.text) for __aeabi_memclr4
    pwm_mode.o(.text.pwm_output_config) refers to ffixui.o(.text) for __aeabi_f2uiz
    pwm_mode.o(.text.pwm_output_config) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init) for HAL_TIM_Base_Init
    pwm_mode.o(.text.pwm_output_config) refers to main.o(.text.Error_Handler) for Error_Handler
    pwm_mode.o(.text.pwm_output_config) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Init) for HAL_TIM_PWM_Init
    pwm_mode.o(.text.pwm_output_config) refers to stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel) for HAL_TIM_PWM_ConfigChannel
    pwm_mode.o(.text.pwm_output_config) refers to stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime) for HAL_TIMEx_ConfigBreakDeadTime
    pwm_mode.o(.text.pwm_output_config) refers to pwm_mode.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    pwm_mode.o(.ARM.exidx.text.pwm_output_config) refers to pwm_mode.o(.text.pwm_output_config) for [Anonymous Symbol]
    pwm_mode.o(.text.set_pwm_output) refers to ffixui.o(.text) for __aeabi_f2uiz
    pwm_mode.o(.text.set_pwm_output) refers to pwm_mode.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    pwm_mode.o(.ARM.exidx.text.set_pwm_output) refers to pwm_mode.o(.text.set_pwm_output) for [Anonymous Symbol]
    pwm_mode.o(.text.HAL_TIM_PeriodElapsedCallback) refers to pwm_mode.o(.bss.timer17_updata_time) for timer17_updata_time
    pwm_mode.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback) refers to pwm_mode.o(.text.HAL_TIM_PeriodElapsedCallback) for [Anonymous Symbol]
    pwm_mode.o(.text.get_duty_period) refers to fflti.o(.text) for __aeabi_i2f
    pwm_mode.o(.text.get_duty_period) refers to fdiv.o(.text) for __aeabi_fdiv
    pwm_mode.o(.text.get_duty_period) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    pwm_mode.o(.text.get_duty_period) refers to ffixi.o(.text) for __aeabi_f2iz
    pwm_mode.o(.text.get_duty_period) refers to pwm_mode.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    pwm_mode.o(.ARM.exidx.text.get_duty_period) refers to pwm_mode.o(.text.get_duty_period) for [Anonymous Symbol]
    pwm_mode.o(.text.pwm_speed_control) refers to mc_api.o(.text.MC_GetMecSpeedReferenceMotor1) for MC_GetMecSpeedReferenceMotor1
    pwm_mode.o(.text.pwm_speed_control) refers to ffixui.o(.text) for __aeabi_f2uiz
    pwm_mode.o(.text.pwm_speed_control) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    pwm_mode.o(.text.pwm_speed_control) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for MC_ProgramSpeedRampMotor1
    pwm_mode.o(.text.pwm_speed_control) refers to mc_api.o(.text.MC_StartMotor1) for MC_StartMotor1
    pwm_mode.o(.text.pwm_speed_control) refers to mc_api.o(.text.MC_StopMotor1) for MC_StopMotor1
    pwm_mode.o(.text.pwm_speed_control) refers to pwm_mode.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    pwm_mode.o(.ARM.exidx.text.pwm_speed_control) refers to pwm_mode.o(.text.pwm_speed_control) for [Anonymous Symbol]
    lin.o(.ARM.exidx.text.Lin_SendBreak) refers to lin.o(.text.Lin_SendBreak) for [Anonymous Symbol]
    lin.o(.ARM.exidx.text.Lin_SendSyncSegment) refers to lin.o(.text.Lin_SendSyncSegment) for [Anonymous Symbol]
    lin.o(.ARM.exidx.text.Lin_CheckPID) refers to lin.o(.text.Lin_CheckPID) for [Anonymous Symbol]
    lin.o(.ARM.exidx.text.Lin_SendHead) refers to lin.o(.text.Lin_SendHead) for [Anonymous Symbol]
    lin.o(.ARM.exidx.text.Lin_Checksum) refers to lin.o(.text.Lin_Checksum) for [Anonymous Symbol]
    lin.o(.ARM.exidx.text.Lin_SentData) refers to lin.o(.text.Lin_SentData) for [Anonymous Symbol]
    lin.o(.text.Lin_SendAnswer) refers to lin.o(.text.Lin_Checksum) for Lin_Checksum
    lin.o(.ARM.exidx.text.Lin_SendAnswer) refers to lin.o(.text.Lin_SendAnswer) for [Anonymous Symbol]
    lin.o(.text.Lin_DataProcess) refers to lin.o(.text.Lin_Checksum) for Lin_Checksum
    lin.o(.text.Lin_DataProcess) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    lin.o(.text.Lin_DataProcess) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for MC_ProgramSpeedRampMotor1
    lin.o(.text.Lin_DataProcess) refers to mc_api.o(.text.MC_StartMotor1) for MC_StartMotor1
    lin.o(.text.Lin_DataProcess) refers to app_handle.o(.text.work_mode_switch) for work_mode_switch
    lin.o(.text.Lin_DataProcess) refers to lin.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    lin.o(.text.Lin_DataProcess) refers to app_handle.o(.bss.g_work_mode) for g_work_mode
    lin.o(.ARM.exidx.text.Lin_DataProcess) refers to lin.o(.text.Lin_DataProcess) for [Anonymous Symbol]
    lin.o(.text.USART1_IRQHandler) refers to lin.o(.text.Lin_Checksum) for Lin_Checksum
    lin.o(.text.USART1_IRQHandler) refers to lin.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    lin.o(.text.USART1_IRQHandler) refers to led_key.o(.bss.MOTOR_ERROR_INFO) for MOTOR_ERROR_INFO
    lin.o(.text.USART1_IRQHandler) refers to main.o(.bss..L_MergedGlobals) for mccurrent_err
    lin.o(.text.USART1_IRQHandler) refers to app_handle.o(.bss.g_work_mode) for g_work_mode
    lin.o(.ARM.exidx.text.USART1_IRQHandler) refers to lin.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    app_error.o(.ARM.exidx.text.error_check_init) refers to app_error.o(.text.error_check_init) for [Anonymous Symbol]
    app_error.o(.text.error_check) refers to bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_V) for VBS_GetAvBusVoltage_V
    app_error.o(.text.error_check) refers to dflti.o(.text) for __aeabi_ui2d
    app_error.o(.text.error_check) refers to ddiv.o(.text) for __aeabi_ddiv
    app_error.o(.text.error_check) refers to dfixi.o(.text) for __aeabi_d2iz
    app_error.o(.text.error_check) refers to app_handle.o(.text.work_mode_switch) for work_mode_switch
    app_error.o(.text.error_check) refers to adc_cin.o(.text.GET_ADC_CIN_Digital) for GET_ADC_CIN_Digital
    app_error.o(.text.error_check) refers to adc_cin.o(.text.GET_ADC_VTS_Voltage) for GET_ADC_VTS_Voltage
    app_error.o(.text.error_check) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    app_error.o(.text.error_check) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    app_error.o(.text.error_check) refers to ffixi.o(.text) for __aeabi_f2iz
    app_error.o(.text.error_check) refers to r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_OVERCURRENT_IRQHandler) for R3_1_OVERCURRENT_IRQHandler
    app_error.o(.text.error_check) refers to mc_config.o(.data.BusVoltageSensor_M1) for BusVoltageSensor_M1
    app_error.o(.text.error_check) refers to app_error.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    app_error.o(.text.error_check) refers to led_key.o(.bss.MOTOR_ERROR_INFO) for MOTOR_ERROR_INFO
    app_error.o(.text.error_check) refers to app_handle.o(.data..L_MergedGlobals) for g_work_mode_ppre
    app_error.o(.text.error_check) refers to mc_config.o(.data.PWM_Handle_M1) for PWM_Handle_M1
    app_error.o(.text.error_check) refers to main.o(.bss..L_MergedGlobals) for mccurrent_err
    app_error.o(.ARM.exidx.text.error_check) refers to app_error.o(.text.error_check) for [Anonymous Symbol]
    app_error.o(.text.error_mode_init) refers to mc_api.o(.text.MC_StopMotor1) for MC_StopMotor1
    app_error.o(.text.error_mode_init) refers to led_key.o(.text.led_clear) for led_clear
    app_error.o(.text.error_mode_init) refers to stm32g0xx_hal.o(.text.HAL_Delay) for HAL_Delay
    app_error.o(.text.error_mode_init) refers to led_key.o(.text.led_show_err) for led_show_err
    app_error.o(.text.error_mode_init) refers to led_key.o(.bss.MOTOR_ERROR_INFO) for MOTOR_ERROR_INFO
    app_error.o(.ARM.exidx.text.error_mode_init) refers to app_error.o(.text.error_mode_init) for [Anonymous Symbol]
    app_error.o(.text.error_mode_tick) refers to mc_api.o(.text.MC_StopMotor1) for MC_StopMotor1
    app_error.o(.text.error_mode_tick) refers to main.o(.bss..L_MergedGlobals) for msta
    app_error.o(.ARM.exidx.text.error_mode_tick) refers to app_error.o(.text.error_mode_tick) for [Anonymous Symbol]
    app_handle.o(.text.work_mode_init) refers to app_handle.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    app_handle.o(.text.work_mode_init) refers to app_handle.o(.bss.g_work_mode) for g_work_mode
    app_handle.o(.ARM.exidx.text.work_mode_init) refers to app_handle.o(.text.work_mode_init) for [Anonymous Symbol]
    app_handle.o(.text.work_mode_perfrom) refers to app_handle.o(.bss.g_work_mode) for g_work_mode
    app_handle.o(.text.work_mode_perfrom) refers to app_handle.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    app_handle.o(.text.work_mode_perfrom) refers to app_handle.o(.rodata.g_work_mode_state) for [Anonymous Symbol]
    app_handle.o(.ARM.exidx.text.work_mode_perfrom) refers to app_handle.o(.text.work_mode_perfrom) for [Anonymous Symbol]
    app_handle.o(.text.work_mode_switch) refers to app_handle.o(.bss.g_work_mode) for g_work_mode
    app_handle.o(.ARM.exidx.text.work_mode_switch) refers to app_handle.o(.text.work_mode_switch) for [Anonymous Symbol]
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_standby_init) for mode_standby_init
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_standby_tick) for mode_standby_tick
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_auto_init) for mode_auto_init
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_auto_tick) for mode_auto_tick
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_speed_init) for mode_speed_init
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_speed_tick) for mode_speed_tick
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_pressure_5m_init) for mode_pressure_5m_init
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_pressure_5m_tick) for mode_pressure_5m_tick
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_pressure_7m_init) for mode_pressure_7m_init
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_pressure_7m_tick) for mode_pressure_7m_tick
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_pressure_9m_init) for mode_pressure_9m_init
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_pressure_9m_tick) for mode_pressure_9m_tick
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_max_power_12m_init) for mode_max_power_12m_init
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_max_power_12m_tick) for mode_max_power_12m_tick
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_pwm_init) for mode_pwm_init
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_pwm_tick) for mode_pwm_tick
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_error_init) for mode_error_init
    app_handle.o(.rodata.g_work_mode_state) refers to app_mode.o(.text.mode_error_tick) for mode_error_tick
    app_mode.o(.ARM.exidx.text.myabs) refers to app_mode.o(.text.myabs) for [Anonymous Symbol]
    app_mode.o(.text.mode_standby_init) refers to led_key.o(.text.led_clear) for led_clear
    app_mode.o(.text.mode_standby_init) refers to mc_api.o(.text.MC_StopMotor1) for MC_StopMotor1
    app_mode.o(.text.mode_standby_init) refers to mc_api.o(.text.MC_AcknowledgeFaultMotor1) for MC_AcknowledgeFaultMotor1
    app_mode.o(.text.mode_standby_init) refers to app_mode.o(.data.need_stop_flag) for need_stop_flag
    app_mode.o(.text.mode_standby_init) refers to led_key.o(.bss.MOTOR_ERROR_INFO) for MOTOR_ERROR_INFO
    app_mode.o(.text.mode_standby_init) refers to main.o(.bss..L_MergedGlobals) for mccurrent_err
    app_mode.o(.ARM.exidx.text.mode_standby_init) refers to app_mode.o(.text.mode_standby_init) for [Anonymous Symbol]
    app_mode.o(.text.mode_standby_tick) refers to mc_api.o(.text.MC_StopMotor1) for MC_StopMotor1
    app_mode.o(.text.mode_standby_tick) refers to mc_api.o(.text.MC_AcknowledgeFaultMotor1) for MC_AcknowledgeFaultMotor1
    app_mode.o(.text.mode_standby_tick) refers to main.o(.bss..L_MergedGlobals) for msta
    app_mode.o(.ARM.exidx.text.mode_standby_tick) refers to app_mode.o(.text.mode_standby_tick) for [Anonymous Symbol]
    app_mode.o(.text.mode_auto_init) refers to led_key.o(.text.led_show_function) for led_show_function
    app_mode.o(.text.mode_auto_init) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for MC_ProgramSpeedRampMotor1
    app_mode.o(.text.mode_auto_init) refers to mc_api.o(.text.MC_StartMotor1) for MC_StartMotor1
    app_mode.o(.text.mode_auto_init) refers to app_mode.o(.data.need_stop_flag) for need_stop_flag
    app_mode.o(.ARM.exidx.text.mode_auto_init) refers to app_mode.o(.text.mode_auto_init) for [Anonymous Symbol]
    app_mode.o(.ARM.exidx.text.mode_auto_tick) refers to app_mode.o(.text.mode_auto_tick) for [Anonymous Symbol]
    app_mode.o(.text.mode_speed_init) refers to led_key.o(.text.led_show_function) for led_show_function
    app_mode.o(.text.mode_speed_init) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for MC_ProgramSpeedRampMotor1
    app_mode.o(.text.mode_speed_init) refers to mc_api.o(.text.MC_StartMotor1) for MC_StartMotor1
    app_mode.o(.ARM.exidx.text.mode_speed_init) refers to app_mode.o(.text.mode_speed_init) for [Anonymous Symbol]
    app_mode.o(.ARM.exidx.text.mode_speed_tick) refers to app_mode.o(.text.mode_speed_tick) for [Anonymous Symbol]
    app_mode.o(.text.mode_pressure_5m_init) refers to led_key.o(.text.led_show_function) for led_show_function
    app_mode.o(.text.mode_pressure_5m_init) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for MC_ProgramSpeedRampMotor1
    app_mode.o(.text.mode_pressure_5m_init) refers to mc_api.o(.text.MC_StartMotor1) for MC_StartMotor1
    app_mode.o(.ARM.exidx.text.mode_pressure_5m_init) refers to app_mode.o(.text.mode_pressure_5m_init) for [Anonymous Symbol]
    app_mode.o(.ARM.exidx.text.mode_pressure_5m_tick) refers to app_mode.o(.text.mode_pressure_5m_tick) for [Anonymous Symbol]
    app_mode.o(.text.mode_pressure_7m_init) refers to led_key.o(.text.led_show_function) for led_show_function
    app_mode.o(.text.mode_pressure_7m_init) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for MC_ProgramSpeedRampMotor1
    app_mode.o(.text.mode_pressure_7m_init) refers to mc_api.o(.text.MC_StartMotor1) for MC_StartMotor1
    app_mode.o(.ARM.exidx.text.mode_pressure_7m_init) refers to app_mode.o(.text.mode_pressure_7m_init) for [Anonymous Symbol]
    app_mode.o(.ARM.exidx.text.mode_pressure_7m_tick) refers to app_mode.o(.text.mode_pressure_7m_tick) for [Anonymous Symbol]
    app_mode.o(.text.mode_pressure_9m_init) refers to led_key.o(.text.led_show_function) for led_show_function
    app_mode.o(.text.mode_pressure_9m_init) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for MC_ProgramSpeedRampMotor1
    app_mode.o(.text.mode_pressure_9m_init) refers to mc_api.o(.text.MC_StartMotor1) for MC_StartMotor1
    app_mode.o(.ARM.exidx.text.mode_pressure_9m_init) refers to app_mode.o(.text.mode_pressure_9m_init) for [Anonymous Symbol]
    app_mode.o(.ARM.exidx.text.mode_pressure_9m_tick) refers to app_mode.o(.text.mode_pressure_9m_tick) for [Anonymous Symbol]
    app_mode.o(.text.mode_max_power_12m_init) refers to led_key.o(.text.led_show_function) for led_show_function
    app_mode.o(.text.mode_max_power_12m_init) refers to mc_api.o(.text.MC_ProgramSpeedRampMotor1) for MC_ProgramSpeedRampMotor1
    app_mode.o(.text.mode_max_power_12m_init) refers to mc_api.o(.text.MC_StartMotor1) for MC_StartMotor1
    app_mode.o(.text.mode_max_power_12m_init) refers to app_mode.o(.data.need_stop_flag) for need_stop_flag
    app_mode.o(.ARM.exidx.text.mode_max_power_12m_init) refers to app_mode.o(.text.mode_max_power_12m_init) for [Anonymous Symbol]
    app_mode.o(.ARM.exidx.text.mode_max_power_12m_tick) refers to app_mode.o(.text.mode_max_power_12m_tick) for [Anonymous Symbol]
    app_mode.o(.text.mode_pwm_init) refers to led_key.o(.text.led_show_function) for led_show_function
    app_mode.o(.text.mode_pwm_init) refers to stm32g0xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    app_mode.o(.text.mode_pwm_init) refers to main.o(.text.MX_TIM17_Init) for MX_TIM17_Init
    app_mode.o(.text.mode_pwm_init) refers to pwm_mode.o(.text.pwm_mode_init) for pwm_mode_init
    app_mode.o(.ARM.exidx.text.mode_pwm_init) refers to app_mode.o(.text.mode_pwm_init) for [Anonymous Symbol]
    app_mode.o(.text.mode_pwm_tick) refers to pwm_mode.o(.text.get_duty_period) for get_duty_period
    app_mode.o(.text.mode_pwm_tick) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_idiv
    app_mode.o(.text.mode_pwm_tick) refers to pwm_mode.o(.text.pwm_speed_control) for pwm_speed_control
    app_mode.o(.text.mode_pwm_tick) refers to pwm_mode.o(.bss.pwm_duty) for pwm_duty
    app_mode.o(.text.mode_pwm_tick) refers to app_mode.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    app_mode.o(.text.mode_pwm_tick) refers to app_mode.o(.data.temp_duty) for temp_duty
    app_mode.o(.ARM.exidx.text.mode_pwm_tick) refers to app_mode.o(.text.mode_pwm_tick) for [Anonymous Symbol]
    app_mode.o(.text.mode_error_init) refers to app_error.o(.text.error_mode_init) for error_mode_init
    app_mode.o(.ARM.exidx.text.mode_error_init) refers to app_mode.o(.text.mode_error_init) for [Anonymous Symbol]
    app_mode.o(.text.mode_error_tick) refers to app_error.o(.text.error_mode_tick) for error_mode_tick
    app_mode.o(.ARM.exidx.text.mode_error_tick) refers to app_mode.o(.text.mode_error_tick) for [Anonymous Symbol]
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    d2f.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(.text) refers to ddiv.o(.constdata) for .constdata
    ddiv.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfixi.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflti.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fadd) for _fadd1
    faddsub.o(x$fpl$fsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fsub) refers to faddsub.o(x$fpl$fadd) for _fadd1
    fdiv.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(.text) refers to fdiv.o(.constdata) for .constdata
    fdiv.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixi.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixui.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflti.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32g030xx.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to main.o(.text._sys_exit) for _sys_exit
    defsig_exit.o(.text) refers to main.o(.text._sys_exit) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to main.o(.text._sys_exit) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to main.o(.text._ttywrch) for _ttywrch
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.text.millis), (8 bytes).
    Removing main.o(.ARM.exidx.text.millis), (8 bytes).
    Removing main.o(.ARM.exidx.text._sys_exit), (8 bytes).
    Removing main.o(.text._ttywrch), (2 bytes).
    Removing main.o(.ARM.exidx.text._ttywrch), (8 bytes).
    Removing main.o(.text.fputc), (36 bytes).
    Removing main.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.text.Error_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_TIM17_Init), (8 bytes).
    Removing main.o(.text.MX_USART1_UART_Init), (360 bytes).
    Removing main.o(.ARM.exidx.text.MX_USART1_UART_Init), (8 bytes).
    Removing main.o(.bss.time_ms), (4 bytes).
    Removing main.o(.data.test_send), (8 bytes).
    Removing main.o(.bss.__stdout), (84 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing motorcontrol.o(.text), (0 bytes).
    Removing motorcontrol.o(.ARM.exidx.text.MX_MotorControl_Init), (8 bytes).
    Removing mc_api.o(.text), (0 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_StartMotor1), (8 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_StopMotor1), (8 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_ProgramSpeedRampMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_ProgramSpeedRampMotor1_F), (20 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_ProgramSpeedRampMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_ProgramTorqueRampMotor1), (20 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_ProgramTorqueRampMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_ProgramTorqueRampMotor1_F), (20 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_ProgramTorqueRampMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_SetCurrentReferenceMotor1), (20 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_SetCurrentReferenceMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_SetCurrentReferenceMotor1_F), (20 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_SetCurrentReferenceMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetCommandStateMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetCommandStateMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_StopSpeedRampMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_StopSpeedRampMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_StopRampMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_StopRampMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_HasRampCompletedMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_HasRampCompletedMotor1), (8 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetMecSpeedReferenceMotor1), (8 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetMecSpeedAverageMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetLastRampFinalSpeedMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetLastRampFinalSpeedMotor1_F), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetLastRampFinalSpeedMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetControlModeMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetControlModeMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetImposedDirectionMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetImposedDirectionMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetSpeedSensorReliabilityMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetSpeedSensorReliabilityMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetPhaseCurrentAmplitudeMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetPhaseCurrentAmplitudeMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetPhaseVoltageAmplitudeMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetPhaseVoltageAmplitudeMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetIabMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIabMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetIabMotor1_F), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIabMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetIalphabetaMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIalphabetaMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetIqdMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIqdMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetIqdMotor1_F), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIqdMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetIqdrefMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIqdrefMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetIqdrefMotor1_F), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetIqdrefMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_GetVqdMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetVqdMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetValphabetaMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetValphabetaMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetElAngledppMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetElAngledppMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetTerefMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetTerefMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetTerefMotor1_F), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetTerefMotor1_F), (8 bytes).
    Removing mc_api.o(.text.MC_Clear_IqdrefMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_Clear_IqdrefMotor1), (8 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_AcknowledgeFaultMotor1), (8 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetOccurredFaultsMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetCurrentFaultsMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetCurrentFaultsMotor1), (8 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetSTMStateMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_SetPolarizationOffsetsMotor1), (20 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_SetPolarizationOffsetsMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetPolarizationOffsetsMotor1), (20 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetPolarizationOffsetsMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_StartPolarizationOffsetsMeasurementMotor1), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_StartPolarizationOffsetsMeasurementMotor1), (8 bytes).
    Removing mc_api.o(.text.MC_GetAveragePowerMotor1_F), (16 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_GetAveragePowerMotor1_F), (8 bytes).
    Removing mc_api.o(.ARM.exidx.text.MC_ProfilerCommand), (8 bytes).
    Removing mc_config.o(.text), (0 bytes).
    Removing mcp_config.o(.text), (0 bytes).
    Removing pwm_curr_fdbk.o(.text), (0 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_Clear), (20 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_Clear), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_SetOffsetCalib), (12 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetOffsetCalib), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_GetOffsetCalib), (12 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetOffsetCalib), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetPhaseCurrents), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetPhaseVoltage), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SwitchOffPWM), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SwitchOnPWM), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_CurrentReadingCalibr), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_CalcPhaseCurrentsEst), (104 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_CalcPhaseCurrentsEst), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_TurnOnLowSides), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_TurnOnLowSides), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_CheckOverCurrent), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_OCPSetReferenceVoltage), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_OCPSetReferenceVoltage), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_GetTurnOnLowSidesAction), (6 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetTurnOnLowSidesAction), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_DPWM_ModeEnable), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_DPWM_ModeEnable), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_DPWM_ModeDisable), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_DPWM_ModeDisable), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_GetDPWM_Mode), (6 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_GetDPWM_Mode), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeEnable), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeEnable), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeDisable), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeDisable), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RLDetectionModeSetDuty), (8 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RLDetectionModeSetDuty), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_SetAlignFlag), (6 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_SetAlignFlag), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterGetPhaseCurrentsCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterGetPhaseCurrentsCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterSwitchOffPwmCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSwitchOffPwmCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterSwitchonPwmCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSwitchonPwmCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterReadingCalibrationCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterReadingCalibrationCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterTurnOnLowSidesCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterTurnOnLowSidesCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterSampPointSectXCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterSampPointSectXCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterIsOverCurrentOccurredCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterIsOverCurrentOccurredCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterOCPSetRefVoltageCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterOCPSetRefVoltageCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeEnableCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeEnableCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeDisableCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeDisableCallBack), (8 bytes).
    Removing pwm_curr_fdbk.o(.text.PWMC_RegisterRLDetectionModeSetDutyCallBack), (4 bytes).
    Removing pwm_curr_fdbk.o(.ARM.exidx.text.PWMC_RegisterRLDetectionModeSetDutyCallBack), (8 bytes).
    Removing regular_conversion_manager.o(.text), (0 bytes).
    Removing regular_conversion_manager.o(.text.RCM_RegisterRegConv_WithCB), (336 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_RegisterRegConv_WithCB), (8 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_RegisterRegConv), (8 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_ExecRegularConv), (8 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_RequestUserConv), (8 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_GetUserConv), (8 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_ExecUserConv), (8 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_GetUserConvState), (8 bytes).
    Removing regular_conversion_manager.o(.text.RCM_PauseRegularConv), (68 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_PauseRegularConv), (8 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_ExecNextConv), (8 bytes).
    Removing regular_conversion_manager.o(.ARM.exidx.text.RCM_ReadOngoingConv), (8 bytes).
    Removing mc_math.o(.text), (0 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_Clarke), (8 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_Park), (8 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_Trig_Functions), (8 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_Rev_Park), (8 bytes).
    Removing mc_math.o(.text.MCM_Sqrt), (256 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_Sqrt), (8 bytes).
    Removing mc_math.o(.text.MCM_floatToIntBit), (2 bytes).
    Removing mc_math.o(.ARM.exidx.text.MCM_floatToIntBit), (8 bytes).
    Removing mc_interface.o(.text), (0 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_Init), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_ExecSpeedRamp), (8 bytes).
    Removing mc_interface.o(.text.MCI_ExecSpeedRamp_F), (48 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_ExecSpeedRamp_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_ExecTorqueRamp), (8 bytes).
    Removing mc_interface.o(.text.MCI_ExecTorqueRamp_F), (36 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_ExecTorqueRamp_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_SetCurrentReferences), (8 bytes).
    Removing mc_interface.o(.text.MCI_SetCurrentReferences_F), (56 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_SetCurrentReferences_F), (8 bytes).
    Removing mc_interface.o(.text.MCI_SetSpeedMode), (26 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_SetSpeedMode), (8 bytes).
    Removing mc_interface.o(.text.MCI_SetOpenLoopCurrent), (26 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_SetOpenLoopCurrent), (8 bytes).
    Removing mc_interface.o(.text.MCI_SetOpenLoopVoltage), (24 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_SetOpenLoopVoltage), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StartMotor), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetSTMState), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetOccurredFaults), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetCurrentFaults), (8 bytes).
    Removing mc_interface.o(.text.MCI_StartWithMeasurementOffset), (56 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StartWithMeasurementOffset), (8 bytes).
    Removing mc_interface.o(.text.MCI_StartOffsetMeasurments), (56 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StartOffsetMeasurments), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetCalibratedOffsetsMotor), (24 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetCalibratedOffsetsMotor), (8 bytes).
    Removing mc_interface.o(.text.MCI_SetCalibratedOffsetsMotor), (58 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_SetCalibratedOffsetsMotor), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StopMotor), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_FaultAcknowledged), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_FaultProcessing), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_ExecBufferedCommands), (8 bytes).
    Removing mc_interface.o(.text.MCI_IsCommandAcknowledged), (18 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_IsCommandAcknowledged), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetFaultState), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetControlMode), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetImposedMotorDirection), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalSpeed), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalTorque), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalDuration), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetLastRampFinalSpeed_F), (24 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetLastRampFinalSpeed_F), (8 bytes).
    Removing mc_interface.o(.text.MCI_RampCompleted), (24 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_RampCompleted), (8 bytes).
    Removing mc_interface.o(.text.MCI_StopSpeedRamp), (10 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StopSpeedRamp), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_StopRamp), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetSpdSensorReliability), (14 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetSpdSensorReliability), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetAvrgMecSpeedUnit), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetAvrgMecSpeed_F), (22 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetAvrgMecSpeed_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetMecSpeedRefUnit), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetMecSpeedRef_F), (18 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetMecSpeedRef_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIab), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetIab_F), (68 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIab_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIalphabeta), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIqd), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetIqd_F), (68 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIqd_F), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetIqdHF), (12 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIqdHF), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIqdref), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetIqdref_F), (68 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetIqdref_F), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetVqd), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetValphabeta), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetElAngledpp), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetElAngledpp), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetTeref), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetTeref_F), (36 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetTeref_F), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetPhaseCurrentAmplitude), (40 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetPhaseCurrentAmplitude), (8 bytes).
    Removing mc_interface.o(.text.MCI_GetPhaseVoltageAmplitude), (40 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_GetPhaseVoltageAmplitude), (8 bytes).
    Removing mc_interface.o(.ARM.exidx.text.MCI_Clear_Iqdref), (8 bytes).
    Removing stm32g0xx_mc_it.o(.text), (0 bytes).
    Removing stm32g0xx_mc_it.o(.ARM.exidx.text.DMA1_Channel1_IRQHandler), (8 bytes).
    Removing stm32g0xx_mc_it.o(.ARM.exidx.text.TIM1_BRK_UP_TRG_COM_IRQHandler), (8 bytes).
    Removing stm32g0xx_mc_it.o(.ARM.exidx.text.DMA1_Channel2_3_IRQHandler), (8 bytes).
    Removing stm32g0xx_mc_it.o(.ARM.exidx.text.USART2_IRQHandler), (8 bytes).
    Removing stm32g0xx_mc_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing stm32g0xx_mc_it.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing stm32g0xx_mc_it.o(.ARM.exidx.text.EXTI4_15_IRQHandler), (8 bytes).
    Removing mc_tasks.o(.text), (0 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.MCboot), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.FOC_Clear), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.MC_RunMotorControlTasks), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.MC_Scheduler), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_SafetyTask), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_MF_StopProcessing), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_SetStopPermanencyTimeM1), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_MediumFrequencyTaskM1), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_SetChargeBootCapDelayM1), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_ChargeBootCapDelayHasElapsedM1), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.FOC_InitAdditionalMethods), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.FOC_CalcCurrRef), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_StopPermanencyTimeHasElapsedM1), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_HighFrequencyTask), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_SafetyTask_PWMOFF), (8 bytes).
    Removing mc_tasks.o(.text.GetMCI), (16 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.GetMCI), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.TSK_HardwareFaultTask), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.UI_HandleStartStopButton_cb), (8 bytes).
    Removing mc_tasks.o(.ARM.exidx.text.mc_lock_pins), (8 bytes).
    Removing mc_tasks.o(.bss.start_flag1), (1 bytes).
    Removing mc_tasks.o(.bss.start_flag2), (1 bytes).
    Removing mc_parameters.o(.text), (0 bytes).
    Removing register_interface.o(.text), (0 bytes).
    Removing register_interface.o(.ARM.exidx.text.RI_SetRegCommandParser), (8 bytes).
    Removing register_interface.o(.ARM.exidx.text.RI_GetRegCommandParser), (8 bytes).
    Removing register_interface.o(.ARM.exidx.text.RI_GetIDSize), (8 bytes).
    Removing register_interface.o(.ARM.exidx.text.RI_GetPtrReg), (8 bytes).
    Removing usart_aspep_driver.o(.text), (0 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_INIT), (8 bytes).
    Removing usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_TX), (76 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_DAMCONFIG_TX), (8 bytes).
    Removing usart_aspep_driver.o(.text.UASPEP_DAMCONFIG_RX), (84 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_DAMCONFIG_RX), (8 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_SEND_PACKET), (8 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_RECEIVE_BUFFER), (8 bytes).
    Removing usart_aspep_driver.o(.ARM.exidx.text.UASPEP_IDLE_ENABLE), (8 bytes).
    Removing mc_configuration_registers.o(.text), (0 bytes).
    Removing aspep.o(.text), (0 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_start), (8 bytes).
    Removing aspep.o(.text.ASPEP_sendBeacon), (136 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_sendBeacon), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_TXframeProcess), (8 bytes).
    Removing aspep.o(.text.ASPEP_sendPing), (144 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_sendPing), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_getBuffer), (8 bytes).
    Removing aspep.o(.text.ASPEP_CheckBeacon), (136 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_CheckBeacon), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_sendPacket), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_HWDataTransmittedIT), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_RXframeProcess), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_HWDataReceivedIT), (8 bytes).
    Removing aspep.o(.ARM.exidx.text.ASPEP_HWDMAReset), (8 bytes).
    Removing mc_app_hooks.o(.text), (0 bytes).
    Removing mc_app_hooks.o(.ARM.exidx.text.MC_APP_BootHook), (8 bytes).
    Removing mc_app_hooks.o(.ARM.exidx.text.MC_APP_PostMediumFrequencyHook_M1), (8 bytes).
    Removing stm32g0xx_it.o(.text), (0 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.TIM14_IRQHandler), (8 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.TIM17_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_msp.o(.text), (0 bytes).
    Removing stm32g0xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32g0xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_Base_MspInit), (8 bytes).
    Removing stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspDeInit), (80 bytes).
    Removing stm32g0xx_hal_msp.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit), (8 bytes).
    Removing watch_data.o(.text), (0 bytes).
    Removing user_logic.o(.text), (0 bytes).
    Removing user_logic.o(.text.UART_Emulator_Debug), (120 bytes).
    Removing user_logic.o(.ARM.exidx.text.UART_Emulator_Debug), (8 bytes).
    Removing user_logic.o(.ARM.exidx.text.User_Motor_Control_M1), (8 bytes).
    Removing user_logic.o(.ARM.exidx.text.UI_Process), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text), (0 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_Init1msTick), (32 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_mDelay), (68 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_mDelay), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI), (136 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem), (356 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE), (164 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_SetFlashLatency), (96 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency), (8 bytes).
    Removing stm32g0xx_ll_exti.o(.text), (0 bytes).
    Removing stm32g0xx_ll_exti.o(.text.LL_EXTI_DeInit), (44 bytes).
    Removing stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DeInit), (8 bytes).
    Removing stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_Init), (8 bytes).
    Removing stm32g0xx_ll_exti.o(.text.LL_EXTI_StructInit), (12 bytes).
    Removing stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_StructInit), (8 bytes).
    Removing stm32g0xx_ll_gpio.o(.text), (0 bytes).
    Removing stm32g0xx_ll_gpio.o(.text.LL_GPIO_DeInit), (108 bytes).
    Removing stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_DeInit), (8 bytes).
    Removing stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_Init), (8 bytes).
    Removing stm32g0xx_ll_gpio.o(.text.LL_GPIO_StructInit), (24 bytes).
    Removing stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_StructInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text), (0 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_CommonDeInit), (28 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonDeInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_CommonInit), (36 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_CommonStructInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonStructInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_DeInit), (460 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_DeInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_Init), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_StructInit), (16 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_StructInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_Init), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_REG_StructInit), (20 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_StructInit), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text), (0 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_DeInit), (224 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_DeInit), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_Init), (120 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_Init), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_StructInit), (10 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_StructInit), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text), (0 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_DeInit), (132 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq), (152 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq), (296 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq), (276 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq), (200 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2SClockFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq), (196 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetRTCClockFreq), (64 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRTCClockFreq), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text), (0 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_DeInit), (176 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig), (1052 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig), (520 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq), (136 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_MCOConfig), (88 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq), (40 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (152 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig), (52 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_EnableCSS), (20 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_EnableLSECSS), (16 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableLSECSS), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_DisableLSECSS), (16 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableLSECSS), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (44 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_LSECSSCallback), (2 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_LSECSSCallback), (8 bytes).
    Removing stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetResetSource), (28 bytes).
    Removing stm32g0xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetResetSource), (8 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text), (0 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig), (384 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (60 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq), (432 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnableLSCO), (152 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnableLSCO), (8 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisableLSCO), (92 bytes).
    Removing stm32g0xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisableLSCO), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text), (0 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_Program), (408 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.FLASH_WaitForLastOperation), (92 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_Program_IT), (344 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Program_IT), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_IRQHandler), (176 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_OperationErrorCallback), (2 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OperationErrorCallback), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_EndOfOperationCallback), (2 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_EndOfOperationCallback), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_Unlock), (40 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Unlock), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_Lock), (24 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_Lock), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_OB_Unlock), (40 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Unlock), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_OB_Lock), (24 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Lock), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_OB_Launch), (20 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_OB_Launch), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.text.HAL_FLASH_GetError), (12 bytes).
    Removing stm32g0xx_hal_flash.o(.ARM.exidx.text.HAL_FLASH_GetError), (8 bytes).
    Removing stm32g0xx_hal_flash.o(.bss.pFlash), (28 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text), (0 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase), (192 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase), (8 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text.FLASH_PageErase), (32 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_PageErase), (8 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_Erase_IT), (128 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_Erase_IT), (8 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBProgram), (224 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBProgram), (8 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_OBGetConfig), (84 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_OBGetConfig), (8 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_FlashEmptyCheck), (16 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_FlashEmptyCheck), (8 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text.HAL_FLASHEx_ForceFlashEmpty), (20 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.HAL_FLASHEx_ForceFlashEmpty), (8 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.text.FLASH_FlushCaches), (44 bytes).
    Removing stm32g0xx_hal_flash_ex.o(.ARM.exidx.text.FLASH_FlushCaches), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text), (0 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_ReadPin), (10 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin), (16 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_TogglePin), (16 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_LockPin), (40 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler), (40 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Rising_Callback), (2 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Rising_Callback), (8 bytes).
    Removing stm32g0xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Falling_Callback), (2 bytes).
    Removing stm32g0xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Falling_Callback), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text), (0 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_Init), (252 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_DeInit), (176 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_Start), (144 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_Start_IT), (204 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort), (120 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_Abort_IT), (120 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_PollForTransfer), (364 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_IRQHandler), (228 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_RegisterCallback), (70 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback), (102 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_GetState), (6 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState), (8 bytes).
    Removing stm32g0xx_hal_dma.o(.text.HAL_DMA_GetError), (4 bytes).
    Removing stm32g0xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError), (8 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text), (0 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxSync), (84 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ConfigMuxSync), (8 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_ConfigMuxRequestGenerator), (80 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ConfigMuxRequestGenerator), (8 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_EnableMuxRequestGenerator), (32 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_EnableMuxRequestGenerator), (8 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_DisableMuxRequestGenerator), (32 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_DisableMuxRequestGenerator), (8 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.text.HAL_DMAEx_MUX_IRQHandler), (96 bytes).
    Removing stm32g0xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MUX_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text), (0 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_DeInit), (24 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (20 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (20 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin), (28 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin), (24 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (76 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (64 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode), (36 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (16 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (16 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (16 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32g0xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (16 bytes).
    Removing stm32g0xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text), (0 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBatteryCharging), (28 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBatteryCharging), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBatteryCharging), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBatteryCharging), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableInternalWakeUpLine), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableInternalWakeUpLine), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableInternalWakeUpLine), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableInternalWakeUpLine), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableGPIOPullUp), (112 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullUp), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableGPIOPullUp), (96 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullUp), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableGPIOPullDown), (132 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableGPIOPullDown), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableGPIOPullDown), (64 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableGPIOPullDown), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnablePullUpPullDownConfig), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnablePullUpPullDownConfig), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisablePullUpPullDownConfig), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisablePullUpPullDownConfig), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown), (16 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown), (16 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange), (16 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling), (128 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowPowerRunMode), (20 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowPowerRunMode), (8 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowPowerRunMode), (112 bytes).
    Removing stm32g0xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowPowerRunMode), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text), (0 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ), (32 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SystemReset), (32 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_GetPriority), (52 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (24 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (28 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (24 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (28 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_MPU_Enable), (24 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_MPU_Disable), (16 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32g0xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion), (84 bytes).
    Removing stm32g0xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32g0xx_hal.o(.text), (0 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_MspInit), (2 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_DeInit), (36 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SetTickFreq), (36 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SuspendTick), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_ResumeTick), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetREVID), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetDEVID), (20 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster), (20 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableIOAnalogSwitchBooster), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster), (20 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableIOAnalogSwitchBooster), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableRemap), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableRemap), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableRemap), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableRemap), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_EnableClampingDiode), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_EnableClampingDiode), (8 bytes).
    Removing stm32g0xx_hal.o(.text.HAL_SYSCFG_DisableClampingDiode), (16 bytes).
    Removing stm32g0xx_hal.o(.ARM.exidx.text.HAL_SYSCFG_DisableClampingDiode), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text), (0 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_SetConfigLine), (176 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_SetConfigLine), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetConfigLine), (156 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetConfigLine), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_ClearConfigLine), (116 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearConfigLine), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_RegisterCallback), (34 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_RegisterCallback), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetHandle), (14 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetHandle), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_IRQHandler), (68 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_GetPending), (40 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetPending), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_ClearPending), (36 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearPending), (8 bytes).
    Removing stm32g0xx_hal_exti.o(.text.HAL_EXTI_GenerateSWI), (28 bytes).
    Removing stm32g0xx_hal_exti.o(.ARM.exidx.text.HAL_EXTI_GenerateSWI), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text), (0 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Init), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_MspInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_Base_SetConfig), (152 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_Base_SetConfig), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_DeInit), (80 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_DeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_MspDeInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_MspDeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start), (80 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Stop), (44 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Stop_IT), (60 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_DMA), (156 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Start_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedCplt), (30 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedCplt), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMAPeriodElapsedHalfCplt), (10 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMAPeriodElapsedHalfCplt), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMAError), (86 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMAError), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Stop_DMA), (72 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_Stop_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Init), (212 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Init), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_MspInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_DeInit), (80 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_MspDeInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_MspDeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start), (264 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd), (26 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_CCxChannelCmd), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Stop), (176 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_IT), (292 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Stop_IT), (196 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Start_DMA), (616 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Start_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseCplt), (104 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseCplt), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMADelayPulseHalfCplt), (56 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMADelayPulseHalfCplt), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_Stop_DMA), (284 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_Stop_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Init), (212 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Init), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_DeInit), (80 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_DeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_MspDeInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_MspDeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start), (264 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Stop), (176 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT), (292 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT), (196 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_DMA), (616 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Start_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_DMA), (284 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_Stop_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Init), (212 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Init), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_MspInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_DeInit), (80 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_DeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_MspDeInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_MspDeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start), (328 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Stop), (156 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT), (348 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Stop_IT), (184 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_DMA), (520 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Start_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMACaptureCplt), (112 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureCplt), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMACaptureHalfCplt), (56 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMACaptureHalfCplt), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Stop_DMA), (276 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_Stop_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init), (216 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Init), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_DeInit), (68 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_DeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspDeInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_MspDeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start), (120 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop), (136 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start_IT), (136 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Stop_IT), (152 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Init), (300 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Init), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_MspInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_DeInit), (68 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_DeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_MspDeInit), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_MspDeInit), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start), (148 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop), (148 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_IT), (182 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_IT), (184 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Start_DMA), (536 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Start_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_Stop_DMA), (216 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_Stop_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IRQHandler), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_DelayElapsedCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedCallback), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_ConfigChannel), (728 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_ConfigChannel), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_OC2_SetConfig), (136 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_OC2_SetConfig), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel), (380 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_ConfigChannel), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_TI1_SetConfig), (68 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_TI1_SetConfig), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel), (872 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_ConfigChannel), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_ConfigChannel), (532 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_ConfigChannel), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStart), (22 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStart), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiWriteStart), (360 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiWriteStart), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMATriggerCplt), (30 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerCplt), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_DMATriggerHalfCplt), (10 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_DMATriggerHalfCplt), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_WriteStop), (140 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_WriteStop), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStart), (22 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStart), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_MultiReadStart), (360 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_MultiReadStart), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurst_ReadStop), (140 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurst_ReadStop), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_GenerateEvent), (34 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GenerateEvent), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_ConfigOCrefClear), (268 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigOCrefClear), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_ETR_SetConfig), (22 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_ETR_SetConfig), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource), (348 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigClockSource), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_ConfigTI1Input), (16 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ConfigTI1Input), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro), (78 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.TIM_SlaveTimer_SetConfig), (212 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.TIM_SlaveTimer_SetConfig), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_SlaveConfigSynchro_IT), (78 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_SlaveConfigSynchro_IT), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_ReadCapturedValue), (56 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ReadCapturedValue), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedHalfCpltCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_CaptureHalfCpltCallback), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_CaptureHalfCpltCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_TriggerHalfCpltCallback), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_TriggerHalfCpltCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_ErrorCallback), (2 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_ErrorCallback), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_GetState), (6 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Base_GetState), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_GetState), (6 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OC_GetState), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_GetState), (6 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_PWM_GetState), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_GetState), (6 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_IC_GetState), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_GetState), (6 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_OnePulse_GetState), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_Encoder_GetState), (6 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_Encoder_GetState), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_GetActiveChannel), (4 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetActiveChannel), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_GetChannelState), (56 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_GetChannelState), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.text.HAL_TIM_DMABurstState), (6 bytes).
    Removing stm32g0xx_hal_tim.o(.ARM.exidx.text.HAL_TIM_DMABurstState), (8 bytes).
    Removing stm32g0xx_hal_tim.o(.rodata.cst16), (32 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text), (0 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Init), (196 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Init), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspInit), (2 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspInit), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_DeInit), (68 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_DeInit), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_MspDeInit), (2 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_MspDeInit), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start), (120 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop), (64 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_IT), (124 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_IT), (72 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Start_DMA), (188 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Start_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_Stop_DMA), (84 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_Stop_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start), (164 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop), (132 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_IT), (208 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_IT), (184 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Start_DMA), (380 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Start_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.TIM_DMADelayPulseNCplt), (104 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMADelayPulseNCplt), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.TIM_DMAErrorCCxN), (64 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.TIM_DMAErrorCCxN), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OCN_Stop_DMA), (192 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OCN_Stop_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start), (164 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop), (132 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_IT), (208 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_IT), (184 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Start_DMA), (380 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Start_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_PWMN_Stop_DMA), (192 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_PWMN_Stop_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start), (98 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop), (120 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Start_IT), (110 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Start_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_OnePulseN_Stop_IT), (136 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_OnePulseN_Stop_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent), (92 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_IT), (92 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_IT), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigCommutEvent_DMA), (124 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigCommutEvent_DMA), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationCplt), (16 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationCplt), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.TIMEx_DMACommutationHalfCplt), (16 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.TIMEx_DMACommutationHalfCplt), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization), (96 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_MasterConfigSynchronization), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime), (180 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakDeadTime), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakInput), (94 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ConfigBreakInput), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_RemapConfig), (40 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_RemapConfig), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_TISelection), (76 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_TISelection), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_GroupChannel5), (50 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GroupChannel5), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_DisarmBreakInput), (76 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_DisarmBreakInput), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_ReArmBreakInput), (146 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_ReArmBreakInput), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutCallback), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutHalfCpltCallback), (2 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_CommutHalfCpltCallback), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_BreakCallback), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_Break2Callback), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_HallSensor_GetState), (6 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_HallSensor_GetState), (8 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_GetChannelNState), (32 bytes).
    Removing stm32g0xx_hal_tim_ex.o(.ARM.exidx.text.HAL_TIMEx_GetChannelNState), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text), (0 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_DeInit), (148 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_DeInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_StructInit), (16 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_Init), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_OC_StructInit), (20 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_Init), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_IC_StructInit), (14 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_IC_Init), (226 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_Init), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_ENCODER_StructInit), (26 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_ENCODER_Init), (96 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_Init), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_StructInit), (12 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init), (88 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_Init), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_StructInit), (22 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_Init), (8 bytes).
    Removing stm32g0xx_ll_usart.o(.text), (0 bytes).
    Removing stm32g0xx_ll_usart.o(.text.LL_USART_DeInit), (72 bytes).
    Removing stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_DeInit), (8 bytes).
    Removing stm32g0xx_ll_usart.o(.text.LL_USART_Init), (264 bytes).
    Removing stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_Init), (8 bytes).
    Removing stm32g0xx_ll_usart.o(.text.LL_USART_StructInit), (24 bytes).
    Removing stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_StructInit), (8 bytes).
    Removing stm32g0xx_ll_usart.o(.text.LL_USART_ClockInit), (38 bytes).
    Removing stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockInit), (8 bytes).
    Removing stm32g0xx_ll_usart.o(.text.LL_USART_ClockStructInit), (12 bytes).
    Removing stm32g0xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockStructInit), (8 bytes).
    Removing system_stm32g0xx.o(.text), (0 bytes).
    Removing system_stm32g0xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32g0xx.o(.text.SystemCoreClockUpdate), (144 bytes).
    Removing system_stm32g0xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32g0xx.o(.rodata.AHBPrescTable), (64 bytes).
    Removing system_stm32g0xx.o(.rodata.APBPrescTable), (32 bytes).
    Removing bus_voltage_sensor.o(.text), (0 bytes).
    Removing bus_voltage_sensor.o(.text.VBS_GetBusVoltage_d), (4 bytes).
    Removing bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetBusVoltage_d), (8 bytes).
    Removing bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetAvBusVoltage_d), (8 bytes).
    Removing bus_voltage_sensor.o(.ARM.exidx.text.VBS_GetAvBusVoltage_V), (8 bytes).
    Removing bus_voltage_sensor.o(.text.VBS_CheckVbus), (4 bytes).
    Removing bus_voltage_sensor.o(.ARM.exidx.text.VBS_CheckVbus), (8 bytes).
    Removing circle_limitation.o(.text), (0 bytes).
    Removing circle_limitation.o(.ARM.exidx.text.Circle_Limitation), (8 bytes).
    Removing digital_output.o(.text), (0 bytes).
    Removing digital_output.o(.text.DOUT_SetOutputState), (36 bytes).
    Removing digital_output.o(.ARM.exidx.text.DOUT_SetOutputState), (8 bytes).
    Removing digital_output.o(.text.DOUT_GetOutputState), (4 bytes).
    Removing digital_output.o(.ARM.exidx.text.DOUT_GetOutputState), (8 bytes).
    Removing ntc_temperature_sensor.o(.text), (0 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_SetFaultState), (8 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_Init), (8 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_Clear), (8 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_CalcAvTemp), (8 bytes).
    Removing ntc_temperature_sensor.o(.text.NTC_GetAvTemp_d), (4 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_GetAvTemp_d), (8 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_GetAvTemp_C), (8 bytes).
    Removing ntc_temperature_sensor.o(.text.NTC_CheckTemp), (4 bytes).
    Removing ntc_temperature_sensor.o(.ARM.exidx.text.NTC_CheckTemp), (8 bytes).
    Removing open_loop.o(.text), (0 bytes).
    Removing open_loop.o(.text.OL_Init), (8 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_Init), (8 bytes).
    Removing open_loop.o(.text.OL_VqdConditioning), (4 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_VqdConditioning), (8 bytes).
    Removing open_loop.o(.text.OL_UpdateVoltage), (4 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_UpdateVoltage), (8 bytes).
    Removing open_loop.o(.text.OL_GetVoltage), (6 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_GetVoltage), (8 bytes).
    Removing open_loop.o(.text.OL_Calc), (30 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_Calc), (8 bytes).
    Removing open_loop.o(.text.OL_VF), (4 bytes).
    Removing open_loop.o(.ARM.exidx.text.OL_VF), (8 bytes).
    Removing pid_regulator.o(.text), (0 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_HandleInit), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKP), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKI), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKP), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKI), (8 bytes).
    Removing pid_regulator.o(.text.PID_GetDefaultKP), (6 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetDefaultKP), (8 bytes).
    Removing pid_regulator.o(.text.PID_GetDefaultKI), (6 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetDefaultKI), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetIntegralTerm), (8 bytes).
    Removing pid_regulator.o(.text.PID_GetKPDivisor), (4 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKPDivisor), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKPDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKPDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKIDivisor), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKIDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKIDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetUpperIntegralTermLimit), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetLowerIntegralTermLimit), (8 bytes).
    Removing pid_regulator.o(.text.PID_SetLowerOutputLimit), (4 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetLowerOutputLimit), (8 bytes).
    Removing pid_regulator.o(.text.PID_SetUpperOutputLimit), (4 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetUpperOutputLimit), (8 bytes).
    Removing pid_regulator.o(.text.PID_SetPrevError), (4 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetPrevError), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKD), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKD), (8 bytes).
    Removing pid_regulator.o(.text.PID_GetKDDivisor), (4 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKDDivisor), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_GetKDDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_SetKDDivisorPOW2), (8 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PI_Controller), (8 bytes).
    Removing pid_regulator.o(.text.PID_Controller), (66 bytes).
    Removing pid_regulator.o(.ARM.exidx.text.PID_Controller), (8 bytes).
    Removing pqd_motor_power_measurement.o(.text), (0 bytes).
    Removing pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_CalcElMotorPower), (8 bytes).
    Removing pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_Clear), (8 bytes).
    Removing pqd_motor_power_measurement.o(.ARM.exidx.text.PQD_GetAvrgElMotorPowerW), (8 bytes).
    Removing pqd_motor_power_measurement.o(.bss.ma), (4 bytes).
    Removing pqd_motor_power_measurement.o(.bss.mb), (4 bytes).
    Removing pqd_motor_power_measurement.o(.bss.mc), (4 bytes).
    Removing pwm_common.o(.text), (0 bytes).
    Removing pwm_common.o(.ARM.exidx.text.waitForPolarizationEnd), (8 bytes).
    Removing r_divider_bus_voltage_sensor.o(.text), (0 bytes).
    Removing r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_Init), (8 bytes).
    Removing r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_Clear), (8 bytes).
    Removing r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbusFilt), (316 bytes).
    Removing r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_CalcAvVbusFilt), (8 bytes).
    Removing r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_CheckFaultState), (8 bytes).
    Removing r_divider_bus_voltage_sensor.o(.ARM.exidx.text.RVBS_CalcAvVbus), (8 bytes).
    Removing ramp_ext_mngr.o(.text), (0 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_Init), (8 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_Calc), (8 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_ExecRamp), (8 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.getScalingFactor), (8 bytes).
    Removing ramp_ext_mngr.o(.text.REMNG_GetValue), (14 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_GetValue), (8 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_RampCompleted), (8 bytes).
    Removing ramp_ext_mngr.o(.text.REMNG_StopRamp), (8 bytes).
    Removing ramp_ext_mngr.o(.ARM.exidx.text.REMNG_StopRamp), (8 bytes).
    Removing revup_ctrl.o(.text), (0 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Init), (8 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Clear), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_OTF_Exec), (488 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_OTF_Exec), (8 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Exec), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_IsAlignStageNow), (18 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_IsAlignStageNow), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_Completed), (8 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Completed), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_Stop), (28 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Stop), (8 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_FirstAccelerationStageReached), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_SetPhaseDurationms), (10 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseDurationms), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_SetPhaseFinalMecSpeedUnit), (10 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseFinalMecSpeedUnit), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_SetPhaseFinalTorque), (10 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_SetPhaseFinalTorque), (8 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_SetPhase), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_GetPhaseDurationms), (10 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseDurationms), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_GetPhaseFinalMecSpeedUnit), (12 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseFinalMecSpeedUnit), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_GetPhaseFinalTorque), (12 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_GetPhaseFinalTorque), (8 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_GetNumberOfPhases), (8 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_GetPhase), (8 bytes).
    Removing revup_ctrl.o(.text.RUC_Get_SCLowsideOTF_Status), (6 bytes).
    Removing revup_ctrl.o(.ARM.exidx.text.RUC_Get_SCLowsideOTF_Status), (8 bytes).
    Removing speed_pos_fdbk.o(.text), (0 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElAngle), (8 bytes).
    Removing speed_pos_fdbk.o(.text.SPD_GetMecAngle), (4 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetMecAngle), (8 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetAvrgMecSpeedUnit), (8 bytes).
    Removing speed_pos_fdbk.o(.text.SPD_GetElSpeedDpp), (6 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElSpeedDpp), (8 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetInstElSpeedDpp), (8 bytes).
    Removing speed_pos_fdbk.o(.text.SPD_Check), (12 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_Check), (8 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_IsMecSpeedReliable), (8 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetS16Speed), (8 bytes).
    Removing speed_pos_fdbk.o(.text.SPD_GetElToMecRatio), (4 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_GetElToMecRatio), (8 bytes).
    Removing speed_pos_fdbk.o(.text.SPD_SetElToMecRatio), (4 bytes).
    Removing speed_pos_fdbk.o(.ARM.exidx.text.SPD_SetElToMecRatio), (8 bytes).
    Removing speed_torq_ctrl.o(.text), (0 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_Init), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_SetSpeedSensor), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetSpeedSensor), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_Clear), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMecSpeedRefUnit), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetTorqueRef), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_SetControlMode), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_GetControlMode), (4 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetControlMode), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_ExecRamp), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_StopRamp), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_CalcTorqueReference), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnitDefault), (6 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMecSpeedRefUnitDefault), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_GetMaxAppPositiveMecSpeedUnit), (4 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMaxAppPositiveMecSpeedUnit), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_GetMinAppNegativeMecSpeedUnit), (6 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetMinAppNegativeMecSpeedUnit), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_RampCompleted), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_RampCompleted), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_StopSpeedRamp), (18 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_StopSpeedRamp), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_GetDefaultIqdref), (8 bytes).
    Removing speed_torq_ctrl.o(.text.STC_SetNominalCurrent), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_SetNominalCurrent), (8 bytes).
    Removing speed_torq_ctrl.o(.ARM.exidx.text.STC_ForceSpeedReferenceToCurrentSpeed), (8 bytes).
    Removing speed_torq_ctrl.o(.bss.speed_pi_swich), (1 bytes).
    Removing speed_torq_ctrl.o(.bss.speed_pi_iq), (2 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text), (0 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_Init), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_Clear), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Return), (2 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_Return), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_CalcElAngle), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_CalcAvrgMecSpeedUnit), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_CalcAvrgElSpeedDpp), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_IsObserverConverged), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetEstimatedBemf), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetEstimatedCurrent), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetObserverGains), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_SetObserverGains), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_GetPLLGains), (28 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_GetPLLGains), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_SetPLLGains), (24 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_SetPLLGains), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_PLL_SetMecAngle), (2 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_SetMecAngle), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_OTF_ResetPLL), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_ResetPLL), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_SetPLL), (36 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_SetPLL), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetEstimatedBemfLevel), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_GetObservedBemfLevel), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_PLL_BemfConsistencyCheckSwitch), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_BemfConsistencyCheckSwitch), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsBemfConsistent), (6 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_IsBemfConsistent), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_IsVarianceTight), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_ForceConvergency1), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_PLL_ForceConvergency2), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_SetMinStartUpValidSpeedUnit), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_SetMinStartUpValidSpeedUnit), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.text.STO_SetDirection), (8 bytes).
    Removing sto_pll_speed_pos_fdbk.o(.ARM.exidx.text.STO_SetDirection), (8 bytes).
    Removing virtual_speed_sensor.o(.text), (0 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_Init), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_Clear), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_CalcElAngle), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_CalcAvrgMecSpeedUnit), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetMecAngle), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetMecAcceleration), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_RampCompleted), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_RampCompleted), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_GetLastRampFinalSpeed), (6 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_GetLastRampFinalSpeed), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetStartTransition), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_IsTransitionOngoing), (16 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_IsTransitionOngoing), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_TransitionEnded), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_SetCopyObserver), (8 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetCopyObserver), (8 bytes).
    Removing virtual_speed_sensor.o(.text.VSS_SetElAngle), (6 bytes).
    Removing virtual_speed_sensor.o(.ARM.exidx.text.VSS_SetElAngle), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.text), (0 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_Init), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetOffsetCalib), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetOffsetCalib), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_CurrentReadingCalibration), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_HFCurrentsCalibrationAB), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointCalibration), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SwitchOnPWM), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SwitchOffPWM), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_HFCurrentsCalibrationC), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetPhaseCurrents), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents_OVM), (608 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_GetPhaseCurrents_OVM), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_WriteTIMRegisters), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointSectX), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX_OVM), (120 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_SetADCSampPointSectX_OVM), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_TurnOnLowSides), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_TIMx_UP_IRQHandler), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_OVERCURRENT_IRQHandler), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_OVERVOLTAGE_IRQHandler), (8 bytes).
    Removing r3_g0xx_pwm_curr_fdbk.o(.ARM.exidx.text.R3_1_IsOverCurrentOccurred), (8 bytes).
    Removing mcp.o(.text), (0 bytes).
    Removing mcp.o(.ARM.exidx.text.MCP_ReceivedPacket), (8 bytes).
    Removing mcp.o(.text.MCP_RegisterCallBack), (24 bytes).
    Removing mcp.o(.ARM.exidx.text.MCP_RegisterCallBack), (8 bytes).
    Removing mcpa.o(.text), (0 bytes).
    Removing mcpa.o(.ARM.exidx.text.MCPA_dataLog), (8 bytes).
    Removing mcpa.o(.ARM.exidx.text.MCPA_flushDataLog), (8 bytes).
    Removing mcpa.o(.ARM.exidx.text.MCPA_cfgLog), (8 bytes).
    Removing flux_weakening_ctrl.o(.text), (0 bytes).
    Removing flux_weakening_ctrl.o(.text.FW_Init), (10 bytes).
    Removing flux_weakening_ctrl.o(.ARM.exidx.text.FW_Init), (8 bytes).
    Removing flux_weakening_ctrl.o(.text.FW_Clear), (24 bytes).
    Removing flux_weakening_ctrl.o(.ARM.exidx.text.FW_Clear), (8 bytes).
    Removing flux_weakening_ctrl.o(.text.FW_CalcCurrRef), (176 bytes).
    Removing flux_weakening_ctrl.o(.ARM.exidx.text.FW_CalcCurrRef), (8 bytes).
    Removing flux_weakening_ctrl.o(.text.FW_DataProcess), (38 bytes).
    Removing flux_weakening_ctrl.o(.ARM.exidx.text.FW_DataProcess), (8 bytes).
    Removing flux_weakening_ctrl.o(.text.FW_SetVref), (4 bytes).
    Removing flux_weakening_ctrl.o(.ARM.exidx.text.FW_SetVref), (8 bytes).
    Removing flux_weakening_ctrl.o(.text.FW_GetVref), (4 bytes).
    Removing flux_weakening_ctrl.o(.ARM.exidx.text.FW_GetVref), (8 bytes).
    Removing flux_weakening_ctrl.o(.text.FW_GetAvVAmplitude), (6 bytes).
    Removing flux_weakening_ctrl.o(.ARM.exidx.text.FW_GetAvVAmplitude), (8 bytes).
    Removing flux_weakening_ctrl.o(.text.FW_GetAvVPercentage), (24 bytes).
    Removing flux_weakening_ctrl.o(.ARM.exidx.text.FW_GetAvVPercentage), (8 bytes).
    Removing led_key.o(.text), (0 bytes).
    Removing led_key.o(.text.check_key_state), (104 bytes).
    Removing led_key.o(.ARM.exidx.text.check_key_state), (8 bytes).
    Removing led_key.o(.ARM.exidx.text.get_key_state), (8 bytes).
    Removing led_key.o(.ARM.exidx.text.exe_key_func), (8 bytes).
    Removing led_key.o(.ARM.exidx.text.led_clear), (8 bytes).
    Removing led_key.o(.ARM.exidx.text.led_show_err), (8 bytes).
    Removing led_key.o(.ARM.exidx.text.led_show_function), (8 bytes).
    Removing adc_cin.o(.text), (0 bytes).
    Removing adc_cin.o(.ARM.exidx.text.ADC_CIN_INIT), (8 bytes).
    Removing adc_cin.o(.ARM.exidx.text.GET_ADC_CIN_Digital), (8 bytes).
    Removing adc_cin.o(.ARM.exidx.text.ADC_VTS_INIT), (8 bytes).
    Removing adc_cin.o(.ARM.exidx.text.GET_ADC_VTS_Voltage), (8 bytes).
    Removing pwm_mode.o(.text), (0 bytes).
    Removing pwm_mode.o(.ARM.exidx.text.pwm_mode_init), (8 bytes).
    Removing pwm_mode.o(.text.pwminput_gpio_init), (120 bytes).
    Removing pwm_mode.o(.ARM.exidx.text.pwminput_gpio_init), (8 bytes).
    Removing pwm_mode.o(.text.pwmoutput_gpio_init), (56 bytes).
    Removing pwm_mode.o(.ARM.exidx.text.pwmoutput_gpio_init), (8 bytes).
    Removing pwm_mode.o(.text.pwm_output_config), (196 bytes).
    Removing pwm_mode.o(.ARM.exidx.text.pwm_output_config), (8 bytes).
    Removing pwm_mode.o(.text.set_pwm_output), (20 bytes).
    Removing pwm_mode.o(.ARM.exidx.text.set_pwm_output), (8 bytes).
    Removing pwm_mode.o(.ARM.exidx.text.HAL_TIM_PeriodElapsedCallback), (8 bytes).
    Removing pwm_mode.o(.ARM.exidx.text.get_duty_period), (8 bytes).
    Removing pwm_mode.o(.ARM.exidx.text.pwm_speed_control), (8 bytes).
    Removing usart_handle.o(.text), (0 bytes).
    Removing lin.o(.text), (0 bytes).
    Removing lin.o(.text.Lin_SendBreak), (16 bytes).
    Removing lin.o(.ARM.exidx.text.Lin_SendBreak), (8 bytes).
    Removing lin.o(.text.Lin_SendSyncSegment), (36 bytes).
    Removing lin.o(.ARM.exidx.text.Lin_SendSyncSegment), (8 bytes).
    Removing lin.o(.text.Lin_CheckPID), (38 bytes).
    Removing lin.o(.ARM.exidx.text.Lin_CheckPID), (8 bytes).
    Removing lin.o(.text.Lin_SendHead), (108 bytes).
    Removing lin.o(.ARM.exidx.text.Lin_SendHead), (8 bytes).
    Removing lin.o(.ARM.exidx.text.Lin_Checksum), (8 bytes).
    Removing lin.o(.text.Lin_SentData), (232 bytes).
    Removing lin.o(.ARM.exidx.text.Lin_SentData), (8 bytes).
    Removing lin.o(.text.Lin_SendAnswer), (264 bytes).
    Removing lin.o(.ARM.exidx.text.Lin_SendAnswer), (8 bytes).
    Removing lin.o(.text.Lin_DataProcess), (160 bytes).
    Removing lin.o(.ARM.exidx.text.Lin_DataProcess), (8 bytes).
    Removing lin.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing lin.o(.bss.DataReceiveflag), (1 bytes).
    Removing app_error.o(.text), (0 bytes).
    Removing app_error.o(.text.error_check_init), (2 bytes).
    Removing app_error.o(.ARM.exidx.text.error_check_init), (8 bytes).
    Removing app_error.o(.ARM.exidx.text.error_check), (8 bytes).
    Removing app_error.o(.ARM.exidx.text.error_mode_init), (8 bytes).
    Removing app_error.o(.ARM.exidx.text.error_mode_tick), (8 bytes).
    Removing app_error.o(.bss.vts), (4 bytes).
    Removing app_handle.o(.text), (0 bytes).
    Removing app_handle.o(.ARM.exidx.text.work_mode_init), (8 bytes).
    Removing app_handle.o(.ARM.exidx.text.work_mode_perfrom), (8 bytes).
    Removing app_handle.o(.ARM.exidx.text.work_mode_switch), (8 bytes).
    Removing app_mode.o(.text), (0 bytes).
    Removing app_mode.o(.text.myabs), (10 bytes).
    Removing app_mode.o(.ARM.exidx.text.myabs), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_standby_init), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_standby_tick), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_auto_init), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_auto_tick), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_speed_init), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_speed_tick), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_pressure_5m_init), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_pressure_5m_tick), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_pressure_7m_init), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_pressure_7m_tick), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_pressure_9m_init), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_pressure_9m_tick), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_max_power_12m_init), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_max_power_12m_tick), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_pwm_init), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_pwm_tick), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_error_init), (8 bytes).
    Removing app_mode.o(.ARM.exidx.text.mode_error_tick), (8 bytes).
    Removing app_mode.o(.data.mspeed), (4 bytes).
    Removing app_mode.o(.bss.speedmode), (4 bytes).
    Removing app_mode.o(.bss.mrx_data), (1 bytes).
    Removing handle_console_pid.o(.text), (0 bytes).

1405 unused section(s) (total 49157 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl2.c          0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/longlong.c                       0x00000000   Number         0  llmul.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/d2f.c                    0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/cfplib/ddiv.c                   0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/cfplib/dmul.c                   0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/cfplib/fdiv.c                   0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  ffixi.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  ffixui.o ABSOLUTE
    ../fplib/cfplib/fflt.c                   0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/cfplib/fflt.c                   0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/faddsub6m.s                     0x00000000   Number         0  faddsub.o ABSOLUTE
    ../fplib/fmul6m.s                        0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    User_Logic.c                             0x00000000   Number         0  user_logic.o ABSOLUTE
    adc_cin.c                                0x00000000   Number         0  adc_cin.o ABSOLUTE
    app_error.c                              0x00000000   Number         0  app_error.o ABSOLUTE
    app_handle.c                             0x00000000   Number         0  app_handle.o ABSOLUTE
    app_mode.c                               0x00000000   Number         0  app_mode.o ABSOLUTE
    aspep.c                                  0x00000000   Number         0  aspep.o ABSOLUTE
    bus_voltage_sensor.c                     0x00000000   Number         0  bus_voltage_sensor.o ABSOLUTE
    circle_limitation.c                      0x00000000   Number         0  circle_limitation.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    digital_output.c                         0x00000000   Number         0  digital_output.o ABSOLUTE
    flux_weakening_ctrl.c                    0x00000000   Number         0  flux_weakening_ctrl.o ABSOLUTE
    handle_console_pid.c                     0x00000000   Number         0  handle_console_pid.o ABSOLUTE
    led_key.c                                0x00000000   Number         0  led_key.o ABSOLUTE
    lin.c                                    0x00000000   Number         0  lin.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    mc_api.c                                 0x00000000   Number         0  mc_api.o ABSOLUTE
    mc_app_hooks.c                           0x00000000   Number         0  mc_app_hooks.o ABSOLUTE
    mc_config.c                              0x00000000   Number         0  mc_config.o ABSOLUTE
    mc_configuration_registers.c             0x00000000   Number         0  mc_configuration_registers.o ABSOLUTE
    mc_interface.c                           0x00000000   Number         0  mc_interface.o ABSOLUTE
    mc_math.c                                0x00000000   Number         0  mc_math.o ABSOLUTE
    mc_parameters.c                          0x00000000   Number         0  mc_parameters.o ABSOLUTE
    mc_tasks.c                               0x00000000   Number         0  mc_tasks.o ABSOLUTE
    mcp.c                                    0x00000000   Number         0  mcp.o ABSOLUTE
    mcp_config.c                             0x00000000   Number         0  mcp_config.o ABSOLUTE
    mcpa.c                                   0x00000000   Number         0  mcpa.o ABSOLUTE
    motorcontrol.c                           0x00000000   Number         0  motorcontrol.o ABSOLUTE
    ntc_temperature_sensor.c                 0x00000000   Number         0  ntc_temperature_sensor.o ABSOLUTE
    open_loop.c                              0x00000000   Number         0  open_loop.o ABSOLUTE
    pid_regulator.c                          0x00000000   Number         0  pid_regulator.o ABSOLUTE
    pqd_motor_power_measurement.c            0x00000000   Number         0  pqd_motor_power_measurement.o ABSOLUTE
    pwm_common.c                             0x00000000   Number         0  pwm_common.o ABSOLUTE
    pwm_curr_fdbk.c                          0x00000000   Number         0  pwm_curr_fdbk.o ABSOLUTE
    pwm_mode.c                               0x00000000   Number         0  pwm_mode.o ABSOLUTE
    r3_g0xx_pwm_curr_fdbk.c                  0x00000000   Number         0  r3_g0xx_pwm_curr_fdbk.o ABSOLUTE
    r_divider_bus_voltage_sensor.c           0x00000000   Number         0  r_divider_bus_voltage_sensor.o ABSOLUTE
    ramp_ext_mngr.c                          0x00000000   Number         0  ramp_ext_mngr.o ABSOLUTE
    register_interface.c                     0x00000000   Number         0  register_interface.o ABSOLUTE
    regular_conversion_manager.c             0x00000000   Number         0  regular_conversion_manager.o ABSOLUTE
    revup_ctrl.c                             0x00000000   Number         0  revup_ctrl.o ABSOLUTE
    speed_pos_fdbk.c                         0x00000000   Number         0  speed_pos_fdbk.o ABSOLUTE
    speed_torq_ctrl.c                        0x00000000   Number         0  speed_torq_ctrl.o ABSOLUTE
    startup_stm32g030xx.s                    0x00000000   Number         0  startup_stm32g030xx.o ABSOLUTE
    stm32g0xx_hal.c                          0x00000000   Number         0  stm32g0xx_hal.o ABSOLUTE
    stm32g0xx_hal_cortex.c                   0x00000000   Number         0  stm32g0xx_hal_cortex.o ABSOLUTE
    stm32g0xx_hal_dma.c                      0x00000000   Number         0  stm32g0xx_hal_dma.o ABSOLUTE
    stm32g0xx_hal_dma_ex.c                   0x00000000   Number         0  stm32g0xx_hal_dma_ex.o ABSOLUTE
    stm32g0xx_hal_exti.c                     0x00000000   Number         0  stm32g0xx_hal_exti.o ABSOLUTE
    stm32g0xx_hal_flash.c                    0x00000000   Number         0  stm32g0xx_hal_flash.o ABSOLUTE
    stm32g0xx_hal_flash_ex.c                 0x00000000   Number         0  stm32g0xx_hal_flash_ex.o ABSOLUTE
    stm32g0xx_hal_gpio.c                     0x00000000   Number         0  stm32g0xx_hal_gpio.o ABSOLUTE
    stm32g0xx_hal_msp.c                      0x00000000   Number         0  stm32g0xx_hal_msp.o ABSOLUTE
    stm32g0xx_hal_pwr.c                      0x00000000   Number         0  stm32g0xx_hal_pwr.o ABSOLUTE
    stm32g0xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32g0xx_hal_pwr_ex.o ABSOLUTE
    stm32g0xx_hal_rcc.c                      0x00000000   Number         0  stm32g0xx_hal_rcc.o ABSOLUTE
    stm32g0xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32g0xx_hal_rcc_ex.o ABSOLUTE
    stm32g0xx_hal_tim.c                      0x00000000   Number         0  stm32g0xx_hal_tim.o ABSOLUTE
    stm32g0xx_hal_tim_ex.c                   0x00000000   Number         0  stm32g0xx_hal_tim_ex.o ABSOLUTE
    stm32g0xx_it.c                           0x00000000   Number         0  stm32g0xx_it.o ABSOLUTE
    stm32g0xx_ll_adc.c                       0x00000000   Number         0  stm32g0xx_ll_adc.o ABSOLUTE
    stm32g0xx_ll_dma.c                       0x00000000   Number         0  stm32g0xx_ll_dma.o ABSOLUTE
    stm32g0xx_ll_exti.c                      0x00000000   Number         0  stm32g0xx_ll_exti.o ABSOLUTE
    stm32g0xx_ll_gpio.c                      0x00000000   Number         0  stm32g0xx_ll_gpio.o ABSOLUTE
    stm32g0xx_ll_rcc.c                       0x00000000   Number         0  stm32g0xx_ll_rcc.o ABSOLUTE
    stm32g0xx_ll_tim.c                       0x00000000   Number         0  stm32g0xx_ll_tim.o ABSOLUTE
    stm32g0xx_ll_usart.c                     0x00000000   Number         0  stm32g0xx_ll_usart.o ABSOLUTE
    stm32g0xx_ll_utils.c                     0x00000000   Number         0  stm32g0xx_ll_utils.o ABSOLUTE
    stm32g0xx_mc_it.c                        0x00000000   Number         0  stm32g0xx_mc_it.o ABSOLUTE
    sto_pll_speed_pos_fdbk.c                 0x00000000   Number         0  sto_pll_speed_pos_fdbk.o ABSOLUTE
    system_stm32g0xx.c                       0x00000000   Number         0  system_stm32g0xx.o ABSOLUTE
    usart_aspep_driver.c                     0x00000000   Number         0  usart_aspep_driver.o ABSOLUTE
    usart_handle.c                           0x00000000   Number         0  usart_handle.o ABSOLUTE
    virtual_speed_sensor.c                   0x00000000   Number         0  virtual_speed_sensor.o ABSOLUTE
    watch_data.c                             0x00000000   Number         0  watch_data.o ABSOLUTE
    RESET                                    0x08000000   Section      192  startup_stm32g030xx.o(RESET)
    !!!main                                  0x080000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000c8   Section       60  __scatter.o(!!!scatter)
    !!handler_zi                             0x08000104   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000120   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x08000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x08000122   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000124   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000126   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000128   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000128   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000128   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0800012e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0800012e   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000132   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000132   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800013a   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0800013c   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0800013c   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000140   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x08000148   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x08000180   Section       76  startup_stm32g030xx.o(.text)
    .text                                    0x080001cc   Section        0  llmul.o(.text)
    .text                                    0x080001fc   Section        0  rt_memcpy.o(.text)
    .text                                    0x0800027e   Section        0  rt_memclr.o(.text)
    .text                                    0x080002be   Section        0  heapauxi.o(.text)
    .text                                    0x080002c4   Section        0  d2f.o(.text)
    .text                                    0x08000340   Section        0  ddiv.o(.text)
    .text                                    0x08000788   Section        0  dfixi.o(.text)
    .text                                    0x080007f4   Section        0  dflti.o(.text)
    .text                                    0x0800084c   Section        0  dmul.o(.text)
    .text                                    0x08000a94   Section        0  fdiv.o(.text)
    .text                                    0x08000bf4   Section        0  ffixi.o(.text)
    .text                                    0x08000c40   Section        0  ffixui.o(.text)
    .text                                    0x08000c70   Section        0  fflti.o(.text)
    .text                                    0x08000cce   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x08000d0c   Section        0  exit.o(.text)
    .text                                    0x08000d1c   Section        8  libspace.o(.text)
    .text                                    0x08000d24   Section        0  __dczerorl2.o(.text)
    [Anonymous Symbol]                       0x08000d7c   Section        0  adc_cin.o(.text.ADC_CIN_INIT)
    [Anonymous Symbol]                       0x08000dc8   Section        0  adc_cin.o(.text.ADC_VTS_INIT)
    __arm_cp.2_0                             0x08000e14   Number         4  adc_cin.o(.text.ADC_VTS_INIT)
    __arm_cp.2_1                             0x08000e18   Number         4  adc_cin.o(.text.ADC_VTS_INIT)
    __arm_cp.2_2                             0x08000e1c   Number         4  adc_cin.o(.text.ADC_VTS_INIT)
    __arm_cp.2_3                             0x08000e20   Number         4  adc_cin.o(.text.ADC_VTS_INIT)
    [Anonymous Symbol]                       0x08000e24   Section        0  aspep.o(.text.ASPEP_HWDMAReset)
    [Anonymous Symbol]                       0x08000e3c   Section        0  aspep.o(.text.ASPEP_HWDataReceivedIT)
    __arm_cp.9_0                             0x08000ec8   Number         4  aspep.o(.text.ASPEP_HWDataReceivedIT)
    [Anonymous Symbol]                       0x08000ecc   Section        0  aspep.o(.text.ASPEP_HWDataTransmittedIT)
    [Anonymous Symbol]                       0x08000f70   Section        0  aspep.o(.text.ASPEP_RXframeProcess)
    __arm_cp.8_6                             0x0800135c   Number         4  aspep.o(.text.ASPEP_RXframeProcess)
    ASPEP_TXframeProcess                     0x08001539   Thumb Code   224  aspep.o(.text.ASPEP_TXframeProcess)
    [Anonymous Symbol]                       0x08001538   Section        0  aspep.o(.text.ASPEP_TXframeProcess)
    __arm_cp.2_0                             0x08001618   Number         4  aspep.o(.text.ASPEP_TXframeProcess)
    __arm_cp.2_1                             0x0800161c   Number         4  aspep.o(.text.ASPEP_TXframeProcess)
    [Anonymous Symbol]                       0x08001620   Section        0  aspep.o(.text.ASPEP_getBuffer)
    [Anonymous Symbol]                       0x08001678   Section        0  aspep.o(.text.ASPEP_sendPacket)
    [Anonymous Symbol]                       0x080016c6   Section        0  aspep.o(.text.ASPEP_start)
    [Anonymous Symbol]                       0x080016ec   Section        0  circle_limitation.o(.text.Circle_Limitation)
    __arm_cp.0_0                             0x08001764   Number         4  circle_limitation.o(.text.Circle_Limitation)
    __arm_cp.0_1                             0x08001768   Number         4  circle_limitation.o(.text.Circle_Limitation)
    [Anonymous Symbol]                       0x0800176c   Section        0  stm32g0xx_mc_it.o(.text.DMA1_Channel1_IRQHandler)
    __arm_cp.0_0                             0x0800177c   Number         4  stm32g0xx_mc_it.o(.text.DMA1_Channel1_IRQHandler)
    [Anonymous Symbol]                       0x08001780   Section        0  stm32g0xx_mc_it.o(.text.DMA1_Channel2_3_IRQHandler)
    __arm_cp.2_0                             0x08001798   Number         4  stm32g0xx_mc_it.o(.text.DMA1_Channel2_3_IRQHandler)
    __arm_cp.2_1                             0x0800179c   Number         4  stm32g0xx_mc_it.o(.text.DMA1_Channel2_3_IRQHandler)
    [Anonymous Symbol]                       0x080017a0   Section        0  stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.6_1                             0x08001850   Number         4  stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.6_2                             0x08001854   Number         4  stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.6_3                             0x08001858   Number         4  stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.6_4                             0x0800185c   Number         4  stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.6_5                             0x08001860   Number         4  stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.6_6                             0x08001864   Number         4  stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.6_7                             0x08001868   Number         4  stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler)
    [Anonymous Symbol]                       0x0800186c   Section        0  mc_tasks.o(.text.FOC_CalcCurrRef)
    [Anonymous Symbol]                       0x08001890   Section        0  mc_tasks.o(.text.FOC_Clear)
    __arm_cp.1_0                             0x080018e0   Number         4  mc_tasks.o(.text.FOC_Clear)
    __arm_cp.1_1                             0x080018e4   Number         4  mc_tasks.o(.text.FOC_Clear)
    __arm_cp.1_2                             0x080018e8   Number         4  mc_tasks.o(.text.FOC_Clear)
    __arm_cp.1_3                             0x080018ec   Number         4  mc_tasks.o(.text.FOC_Clear)
    [Anonymous Symbol]                       0x080018f0   Section        0  mc_tasks.o(.text.FOC_InitAdditionalMethods)
    [Anonymous Symbol]                       0x080018f4   Section        0  adc_cin.o(.text.GET_ADC_CIN_Digital)
    [Anonymous Symbol]                       0x08001928   Section        0  adc_cin.o(.text.GET_ADC_VTS_Voltage)
    __arm_cp.3_0                             0x08001978   Number         4  adc_cin.o(.text.GET_ADC_VTS_Voltage)
    __arm_cp.3_1                             0x0800197c   Number         4  adc_cin.o(.text.GET_ADC_VTS_Voltage)
    __arm_cp.3_2                             0x08001980   Number         4  adc_cin.o(.text.GET_ADC_VTS_Voltage)
    __arm_cp.3_3                             0x08001984   Number         4  adc_cin.o(.text.GET_ADC_VTS_Voltage)
    [Anonymous Symbol]                       0x08001988   Section        0  stm32g0xx_hal.o(.text.HAL_Delay)
    [Anonymous Symbol]                       0x080019a8   Section        0  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_DeInit)
    __arm_cp.1_1                             0x08001ab4   Number         4  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_DeInit)
    [Anonymous Symbol]                       0x08001ab8   Section        0  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init)
    __arm_cp.0_0                             0x08001c68   Number         4  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init)
    __arm_cp.0_1                             0x08001c6c   Number         4  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init)
    __arm_cp.0_2                             0x08001c70   Number         4  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init)
    __arm_cp.0_3                             0x08001c74   Number         4  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init)
    __arm_cp.0_4                             0x08001c78   Number         4  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init)
    [Anonymous Symbol]                       0x08001c7c   Section        0  stm32g0xx_hal.o(.text.HAL_GetTick)
    [Anonymous Symbol]                       0x08001c84   Section        0  stm32g0xx_hal.o(.text.HAL_IncTick)
    __arm_cp.5_1                             0x08001c94   Number         4  stm32g0xx_hal.o(.text.HAL_IncTick)
    [Anonymous Symbol]                       0x08001c98   Section        0  stm32g0xx_hal.o(.text.HAL_Init)
    __arm_cp.0_0                             0x08001cc0   Number         4  stm32g0xx_hal.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x08001cc4   Section        0  stm32g0xx_hal.o(.text.HAL_InitTick)
    __arm_cp.1_0                             0x08001d04   Number         4  stm32g0xx_hal.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x08001d08   Section        0  stm32g0xx_hal_msp.o(.text.HAL_MspInit)
    __arm_cp.0_0                             0x08001d30   Number         4  stm32g0xx_hal_msp.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x08001d34   Section        0  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    __arm_cp.1_0                             0x08001d48   Number         4  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08001d4c   Section        0  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    __arm_cp.0_0                             0x08001d84   Number         4  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    __arm_cp.0_1                             0x08001d88   Number         4  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    [Anonymous Symbol]                       0x08001d8c   Section        0  stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    __arm_cp.5_0                             0x08001d94   Number         4  stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    [Anonymous Symbol]                       0x08001d98   Section        0  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Callback)
    [Anonymous Symbol]                       0x08001d9c   Section        0  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config)
    __arm_cp.4_0                             0x08001dc4   Number         4  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config)
    __arm_cp.4_1                             0x08001dc8   Number         4  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config)
    __arm_cp.4_2                             0x08001dcc   Number         4  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config)
    [Anonymous Symbol]                       0x08001dd0   Section        0  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler)
    [Anonymous Symbol]                       0x08001dd8   Section        0  stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback)
    [Anonymous Symbol]                       0x08001dda   Section        0  stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback)
    [Anonymous Symbol]                       0x08001ddc   Section        0  stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback)
    [Anonymous Symbol]                       0x08001de0   Section        0  stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    __arm_cp.0_2                             0x08001e9c   Number         4  stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    [Anonymous Symbol]                       0x08001ea0   Section        0  stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspInit)
    __arm_cp.1_0                             0x08001f10   Number         4  stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspInit)
    __arm_cp.1_1                             0x08001f14   Number         4  stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspInit)
    __arm_cp.1_2                             0x08001f18   Number         4  stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspInit)
    [Anonymous Symbol]                       0x08001f1c   Section        0  stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT)
    __arm_cp.7_0                             0x08001f68   Number         4  stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT)
    __arm_cp.7_1                             0x08001f6c   Number         4  stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT)
    __arm_cp.7_2                             0x08001f70   Number         4  stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT)
    [Anonymous Symbol]                       0x08001f74   Section        0  stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback)
    [Anonymous Symbol]                       0x08001f78   Section        0  stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    __arm_cp.67_0                            0x080020d8   Number         4  stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    [Anonymous Symbol]                       0x080020dc   Section        0  stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback)
    [Anonymous Symbol]                       0x080020de   Section        0  stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback)
    [Anonymous Symbol]                       0x080020e0   Section        0  pwm_mode.o(.text.HAL_TIM_PeriodElapsedCallback)
    __arm_cp.5_0                             0x080020f4   Number         4  pwm_mode.o(.text.HAL_TIM_PeriodElapsedCallback)
    __arm_cp.5_1                             0x080020f8   Number         4  pwm_mode.o(.text.HAL_TIM_PeriodElapsedCallback)
    [Anonymous Symbol]                       0x080020fc   Section        0  stm32g0xx_hal_tim.o(.text.HAL_TIM_TriggerCallback)
    [Anonymous Symbol]                       0x080020fe   Section        0  stm32g0xx_mc_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x08002104   Section        0  stm32g0xx_ll_adc.o(.text.LL_ADC_Init)
    __arm_cp.4_0                             0x08002134   Number         4  stm32g0xx_ll_adc.o(.text.LL_ADC_Init)
    [Anonymous Symbol]                       0x08002138   Section        0  stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init)
    __arm_cp.6_0                             0x0800219c   Number         4  stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init)
    [Anonymous Symbol]                       0x080021a0   Section        0  stm32g0xx_ll_exti.o(.text.LL_EXTI_Init)
    __arm_cp.1_0                             0x0800224c   Number         4  stm32g0xx_ll_exti.o(.text.LL_EXTI_Init)
    __arm_cp.1_1                             0x08002250   Number         4  stm32g0xx_ll_exti.o(.text.LL_EXTI_Init)
    [Anonymous Symbol]                       0x08002254   Section        0  stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init)
    [Anonymous Symbol]                       0x0800231c   Section        0  stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    __arm_cp.2_0                             0x08002324   Number         4  stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    [Anonymous Symbol]                       0x08002328   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init)
    __arm_cp.12_0                            0x080023a8   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init)
    __arm_cp.12_2                            0x080023ac   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init)
    __arm_cp.12_3                            0x080023b0   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init)
    __arm_cp.12_4                            0x080023b4   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init)
    [Anonymous Symbol]                       0x080023b8   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.2_1                             0x08002434   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.2_2                             0x08002438   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.2_3                             0x0800243c   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.2_5                             0x08002440   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    [Anonymous Symbol]                       0x08002444   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_0                             0x08002700   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_1                             0x08002704   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_2                             0x08002708   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_3                             0x0800270c   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_4                             0x08002710   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_5                             0x08002714   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_6                             0x08002718   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_7                             0x0800271c   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_8                             0x08002720   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    __arm_cp.4_9                             0x08002724   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    [Anonymous Symbol]                       0x08002728   Section        0  lin.o(.text.Lin_Checksum)
    [Anonymous Symbol]                       0x080027e4   Section        0  mc_interface.o(.text.MCI_Clear_Iqdref)
    [Anonymous Symbol]                       0x080027f6   Section        0  mc_interface.o(.text.MCI_ExecBufferedCommands)
    [Anonymous Symbol]                       0x08002860   Section        0  mc_interface.o(.text.MCI_ExecSpeedRamp)
    __arm_cp.1_0                             0x08002870   Number         4  mc_interface.o(.text.MCI_ExecSpeedRamp)
    [Anonymous Symbol]                       0x08002874   Section        0  mc_interface.o(.text.MCI_ExecTorqueRamp)
    [Anonymous Symbol]                       0x08002884   Section        0  mc_interface.o(.text.MCI_FaultAcknowledged)
    [Anonymous Symbol]                       0x080028ae   Section        0  mc_interface.o(.text.MCI_FaultProcessing)
    [Anonymous Symbol]                       0x080028be   Section        0  mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit)
    [Anonymous Symbol]                       0x080028cc   Section        0  mc_interface.o(.text.MCI_GetControlMode)
    [Anonymous Symbol]                       0x080028d0   Section        0  mc_interface.o(.text.MCI_GetCurrentFaults)
    [Anonymous Symbol]                       0x080028d4   Section        0  mc_interface.o(.text.MCI_GetFaultState)
    [Anonymous Symbol]                       0x080028de   Section        0  mc_interface.o(.text.MCI_GetIab)
    [Anonymous Symbol]                       0x080028ea   Section        0  mc_interface.o(.text.MCI_GetIalphabeta)
    [Anonymous Symbol]                       0x080028f6   Section        0  mc_interface.o(.text.MCI_GetImposedMotorDirection)
    [Anonymous Symbol]                       0x0800293a   Section        0  mc_interface.o(.text.MCI_GetIqd)
    [Anonymous Symbol]                       0x08002946   Section        0  mc_interface.o(.text.MCI_GetIqdref)
    [Anonymous Symbol]                       0x08002952   Section        0  mc_interface.o(.text.MCI_GetLastRampFinalDuration)
    [Anonymous Symbol]                       0x08002956   Section        0  mc_interface.o(.text.MCI_GetLastRampFinalSpeed)
    [Anonymous Symbol]                       0x0800295c   Section        0  mc_interface.o(.text.MCI_GetLastRampFinalTorque)
    [Anonymous Symbol]                       0x08002962   Section        0  mc_interface.o(.text.MCI_GetMecSpeedRefUnit)
    [Anonymous Symbol]                       0x0800296c   Section        0  mc_interface.o(.text.MCI_GetOccurredFaults)
    [Anonymous Symbol]                       0x08002970   Section        0  mc_interface.o(.text.MCI_GetSTMState)
    [Anonymous Symbol]                       0x08002974   Section        0  mc_interface.o(.text.MCI_GetTeref)
    [Anonymous Symbol]                       0x0800297c   Section        0  mc_interface.o(.text.MCI_GetValphabeta)
    [Anonymous Symbol]                       0x08002988   Section        0  mc_interface.o(.text.MCI_GetVqd)
    [Anonymous Symbol]                       0x08002994   Section        0  mc_interface.o(.text.MCI_Init)
    [Anonymous Symbol]                       0x080029ac   Section        0  mc_interface.o(.text.MCI_SetCurrentReferences)
    __arm_cp.5_0                             0x080029bc   Number         4  mc_interface.o(.text.MCI_SetCurrentReferences)
    [Anonymous Symbol]                       0x080029c0   Section        0  mc_interface.o(.text.MCI_StartMotor)
    [Anonymous Symbol]                       0x080029f0   Section        0  mc_interface.o(.text.MCI_StopMotor)
    [Anonymous Symbol]                       0x08002a34   Section        0  mc_interface.o(.text.MCI_StopRamp)
    [Anonymous Symbol]                       0x08002a40   Section        0  mc_math.o(.text.MCM_Clarke)
    __arm_cp.0_0                             0x08002a7c   Number         4  mc_math.o(.text.MCM_Clarke)
    __arm_cp.0_1                             0x08002a80   Number         4  mc_math.o(.text.MCM_Clarke)
    [Anonymous Symbol]                       0x08002a84   Section        0  mc_math.o(.text.MCM_Park)
    __arm_cp.1_0                             0x08002b14   Number         4  mc_math.o(.text.MCM_Park)
    __arm_cp.1_1                             0x08002b18   Number         4  mc_math.o(.text.MCM_Park)
    [Anonymous Symbol]                       0x08002b1c   Section        0  mc_math.o(.text.MCM_Rev_Park)
    [Anonymous Symbol]                       0x08002b4c   Section        0  mc_math.o(.text.MCM_Trig_Functions)
    __arm_cp.2_0                             0x08002bc4   Number         4  mc_math.o(.text.MCM_Trig_Functions)
    [Anonymous Symbol]                       0x08002bc8   Section        0  mcpa.o(.text.MCPA_cfgLog)
    [Anonymous Symbol]                       0x08002cac   Section        0  mcpa.o(.text.MCPA_dataLog)
    __arm_cp.0_0                             0x08002e88   Number         4  mcpa.o(.text.MCPA_dataLog)
    [Anonymous Symbol]                       0x08002e8c   Section        0  mcpa.o(.text.MCPA_flushDataLog)
    [Anonymous Symbol]                       0x08002ef8   Section        0  mcp.o(.text.MCP_ReceivedPacket)
    __arm_cp.0_1                             0x08003058   Number         4  mcp.o(.text.MCP_ReceivedPacket)
    [Anonymous Symbol]                       0x0800305c   Section        0  mc_app_hooks.o(.text.MC_APP_BootHook)
    [Anonymous Symbol]                       0x0800305e   Section        0  mc_app_hooks.o(.text.MC_APP_PostMediumFrequencyHook_M1)
    [Anonymous Symbol]                       0x08003060   Section        0  mc_api.o(.text.MC_AcknowledgeFaultMotor1)
    [Anonymous Symbol]                       0x0800306c   Section        0  mc_api.o(.text.MC_GetMecSpeedAverageMotor1)
    [Anonymous Symbol]                       0x08003078   Section        0  mc_api.o(.text.MC_GetMecSpeedReferenceMotor1)
    [Anonymous Symbol]                       0x08003084   Section        0  mc_api.o(.text.MC_GetOccurredFaultsMotor1)
    [Anonymous Symbol]                       0x08003090   Section        0  mc_api.o(.text.MC_GetSTMStateMotor1)
    [Anonymous Symbol]                       0x0800309c   Section        0  mc_api.o(.text.MC_ProfilerCommand)
    [Anonymous Symbol]                       0x080030a0   Section        0  mc_api.o(.text.MC_ProgramSpeedRampMotor1)
    [Anonymous Symbol]                       0x080030b0   Section        0  mc_tasks.o(.text.MC_RunMotorControlTasks)
    [Anonymous Symbol]                       0x080030c4   Section        0  mc_tasks.o(.text.MC_Scheduler)
    __arm_cp.3_1                             0x08003134   Number         4  mc_tasks.o(.text.MC_Scheduler)
    [Anonymous Symbol]                       0x08003138   Section        0  mc_api.o(.text.MC_StartMotor1)
    [Anonymous Symbol]                       0x08003144   Section        0  mc_api.o(.text.MC_StopMotor1)
    [Anonymous Symbol]                       0x08003150   Section        0  mc_tasks.o(.text.MCboot)
    __arm_cp.0_0                             0x08003218   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_1                             0x0800321c   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_2                             0x08003220   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_3                             0x08003224   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_4                             0x08003228   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_5                             0x0800322c   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_6                             0x08003230   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_7                             0x08003234   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_8                             0x08003238   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_9                             0x0800323c   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_10                            0x08003240   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_11                            0x08003244   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_12                            0x08003248   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_13                            0x0800324c   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_14                            0x08003250   Number         4  mc_tasks.o(.text.MCboot)
    __arm_cp.0_15                            0x08003254   Number         4  mc_tasks.o(.text.MCboot)
    [Anonymous Symbol]                       0x08003258   Section        0  motorcontrol.o(.text.MX_MotorControl_Init)
    __arm_cp.0_0                             0x08003284   Number         4  motorcontrol.o(.text.MX_MotorControl_Init)
    __arm_cp.0_1                             0x08003288   Number         4  motorcontrol.o(.text.MX_MotorControl_Init)
    [Anonymous Symbol]                       0x0800328c   Section        0  main.o(.text.MX_TIM17_Init)
    __arm_cp.7_0                             0x080032e4   Number         4  main.o(.text.MX_TIM17_Init)
    __arm_cp.7_1                             0x080032e8   Number         4  main.o(.text.MX_TIM17_Init)
    __arm_cp.7_3                             0x080032ec   Number         4  main.o(.text.MX_TIM17_Init)
    [Anonymous Symbol]                       0x080032f0   Section        0  stm32g0xx_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x080032f4   Section        0  ntc_temperature_sensor.o(.text.NTC_CalcAvTemp)
    __arm_cp.3_0                             0x0800332c   Number         4  ntc_temperature_sensor.o(.text.NTC_CalcAvTemp)
    [Anonymous Symbol]                       0x08003330   Section        0  ntc_temperature_sensor.o(.text.NTC_Clear)
    [Anonymous Symbol]                       0x08003336   Section        0  ntc_temperature_sensor.o(.text.NTC_GetAvTemp_C)
    [Anonymous Symbol]                       0x08003358   Section        0  ntc_temperature_sensor.o(.text.NTC_Init)
    [Anonymous Symbol]                       0x0800337e   Section        0  ntc_temperature_sensor.o(.text.NTC_SetFaultState)
    [Anonymous Symbol]                       0x08003398   Section        0  pid_regulator.o(.text.PID_GetKD)
    [Anonymous Symbol]                       0x0800339e   Section        0  pid_regulator.o(.text.PID_GetKDDivisorPOW2)
    [Anonymous Symbol]                       0x080033a2   Section        0  pid_regulator.o(.text.PID_GetKI)
    [Anonymous Symbol]                       0x080033a8   Section        0  pid_regulator.o(.text.PID_GetKIDivisor)
    [Anonymous Symbol]                       0x080033ac   Section        0  pid_regulator.o(.text.PID_GetKIDivisorPOW2)
    [Anonymous Symbol]                       0x080033b0   Section        0  pid_regulator.o(.text.PID_GetKP)
    [Anonymous Symbol]                       0x080033b6   Section        0  pid_regulator.o(.text.PID_GetKPDivisorPOW2)
    [Anonymous Symbol]                       0x080033ba   Section        0  pid_regulator.o(.text.PID_HandleInit)
    [Anonymous Symbol]                       0x080033ca   Section        0  pid_regulator.o(.text.PID_SetIntegralTerm)
    [Anonymous Symbol]                       0x080033ce   Section        0  pid_regulator.o(.text.PID_SetKD)
    [Anonymous Symbol]                       0x080033d2   Section        0  pid_regulator.o(.text.PID_SetKDDivisorPOW2)
    [Anonymous Symbol]                       0x080033dc   Section        0  pid_regulator.o(.text.PID_SetKI)
    [Anonymous Symbol]                       0x080033e0   Section        0  pid_regulator.o(.text.PID_SetKIDivisorPOW2)
    __arm_cp.13_0                            0x08003404   Number         4  pid_regulator.o(.text.PID_SetKIDivisorPOW2)
    __arm_cp.13_1                            0x08003408   Number         4  pid_regulator.o(.text.PID_SetKIDivisorPOW2)
    [Anonymous Symbol]                       0x0800340c   Section        0  pid_regulator.o(.text.PID_SetKP)
    [Anonymous Symbol]                       0x08003410   Section        0  pid_regulator.o(.text.PID_SetKPDivisorPOW2)
    [Anonymous Symbol]                       0x0800341a   Section        0  pid_regulator.o(.text.PID_SetLowerIntegralTermLimit)
    [Anonymous Symbol]                       0x0800341e   Section        0  pid_regulator.o(.text.PID_SetUpperIntegralTermLimit)
    [Anonymous Symbol]                       0x08003424   Section        0  pid_regulator.o(.text.PI_Controller)
    __arm_cp.24_0                            0x080034a8   Number         4  pid_regulator.o(.text.PI_Controller)
    [Anonymous Symbol]                       0x080034ac   Section        0  pqd_motor_power_measurement.o(.text.PQD_CalcElMotorPower)
    [Anonymous Symbol]                       0x080034dc   Section        0  pqd_motor_power_measurement.o(.text.PQD_Clear)
    [Anonymous Symbol]                       0x080034e2   Section        0  pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW)
    [Anonymous Symbol]                       0x08003500   Section        0  pwm_curr_fdbk.o(.text.PWMC_CheckOverCurrent)
    [Anonymous Symbol]                       0x08003508   Section        0  pwm_curr_fdbk.o(.text.PWMC_CurrentReadingCalibr)
    [Anonymous Symbol]                       0x0800354c   Section        0  pwm_curr_fdbk.o(.text.PWMC_GetPhaseCurrents)
    [Anonymous Symbol]                       0x08003554   Section        0  pwm_curr_fdbk.o(.text.PWMC_SetPhaseVoltage)
    [Anonymous Symbol]                       0x08003708   Section        0  pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM)
    [Anonymous Symbol]                       0x08003710   Section        0  pwm_curr_fdbk.o(.text.PWMC_SwitchOnPWM)
    [Anonymous Symbol]                       0x08003718   Section        0  stm32g0xx_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x0800371c   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    __arm_cp.3_0                             0x08003834   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    __arm_cp.3_1                             0x08003838   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    __arm_cp.3_2                             0x0800383c   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    __arm_cp.3_3                             0x08003840   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    __arm_cp.3_4                             0x08003844   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    __arm_cp.3_5                             0x08003848   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    [Anonymous Symbol]                       0x0800384c   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetOffsetCalib)
    [Anonymous Symbol]                       0x0800385c   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents)
    __arm_cp.9_1                             0x08003954   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents)
    __arm_cp.9_2                             0x08003958   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents)
    __arm_cp.9_3                             0x0800395c   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents)
    __arm_cp.9_4                             0x08003960   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents)
    [Anonymous Symbol]                       0x08003964   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationAB)
    [Anonymous Symbol]                       0x080039b0   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationC)
    __arm_cp.8_0                             0x080039f4   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationC)
    [Anonymous Symbol]                       0x080039f8   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    __arm_cp.0_0                             0x08003b14   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    __arm_cp.0_1                             0x08003b18   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    __arm_cp.0_2                             0x08003b1c   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    __arm_cp.0_3                             0x08003b20   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    __arm_cp.0_4                             0x08003b24   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    __arm_cp.0_5                             0x08003b28   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    __arm_cp.0_6                             0x08003b2c   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    __arm_cp.0_7                             0x08003b30   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    [Anonymous Symbol]                       0x08003b34   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_IsOverCurrentOccurred)
    [Anonymous Symbol]                       0x08003b66   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_OVERCURRENT_IRQHandler)
    [Anonymous Symbol]                       0x08003ba0   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_OVERVOLTAGE_IRQHandler)
    [Anonymous Symbol]                       0x08003bbc   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointCalibration)
    [Anonymous Symbol]                       0x08003bda   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX)
    [Anonymous Symbol]                       0x08003c42   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetOffsetCalib)
    [Anonymous Symbol]                       0x08003c58   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM)
    [Anonymous Symbol]                       0x08003cfc   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM)
    __arm_cp.6_1                             0x08003dc0   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM)
    __arm_cp.6_2                             0x08003dc4   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM)
    __arm_cp.6_3                             0x08003dc8   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM)
    [Anonymous Symbol]                       0x08003dcc   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TIMx_UP_IRQHandler)
    __arm_cp.15_0                            0x08003e38   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TIMx_UP_IRQHandler)
    __arm_cp.15_2                            0x08003e3c   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TIMx_UP_IRQHandler)
    [Anonymous Symbol]                       0x08003e40   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides)
    __arm_cp.14_0                            0x08003e94   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides)
    [Anonymous Symbol]                       0x08003e98   Section        0  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters)
    __arm_cp.11_0                            0x08003ec4   Number         4  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters)
    [Anonymous Symbol]                       0x08003ec8   Section        0  regular_conversion_manager.o(.text.RCM_ExecNextConv)
    __arm_cp.8_2                             0x08003f24   Number         4  regular_conversion_manager.o(.text.RCM_ExecNextConv)
    [Anonymous Symbol]                       0x08003f28   Section        0  regular_conversion_manager.o(.text.RCM_ExecRegularConv)
    __arm_cp.2_1                             0x080040c8   Number         4  regular_conversion_manager.o(.text.RCM_ExecRegularConv)
    __arm_cp.2_2                             0x080040cc   Number         4  regular_conversion_manager.o(.text.RCM_ExecRegularConv)
    __arm_cp.2_3                             0x080040d0   Number         4  regular_conversion_manager.o(.text.RCM_ExecRegularConv)
    [Anonymous Symbol]                       0x080040d4   Section        0  regular_conversion_manager.o(.text.RCM_ExecUserConv)
    [Anonymous Symbol]                       0x08004110   Section        0  regular_conversion_manager.o(.text.RCM_GetUserConv)
    __arm_cp.4_1                             0x08004124   Number         4  regular_conversion_manager.o(.text.RCM_GetUserConv)
    [Anonymous Symbol]                       0x08004128   Section        0  regular_conversion_manager.o(.text.RCM_GetUserConvState)
    [Anonymous Symbol]                       0x08004130   Section        0  regular_conversion_manager.o(.text.RCM_ReadOngoingConv)
    [Anonymous Symbol]                       0x08004170   Section        0  regular_conversion_manager.o(.text.RCM_RegisterRegConv)
    __arm_cp.1_0                             0x08004298   Number         4  regular_conversion_manager.o(.text.RCM_RegisterRegConv)
    __arm_cp.1_1                             0x0800429c   Number         4  regular_conversion_manager.o(.text.RCM_RegisterRegConv)
    [Anonymous Symbol]                       0x080042a0   Section        0  regular_conversion_manager.o(.text.RCM_RequestUserConv)
    __arm_cp.3_0                             0x080042bc   Number         4  regular_conversion_manager.o(.text.RCM_RequestUserConv)
    [Anonymous Symbol]                       0x080042c0   Section        0  ramp_ext_mngr.o(.text.REMNG_Calc)
    [Anonymous Symbol]                       0x080042ec   Section        0  ramp_ext_mngr.o(.text.REMNG_ExecRamp)
    [Anonymous Symbol]                       0x0800436c   Section        0  ramp_ext_mngr.o(.text.REMNG_Init)
    [Anonymous Symbol]                       0x0800437c   Section        0  ramp_ext_mngr.o(.text.REMNG_RampCompleted)
    [Anonymous Symbol]                       0x08004384   Section        0  register_interface.o(.text.RI_GetIDSize)
    [Anonymous Symbol]                       0x080043a4   Section        0  register_interface.o(.text.RI_GetPtrReg)
    __arm_cp.3_0                             0x08004498   Number         4  register_interface.o(.text.RI_GetPtrReg)
    __arm_cp.3_1                             0x0800449c   Number         4  register_interface.o(.text.RI_GetPtrReg)
    __arm_cp.3_2                             0x080044a0   Number         4  register_interface.o(.text.RI_GetPtrReg)
    __arm_cp.3_3                             0x080044a4   Number         4  register_interface.o(.text.RI_GetPtrReg)
    [Anonymous Symbol]                       0x080044a8   Section        0  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_23                            0x0800481c   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_31                            0x08004c28   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_32                            0x08004c34   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_33                            0x08004c38   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_29                            0x08004c80   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_30                            0x08004c84   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_0                             0x08004d40   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_1                             0x08004d44   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_2                             0x08004d48   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_3                             0x08004d4c   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_4                             0x08004d50   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_11                            0x08004d54   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_12                            0x08004d58   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_13                            0x08004d5c   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_14                            0x08004d60   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_15                            0x08004d64   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    __arm_cp.1_16                            0x08004d68   Number         4  register_interface.o(.text.RI_GetRegCommandParser)
    [Anonymous Symbol]                       0x08004d6c   Section        0  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_38                            0x08004fdc   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_39                            0x08004fe0   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_40                            0x08004fe4   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_43                            0x08004ff0   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_44                            0x08004ff4   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_45                            0x08004ff8   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_52                            0x0800541c   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_53                            0x08005420   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_54                            0x08005424   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_55                            0x08005428   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_49                            0x08005470   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_56                            0x08005478   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_57                            0x0800547c   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_58                            0x08005494   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_0                             0x08005498   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_1                             0x0800549c   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_2                             0x080054a0   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_3                             0x080054a4   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_7                             0x080054a8   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_8                             0x080054ac   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_9                             0x080054b0   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_10                            0x080054b4   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_11                            0x080054b8   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_12                            0x080054bc   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_13                            0x080054c0   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_15                            0x080054c4   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_16                            0x080054c8   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_17                            0x080054cc   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_22                            0x080054d0   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_26                            0x080054d4   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_30                            0x080054d8   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_31                            0x080054dc   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_32                            0x080054e0   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_33                            0x080054e4   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    __arm_cp.0_34                            0x080054e8   Number         4  register_interface.o(.text.RI_SetRegCommandParser)
    [Anonymous Symbol]                       0x080054ec   Section        0  revup_ctrl.o(.text.RUC_Clear)
    [Anonymous Symbol]                       0x0800556c   Section        0  revup_ctrl.o(.text.RUC_Exec)
    [Anonymous Symbol]                       0x080055d4   Section        0  revup_ctrl.o(.text.RUC_FirstAccelerationStageReached)
    [Anonymous Symbol]                       0x080055e8   Section        0  revup_ctrl.o(.text.RUC_GetNumberOfPhases)
    [Anonymous Symbol]                       0x080055ee   Section        0  revup_ctrl.o(.text.RUC_GetPhase)
    [Anonymous Symbol]                       0x08005600   Section        0  revup_ctrl.o(.text.RUC_Init)
    __arm_cp.0_0                             0x08005660   Number         4  revup_ctrl.o(.text.RUC_Init)
    [Anonymous Symbol]                       0x08005664   Section        0  revup_ctrl.o(.text.RUC_SetPhase)
    [Anonymous Symbol]                       0x08005678   Section        0  r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus)
    __arm_cp.4_0                             0x08005730   Number         4  r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus)
    [Anonymous Symbol]                       0x08005734   Section        0  r_divider_bus_voltage_sensor.o(.text.RVBS_CheckFaultState)
    [Anonymous Symbol]                       0x08005782   Section        0  r_divider_bus_voltage_sensor.o(.text.RVBS_Clear)
    [Anonymous Symbol]                       0x080057cc   Section        0  r_divider_bus_voltage_sensor.o(.text.RVBS_Init)
    [Anonymous Symbol]                       0x080057e2   Section        0  speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit)
    [Anonymous Symbol]                       0x080057e8   Section        0  speed_pos_fdbk.o(.text.SPD_GetElAngle)
    [Anonymous Symbol]                       0x080057ee   Section        0  speed_pos_fdbk.o(.text.SPD_GetInstElSpeedDpp)
    [Anonymous Symbol]                       0x080057f4   Section        0  speed_pos_fdbk.o(.text.SPD_GetS16Speed)
    __arm_cp.7_0                             0x0800580c   Number         4  speed_pos_fdbk.o(.text.SPD_GetS16Speed)
    [Anonymous Symbol]                       0x08005810   Section        0  speed_pos_fdbk.o(.text.SPD_IsMecSpeedReliable)
    [Anonymous Symbol]                       0x08005864   Section        0  speed_torq_ctrl.o(.text.STC_CalcTorqueReference)
    __arm_cp.10_0                            0x080058e0   Number         4  speed_torq_ctrl.o(.text.STC_CalcTorqueReference)
    __arm_cp.10_1                            0x080058e4   Number         4  speed_torq_ctrl.o(.text.STC_CalcTorqueReference)
    __arm_cp.10_2                            0x080058e8   Number         4  speed_torq_ctrl.o(.text.STC_CalcTorqueReference)
    __arm_cp.10_3                            0x080058ec   Number         4  speed_torq_ctrl.o(.text.STC_CalcTorqueReference)
    [Anonymous Symbol]                       0x080058f0   Section        0  speed_torq_ctrl.o(.text.STC_Clear)
    [Anonymous Symbol]                       0x08005904   Section        0  speed_torq_ctrl.o(.text.STC_ExecRamp)
    __arm_cp.8_0                             0x080059a0   Number         4  speed_torq_ctrl.o(.text.STC_ExecRamp)
    [Anonymous Symbol]                       0x080059a4   Section        0  speed_torq_ctrl.o(.text.STC_ForceSpeedReferenceToCurrentSpeed)
    [Anonymous Symbol]                       0x080059b4   Section        0  speed_torq_ctrl.o(.text.STC_GetDefaultIqdref)
    [Anonymous Symbol]                       0x080059be   Section        0  speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnit)
    [Anonymous Symbol]                       0x080059c4   Section        0  speed_torq_ctrl.o(.text.STC_GetSpeedSensor)
    [Anonymous Symbol]                       0x080059c8   Section        0  speed_torq_ctrl.o(.text.STC_GetTorqueRef)
    [Anonymous Symbol]                       0x080059ce   Section        0  speed_torq_ctrl.o(.text.STC_Init)
    [Anonymous Symbol]                       0x080059ee   Section        0  speed_torq_ctrl.o(.text.STC_SetControlMode)
    [Anonymous Symbol]                       0x080059f6   Section        0  speed_torq_ctrl.o(.text.STC_SetSpeedSensor)
    [Anonymous Symbol]                       0x080059fa   Section        0  speed_torq_ctrl.o(.text.STC_StopRamp)
    [Anonymous Symbol]                       0x08005a02   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_OTF_ResetPLL)
    [Anonymous Symbol]                       0x08005a10   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgElSpeedDpp)
    [Anonymous Symbol]                       0x08005a54   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgMecSpeedUnit)
    [Anonymous Symbol]                       0x08005c9c   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcElAngle)
    __arm_cp.3_0                             0x08005eb4   Number         4  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcElAngle)
    __arm_cp.3_1                             0x08005eb8   Number         4  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcElAngle)
    [Anonymous Symbol]                       0x08005ebc   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Clear)
    [Anonymous Symbol]                       0x08005f16   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_ForceConvergency1)
    [Anonymous Symbol]                       0x08005f22   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_ForceConvergency2)
    [Anonymous Symbol]                       0x08005f2e   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedBemf)
    [Anonymous Symbol]                       0x08005f32   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedBemfLevel)
    [Anonymous Symbol]                       0x08005f3a   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedCurrent)
    [Anonymous Symbol]                       0x08005f50   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObservedBemfLevel)
    [Anonymous Symbol]                       0x08005f56   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObserverGains)
    [Anonymous Symbol]                       0x08005f60   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init)
    __arm_cp.0_0                             0x08005fe8   Number         4  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init)
    __arm_cp.0_1                             0x08005fec   Number         4  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init)
    [Anonymous Symbol]                       0x08005ff0   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsObserverConverged)
    [Anonymous Symbol]                       0x08006096   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsVarianceTight)
    [Anonymous Symbol]                       0x0800609e   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_SetObserverGains)
    [Anonymous Symbol]                       0x080060a4   Section        0  sto_pll_speed_pos_fdbk.o(.text.STO_ResetPLL)
    [Anonymous Symbol]                       0x080060b0   Section        0  stm32g0xx_it.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x080060b4   Section        0  stm32g0xx_mc_it.o(.text.SysTick_Handler)
    __arm_cp.5_0                             0x080060e4   Number         4  stm32g0xx_mc_it.o(.text.SysTick_Handler)
    __arm_cp.5_1                             0x080060e8   Number         4  stm32g0xx_mc_it.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x080060ec   Section        0  main.o(.text.SystemClock_Config)
    __arm_cp.5_0                             0x080061d0   Number         4  main.o(.text.SystemClock_Config)
    __arm_cp.5_1                             0x080061d4   Number         4  main.o(.text.SystemClock_Config)
    __arm_cp.5_2                             0x080061d8   Number         4  main.o(.text.SystemClock_Config)
    __arm_cp.5_3                             0x080061dc   Number         4  main.o(.text.SystemClock_Config)
    __arm_cp.5_4                             0x080061e0   Number         4  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x080061e4   Section        0  system_stm32g0xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x080061e8   Section        0  stm32g0xx_it.o(.text.TIM14_IRQHandler)
    __arm_cp.3_0                             0x080061f4   Number         4  stm32g0xx_it.o(.text.TIM14_IRQHandler)
    [Anonymous Symbol]                       0x080061f8   Section        0  stm32g0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.4_0                             0x08006204   Number         4  stm32g0xx_it.o(.text.TIM17_IRQHandler)
    [Anonymous Symbol]                       0x08006208   Section        0  stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.1_0                             0x08006264   Number         4  stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.1_1                             0x08006268   Number         4  stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    [Anonymous Symbol]                       0x0800626c   Section        0  mc_tasks.o(.text.TSK_ChargeBootCapDelayHasElapsedM1)
    [Anonymous Symbol]                       0x08006278   Section        0  mc_tasks.o(.text.TSK_HardwareFaultTask)
    [Anonymous Symbol]                       0x08006290   Section        0  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_2                            0x08006410   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_3                            0x08006414   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_4                            0x08006418   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_5                            0x0800641c   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_6                            0x08006420   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_7                            0x08006424   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_8                            0x08006428   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_11                           0x0800642c   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    __arm_cp.13_12                           0x08006430   Number         4  mc_tasks.o(.text.TSK_HighFrequencyTask)
    [Anonymous Symbol]                       0x08006434   Section        0  mc_tasks.o(.text.TSK_MF_StopProcessing)
    __arm_cp.5_0                             0x08006468   Number         4  mc_tasks.o(.text.TSK_MF_StopProcessing)
    __arm_cp.5_2                             0x0800646c   Number         4  mc_tasks.o(.text.TSK_MF_StopProcessing)
    [Anonymous Symbol]                       0x08006470   Section        0  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    __arm_cp.7_0                             0x08006790   Number         4  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    __arm_cp.7_1                             0x08006794   Number         4  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    __arm_cp.7_2                             0x08006798   Number         4  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    __arm_cp.7_3                             0x0800679c   Number         4  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    __arm_cp.7_4                             0x080067a0   Number         4  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    __arm_cp.7_5                             0x080067a4   Number         4  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    __arm_cp.7_6                             0x080067a8   Number         4  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    __arm_cp.7_8                             0x080067ac   Number         4  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    [Anonymous Symbol]                       0x080067b0   Section        0  mc_tasks.o(.text.TSK_SafetyTask)
    __arm_cp.4_0                             0x080067c8   Number         4  mc_tasks.o(.text.TSK_SafetyTask)
    [Anonymous Symbol]                       0x080067cc   Section        0  mc_tasks.o(.text.TSK_SafetyTask_PWMOFF)
    __arm_cp.14_0                            0x08006850   Number         4  mc_tasks.o(.text.TSK_SafetyTask_PWMOFF)
    __arm_cp.14_2                            0x08006854   Number         4  mc_tasks.o(.text.TSK_SafetyTask_PWMOFF)
    __arm_cp.14_4                            0x08006858   Number         4  mc_tasks.o(.text.TSK_SafetyTask_PWMOFF)
    __arm_cp.14_5                            0x0800685c   Number         4  mc_tasks.o(.text.TSK_SafetyTask_PWMOFF)
    __arm_cp.14_6                            0x08006860   Number         4  mc_tasks.o(.text.TSK_SafetyTask_PWMOFF)
    [Anonymous Symbol]                       0x08006864   Section        0  mc_tasks.o(.text.TSK_SetChargeBootCapDelayM1)
    [Anonymous Symbol]                       0x0800686c   Section        0  mc_tasks.o(.text.TSK_SetStopPermanencyTimeM1)
    [Anonymous Symbol]                       0x08006874   Section        0  mc_tasks.o(.text.TSK_StopPermanencyTimeHasElapsedM1)
    __arm_cp.12_0                            0x08006880   Number         4  mc_tasks.o(.text.TSK_StopPermanencyTimeHasElapsedM1)
    [Anonymous Symbol]                       0x08006884   Section        0  usart_aspep_driver.o(.text.UASPEP_IDLE_ENABLE)
    [Anonymous Symbol]                       0x080068a0   Section        0  usart_aspep_driver.o(.text.UASPEP_INIT)
    [Anonymous Symbol]                       0x08006930   Section        0  usart_aspep_driver.o(.text.UASPEP_RECEIVE_BUFFER)
    [Anonymous Symbol]                       0x08006958   Section        0  usart_aspep_driver.o(.text.UASPEP_SEND_PACKET)
    __arm_cp.3_0                             0x08006984   Number         4  usart_aspep_driver.o(.text.UASPEP_SEND_PACKET)
    __arm_cp.3_1                             0x08006988   Number         4  usart_aspep_driver.o(.text.UASPEP_SEND_PACKET)
    [Anonymous Symbol]                       0x0800698c   Section        0  mc_tasks.o(.text.UI_HandleStartStopButton_cb)
    [Anonymous Symbol]                       0x080069a4   Section        0  user_logic.o(.text.UI_Process)
    __arm_cp.2_1                             0x08006a10   Number         4  user_logic.o(.text.UI_Process)
    __arm_cp.2_2                             0x08006a14   Number         4  user_logic.o(.text.UI_Process)
    __arm_cp.2_3                             0x08006a18   Number         4  user_logic.o(.text.UI_Process)
    [Anonymous Symbol]                       0x08006a1c   Section        0  lin.o(.text.USART1_IRQHandler)
    __arm_cp.8_0                             0x08006bd8   Number         4  lin.o(.text.USART1_IRQHandler)
    __arm_cp.8_1                             0x08006bdc   Number         4  lin.o(.text.USART1_IRQHandler)
    __arm_cp.8_2                             0x08006be0   Number         4  lin.o(.text.USART1_IRQHandler)
    __arm_cp.8_3                             0x08006be4   Number         4  lin.o(.text.USART1_IRQHandler)
    __arm_cp.8_4                             0x08006be8   Number         4  lin.o(.text.USART1_IRQHandler)
    [Anonymous Symbol]                       0x08006bec   Section        0  stm32g0xx_mc_it.o(.text.USART2_IRQHandler)
    __arm_cp.3_0                             0x08006cbc   Number         4  stm32g0xx_mc_it.o(.text.USART2_IRQHandler)
    __arm_cp.3_1                             0x08006cc0   Number         4  stm32g0xx_mc_it.o(.text.USART2_IRQHandler)
    __arm_cp.3_2                             0x08006cc4   Number         4  stm32g0xx_mc_it.o(.text.USART2_IRQHandler)
    [Anonymous Symbol]                       0x08006cc8   Section        0  user_logic.o(.text.User_Motor_Control_M1)
    __arm_cp.1_0                             0x08006d54   Number         4  user_logic.o(.text.User_Motor_Control_M1)
    __arm_cp.1_1                             0x08006d58   Number         4  user_logic.o(.text.User_Motor_Control_M1)
    __arm_cp.1_2                             0x08006d5c   Number         4  user_logic.o(.text.User_Motor_Control_M1)
    [Anonymous Symbol]                       0x08006d60   Section        0  bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_V)
    [Anonymous Symbol]                       0x08006d6a   Section        0  bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_d)
    [Anonymous Symbol]                       0x08006d6e   Section        0  virtual_speed_sensor.o(.text.VSS_CalcAvrgMecSpeedUnit)
    [Anonymous Symbol]                       0x08006df8   Section        0  virtual_speed_sensor.o(.text.VSS_CalcElAngle)
    [Anonymous Symbol]                       0x08006ea4   Section        0  virtual_speed_sensor.o(.text.VSS_Clear)
    [Anonymous Symbol]                       0x08006ebe   Section        0  virtual_speed_sensor.o(.text.VSS_Init)
    [Anonymous Symbol]                       0x08006ec6   Section        0  virtual_speed_sensor.o(.text.VSS_SetMecAcceleration)
    [Anonymous Symbol]                       0x08006f5c   Section        0  virtual_speed_sensor.o(.text.VSS_SetMecAngle)
    [Anonymous Symbol]                       0x08006f72   Section        0  virtual_speed_sensor.o(.text.VSS_SetStartTransition)
    [Anonymous Symbol]                       0x08006f94   Section        0  virtual_speed_sensor.o(.text.VSS_TransitionEnded)
    [Anonymous Symbol]                       0x08006f9a   Section        0  main.o(.text._sys_exit)
    [Anonymous Symbol]                       0x08006f9c   Section        0  app_error.o(.text.error_check)
    __arm_cp.1_0                             0x080070fc   Number         4  app_error.o(.text.error_check)
    __arm_cp.1_1                             0x08007100   Number         4  app_error.o(.text.error_check)
    __arm_cp.1_2                             0x08007104   Number         4  app_error.o(.text.error_check)
    __arm_cp.1_3                             0x08007108   Number         4  app_error.o(.text.error_check)
    __arm_cp.1_5                             0x0800710c   Number         4  app_error.o(.text.error_check)
    __arm_cp.1_6                             0x08007110   Number         4  app_error.o(.text.error_check)
    __arm_cp.1_7                             0x08007114   Number         4  app_error.o(.text.error_check)
    __arm_cp.1_8                             0x08007118   Number         4  app_error.o(.text.error_check)
    __arm_cp.1_9                             0x0800711c   Number         4  app_error.o(.text.error_check)
    __arm_cp.1_10                            0x08007120   Number         4  app_error.o(.text.error_check)
    [Anonymous Symbol]                       0x08007124   Section        0  app_error.o(.text.error_mode_init)
    __arm_cp.2_0                             0x08007178   Number         4  app_error.o(.text.error_mode_init)
    [Anonymous Symbol]                       0x0800717c   Section        0  app_error.o(.text.error_mode_tick)
    __arm_cp.3_0                             0x0800718c   Number         4  app_error.o(.text.error_mode_tick)
    [Anonymous Symbol]                       0x08007190   Section        0  led_key.o(.text.exe_key_func)
    __arm_cp.2_0                             0x080071a8   Number         4  led_key.o(.text.exe_key_func)
    [Anonymous Symbol]                       0x080071ac   Section        0  ramp_ext_mngr.o(.text.getScalingFactor)
    [Anonymous Symbol]                       0x08007200   Section        0  pwm_mode.o(.text.get_duty_period)
    __arm_cp.6_0                             0x08007238   Number         4  pwm_mode.o(.text.get_duty_period)
    __arm_cp.6_1                             0x0800723c   Number         4  pwm_mode.o(.text.get_duty_period)
    [Anonymous Symbol]                       0x08007240   Section        0  led_key.o(.text.get_key_state)
    __arm_cp.1_0                             0x08007318   Number         4  led_key.o(.text.get_key_state)
    __arm_cp.1_1                             0x0800731c   Number         4  led_key.o(.text.get_key_state)
    __arm_cp.1_2                             0x08007320   Number         4  led_key.o(.text.get_key_state)
    [Anonymous Symbol]                       0x08007324   Section        0  led_key.o(.text.led_clear)
    [Anonymous Symbol]                       0x08007340   Section        0  led_key.o(.text.led_show_err)
    __arm_cp.4_0                             0x080073a4   Number         4  led_key.o(.text.led_show_err)
    [Anonymous Symbol]                       0x080073a8   Section        0  led_key.o(.text.led_show_function)
    __arm_cp.5_0                             0x080073f8   Number         4  led_key.o(.text.led_show_function)
    __arm_cp.5_1                             0x080073fc   Number         4  led_key.o(.text.led_show_function)
    [Anonymous Symbol]                       0x08007400   Section        0  main.o(.text.main)
    __arm_cp.4_21                            0x08007650   Number         4  main.o(.text.main)
    __arm_cp.4_0                             0x08007940   Number         4  main.o(.text.main)
    __arm_cp.4_1                             0x08007944   Number         4  main.o(.text.main)
    __arm_cp.4_3                             0x08007948   Number         4  main.o(.text.main)
    __arm_cp.4_4                             0x0800794c   Number         4  main.o(.text.main)
    __arm_cp.4_5                             0x08007950   Number         4  main.o(.text.main)
    __arm_cp.4_6                             0x08007954   Number         4  main.o(.text.main)
    __arm_cp.4_7                             0x08007958   Number         4  main.o(.text.main)
    __arm_cp.4_8                             0x0800795c   Number         4  main.o(.text.main)
    __arm_cp.4_9                             0x08007960   Number         4  main.o(.text.main)
    __arm_cp.4_10                            0x08007964   Number         4  main.o(.text.main)
    __arm_cp.4_11                            0x08007968   Number         4  main.o(.text.main)
    __arm_cp.4_12                            0x0800796c   Number         4  main.o(.text.main)
    __arm_cp.4_13                            0x08007970   Number         4  main.o(.text.main)
    __arm_cp.4_14                            0x08007974   Number         4  main.o(.text.main)
    __arm_cp.4_15                            0x08007978   Number         4  main.o(.text.main)
    __arm_cp.4_16                            0x0800797c   Number         4  main.o(.text.main)
    __arm_cp.4_17                            0x08007980   Number         4  main.o(.text.main)
    __arm_cp.4_18                            0x08007984   Number         4  main.o(.text.main)
    [Anonymous Symbol]                       0x08007988   Section        0  mc_tasks.o(.text.mc_lock_pins)
    __arm_cp.18_1                            0x08007a5c   Number         4  mc_tasks.o(.text.mc_lock_pins)
    __arm_cp.18_2                            0x08007a60   Number         4  mc_tasks.o(.text.mc_lock_pins)
    [Anonymous Symbol]                       0x08007a64   Section        0  app_mode.o(.text.mode_auto_init)
    [Anonymous Symbol]                       0x08007a80   Section        0  app_mode.o(.text.mode_auto_tick)
    [Anonymous Symbol]                       0x08007a82   Section        0  app_mode.o(.text.mode_error_init)
    [Anonymous Symbol]                       0x08007a8a   Section        0  app_mode.o(.text.mode_error_tick)
    [Anonymous Symbol]                       0x08007a94   Section        0  app_mode.o(.text.mode_max_power_12m_init)
    __arm_cp.13_1                            0x08007ab0   Number         4  app_mode.o(.text.mode_max_power_12m_init)
    [Anonymous Symbol]                       0x08007ab4   Section        0  app_mode.o(.text.mode_max_power_12m_tick)
    [Anonymous Symbol]                       0x08007ab8   Section        0  app_mode.o(.text.mode_pressure_5m_init)
    [Anonymous Symbol]                       0x08007ad0   Section        0  app_mode.o(.text.mode_pressure_5m_tick)
    [Anonymous Symbol]                       0x08007ad4   Section        0  app_mode.o(.text.mode_pressure_7m_init)
    [Anonymous Symbol]                       0x08007aec   Section        0  app_mode.o(.text.mode_pressure_7m_tick)
    [Anonymous Symbol]                       0x08007af0   Section        0  app_mode.o(.text.mode_pressure_9m_init)
    [Anonymous Symbol]                       0x08007b08   Section        0  app_mode.o(.text.mode_pressure_9m_tick)
    [Anonymous Symbol]                       0x08007b0c   Section        0  app_mode.o(.text.mode_pwm_init)
    __arm_cp.15_0                            0x08007b54   Number         4  app_mode.o(.text.mode_pwm_init)
    __arm_cp.15_1                            0x08007b58   Number         4  app_mode.o(.text.mode_pwm_init)
    __arm_cp.15_2                            0x08007b5c   Number         4  app_mode.o(.text.mode_pwm_init)
    [Anonymous Symbol]                       0x08007b60   Section        0  app_mode.o(.text.mode_pwm_tick)
    __arm_cp.16_0                            0x08007bd8   Number         4  app_mode.o(.text.mode_pwm_tick)
    __arm_cp.16_1                            0x08007bdc   Number         4  app_mode.o(.text.mode_pwm_tick)
    __arm_cp.16_2                            0x08007be0   Number         4  app_mode.o(.text.mode_pwm_tick)
    [Anonymous Symbol]                       0x08007be4   Section        0  app_mode.o(.text.mode_speed_init)
    __arm_cp.5_0                             0x08007bfc   Number         4  app_mode.o(.text.mode_speed_init)
    [Anonymous Symbol]                       0x08007c00   Section        0  app_mode.o(.text.mode_speed_tick)
    [Anonymous Symbol]                       0x08007c04   Section        0  app_mode.o(.text.mode_standby_init)
    __arm_cp.1_0                             0x08007c24   Number         4  app_mode.o(.text.mode_standby_init)
    __arm_cp.1_1                             0x08007c28   Number         4  app_mode.o(.text.mode_standby_init)
    __arm_cp.1_2                             0x08007c2c   Number         4  app_mode.o(.text.mode_standby_init)
    [Anonymous Symbol]                       0x08007c30   Section        0  app_mode.o(.text.mode_standby_tick)
    __arm_cp.2_0                             0x08007c50   Number         4  app_mode.o(.text.mode_standby_tick)
    [Anonymous Symbol]                       0x08007c54   Section        0  pwm_mode.o(.text.pwm_mode_init)
    __arm_cp.0_0                             0x08007cac   Number         4  pwm_mode.o(.text.pwm_mode_init)
    __arm_cp.0_1                             0x08007cb0   Number         4  pwm_mode.o(.text.pwm_mode_init)
    __arm_cp.0_2                             0x08007cb4   Number         4  pwm_mode.o(.text.pwm_mode_init)
    __arm_cp.0_3                             0x08007cb8   Number         4  pwm_mode.o(.text.pwm_mode_init)
    __arm_cp.0_4                             0x08007cbc   Number         4  pwm_mode.o(.text.pwm_mode_init)
    __arm_cp.0_5                             0x08007cc0   Number         4  pwm_mode.o(.text.pwm_mode_init)
    __arm_cp.0_6                             0x08007cc4   Number         4  pwm_mode.o(.text.pwm_mode_init)
    __arm_cp.0_7                             0x08007cc8   Number         4  pwm_mode.o(.text.pwm_mode_init)
    [Anonymous Symbol]                       0x08007ccc   Section        0  pwm_mode.o(.text.pwm_speed_control)
    __arm_cp.7_0                             0x08007d64   Number         4  pwm_mode.o(.text.pwm_speed_control)
    __arm_cp.7_1                             0x08007d68   Number         4  pwm_mode.o(.text.pwm_speed_control)
    __arm_cp.7_2                             0x08007d6c   Number         4  pwm_mode.o(.text.pwm_speed_control)
    __arm_cp.7_3                             0x08007d70   Number         4  pwm_mode.o(.text.pwm_speed_control)
    __arm_cp.7_4                             0x08007d74   Number         4  pwm_mode.o(.text.pwm_speed_control)
    [Anonymous Symbol]                       0x08007d78   Section        0  pwm_common.o(.text.waitForPolarizationEnd)
    [Anonymous Symbol]                       0x08007db4   Section        0  app_handle.o(.text.work_mode_init)
    [Anonymous Symbol]                       0x08007dc4   Section        0  app_handle.o(.text.work_mode_perfrom)
    __arm_cp.1_1                             0x08007df8   Number         4  app_handle.o(.text.work_mode_perfrom)
    __arm_cp.1_2                             0x08007dfc   Number         4  app_handle.o(.text.work_mode_perfrom)
    [Anonymous Symbol]                       0x08007e00   Section        0  app_handle.o(.text.work_mode_switch)
    __arm_cp.2_0                             0x08007e0c   Number         4  app_handle.o(.text.work_mode_switch)
    .text_divfast                            0x08007e10   Section      502  aeabi_sdivfast.o(.text_divfast)
    x$fpl$fadd                               0x08008008   Section      140  faddsub.o(x$fpl$fadd)
    _fadd1                                   0x08008015   Thumb Code     0  faddsub.o(x$fpl$fadd)
    x$fpl$fmul                               0x08008094   Section      176  fmul.o(x$fpl$fmul)
    x$fpl$fsub                               0x08008144   Section      208  faddsub.o(x$fpl$fsub)
    _fsub1                                   0x08008151   Thumb Code     0  faddsub.o(x$fpl$fsub)
    ddiv_reciptbl                            0x08008214   Data         128  ddiv.o(.constdata)
    .constdata                               0x08008214   Section      128  ddiv.o(.constdata)
    x$fpl$usenofp                            0x08008214   Section        0  usenofp.o(x$fpl$usenofp)
    fdiv_tab                                 0x08008294   Data          64  fdiv.o(.constdata)
    .constdata                               0x08008294   Section       64  fdiv.o(.constdata)
    CHANNEL_OFFSET_TAB                       0x080082d4   Data           5  usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB)
    [Anonymous Symbol]                       0x080082d4   Section        0  usart_aspep_driver.o(.rodata.CHANNEL_OFFSET_TAB)
    CRC4_Lookup8                             0x080082d9   Data         256  aspep.o(.rodata.CRC4_Lookup8)
    [Anonymous Symbol]                       0x080082d9   Section        0  aspep.o(.rodata.CRC4_Lookup8)
    M1_ApplicationConfig_reg                 0x080083fb   Data          14  mc_configuration_registers.o(.rodata.M1_ApplicationConfig_reg)
    [Anonymous Symbol]                       0x080083fb   Section        0  mc_configuration_registers.o(.rodata.M1_ApplicationConfig_reg)
    M1_FOCConfig_reg                         0x08008409   Data          14  mc_configuration_registers.o(.rodata.M1_FOCConfig_reg)
    [Anonymous Symbol]                       0x08008409   Section        0  mc_configuration_registers.o(.rodata.M1_FOCConfig_reg)
    M1_PWR_BOARD                             0x08008454   Data          36  mc_configuration_registers.o(.rodata.M1_PWR_BOARD)
    [Anonymous Symbol]                       0x08008454   Section        0  mc_configuration_registers.o(.rodata.M1_PWR_BOARD)
    CRC4_Lookup4                             0x08008cf2   Data          16  aspep.o(.rodata.cst16)
    [Anonymous Symbol]                       0x08008cf2   Section        0  aspep.o(.rodata.cst16)
    g_work_mode_state                        0x08008d04   Data         108  app_handle.o(.rodata.g_work_mode_state)
    [Anonymous Symbol]                       0x08008d04   Section        0  app_handle.o(.rodata.g_work_mode_state)
    [Anonymous Symbol]                       0x20000000   Section        0  stm32g0xx_hal.o(.data..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000008   Section        0  app_handle.o(.data..L_MergedGlobals)
    SysTick_Handler.SystickDividerCounter    0x2000045c   Data           1  stm32g0xx_mc_it.o(.data.SysTick_Handler.SystickDividerCounter)
    [Anonymous Symbol]                       0x2000045c   Section        0  stm32g0xx_mc_it.o(.data.SysTick_Handler.SystickDividerCounter)
    UASPEP_A                                 0x2000048c   Data          20  mcp_config.o(.data.UASPEP_A)
    [Anonymous Symbol]                       0x2000048c   Section        0  mcp_config.o(.data.UASPEP_A)
    .bss                                     0x20000570   Section       96  libspace.o(.bss)
    [Anonymous Symbol]                       0x200005d0   Section        0  main.o(.bss..L_MergedGlobals)
    RCM_currentHandle                        0x200005e4   Data           1  regular_conversion_manager.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x200005e4   Section        0  regular_conversion_manager.o(.bss..L_MergedGlobals)
    RCM_UserConvState                        0x200005e5   Data           1  regular_conversion_manager.o(.bss..L_MergedGlobals)
    RCM_UserConvHandle                       0x200005e6   Data           1  regular_conversion_manager.o(.bss..L_MergedGlobals)
    RCM_UserConvValue                        0x200005e8   Data           2  regular_conversion_manager.o(.bss..L_MergedGlobals)
    RCM_NoInj_array                          0x200005fc   Data          24  regular_conversion_manager.o(.bss..L_MergedGlobals)
    RCM_CB_array                             0x20000614   Data          32  regular_conversion_manager.o(.bss..L_MergedGlobals)
    bMCBootCompleted                         0x20000634   Data           1  mc_tasks.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000634   Section        0  mc_tasks.o(.bss..L_MergedGlobals)
    hMFTaskCounterM1                         0x20000636   Data           2  mc_tasks.o(.bss..L_MergedGlobals)
    hBootCapDelayCounterM1                   0x20000638   Data           2  mc_tasks.o(.bss..L_MergedGlobals)
    hStopPermanencyCounterM1                 0x2000063a   Data           2  mc_tasks.o(.bss..L_MergedGlobals)
    pwmcHandle                               0x2000063c   Data           4  mc_tasks.o(.bss..L_MergedGlobals)
    pREMNG.0                                 0x20000640   Data           4  mc_tasks.o(.bss..L_MergedGlobals)
    FOCVars                                  0x20000644   Data          38  mc_tasks.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x2000066c   Section        0  user_logic.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x2000068c   Section        0  adc_cin.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x200006b4   Section        0  pwm_mode.o(.bss..L_MergedGlobals)
    temp                                     0x200006b5   Data           1  pwm_mode.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000718   Section        0  lin.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x2000074c   Section        0  app_error.o(.bss..L_MergedGlobals)
    BusVoltage_LTime                         0x20000750   Data           2  app_error.o(.bss..L_MergedGlobals)
    BusVoltage_HTime                         0x20000752   Data           2  app_error.o(.bss..L_MergedGlobals)
    Temp_Time                                0x20000754   Data           2  app_error.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000758   Section        0  app_mode.o(.bss..L_MergedGlobals)
    MCPAsyncBuffUARTA_A                      0x20000764   Data        2054  mcp_config.o(.bss.MCPAsyncBuffUARTA_A)
    [Anonymous Symbol]                       0x20000764   Section        0  mcp_config.o(.bss.MCPAsyncBuffUARTA_A)
    MCPAsyncBuffUARTA_B                      0x20000f6c   Data        2054  mcp_config.o(.bss.MCPAsyncBuffUARTA_B)
    [Anonymous Symbol]                       0x20000f6c   Section        0  mcp_config.o(.bss.MCPAsyncBuffUARTA_B)
    MCPSyncRXBuff                            0x20001774   Data         130  mcp_config.o(.bss.MCPSyncRXBuff)
    [Anonymous Symbol]                       0x20001774   Section        0  mcp_config.o(.bss.MCPSyncRXBuff)
    MCPSyncTxBuff                            0x200017f8   Data         134  mcp_config.o(.bss.MCPSyncTxBuff)
    [Anonymous Symbol]                       0x200017f8   Section        0  mcp_config.o(.bss.MCPSyncTxBuff)
    RI_GetPtrReg.nullData16                  0x200018ac   Data           2  register_interface.o(.bss.RI_GetPtrReg.nullData16)
    [Anonymous Symbol]                       0x200018ac   Section        0  register_interface.o(.bss.RI_GetPtrReg.nullData16)
    RealBusVoltageSensorFilterBufferM1       0x200018ae   Data          20  mc_config.o(.bss.RealBusVoltageSensorFilterBufferM1)
    [Anonymous Symbol]                       0x200018ae   Section        0  mc_config.o(.bss.RealBusVoltageSensorFilterBufferM1)
    Heap_Mem                                 0x20001a28   Data         512  startup_stm32g030xx.o(HEAP)
    HEAP                                     0x20001a28   Section      512  startup_stm32g030xx.o(HEAP)
    Stack_Mem                                0x20001c28   Data         768  startup_stm32g030xx.o(STACK)
    STACK                                    0x20001c28   Section      768  startup_stm32g030xx.o(STACK)
    __initial_sp                             0x20001f28   Data           0  startup_stm32g030xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000c0   Number         0  startup_stm32g030xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32g030xx.o(RESET)
    __Vectors_End                            0x080000c0   Data           0  startup_stm32g030xx.o(RESET)
    __main                                   0x080000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000c9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080000d9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_zeroinit                   0x08000105   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000121   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_1                       0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x08000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x08000125   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000129   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000129   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000129   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0800012f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0800012f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x08000133   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000133   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800013b   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0800013d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0800013d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000141   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x08000149   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x08000149   Thumb Code     0  rt_memcpy.o(.emb_text)
    Reset_Handler                            0x08000181   Thumb Code    26  startup_stm32g030xx.o(.text)
    ADC1_IRQHandler                          0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    DMA1_Ch4_5_DMAMUX1_OVR_IRQHandler        0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    EXTI0_1_IRQHandler                       0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    EXTI2_3_IRQHandler                       0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    FLASH_IRQHandler                         0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    I2C1_IRQHandler                          0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    I2C2_IRQHandler                          0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    RCC_IRQHandler                           0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    RTC_TAMP_IRQHandler                      0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    SPI1_IRQHandler                          0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    SPI2_IRQHandler                          0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM16_IRQHandler                         0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM1_CC_IRQHandler                       0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM3_IRQHandler                          0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    WWDG_IRQHandler                          0x080001a5   Thumb Code     0  startup_stm32g030xx.o(.text)
    __user_initial_stackheap                 0x080001a9   Thumb Code     0  startup_stm32g030xx.o(.text)
    __aeabi_lmul                             0x080001cd   Thumb Code    48  llmul.o(.text)
    _ll_mul                                  0x080001cd   Thumb Code     0  llmul.o(.text)
    __aeabi_memcpy                           0x080001fd   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x080001fd   Thumb Code     0  rt_memcpy.o(.text)
    _memset_w                                0x0800027f   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x08000299   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x080002b7   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x080002b7   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x080002bb   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x080002bb   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x080002bb   Thumb Code     4  rt_memclr.o(.text)
    __use_two_region_memory                  0x080002bf   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080002c1   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080002c3   Thumb Code     2  heapauxi.o(.text)
    __aeabi_d2f                              0x080002c5   Thumb Code     0  d2f.o(.text)
    _d2f                                     0x080002c5   Thumb Code   120  d2f.o(.text)
    __aeabi_ddiv                             0x08000341   Thumb Code     0  ddiv.o(.text)
    _ddiv                                    0x08000341   Thumb Code  1072  ddiv.o(.text)
    _drdiv                                   0x08000771   Thumb Code    20  ddiv.o(.text)
    __aeabi_d2iz                             0x08000789   Thumb Code     0  dfixi.o(.text)
    _dfix                                    0x08000789   Thumb Code    98  dfixi.o(.text)
    __aeabi_i2d_normalise                    0x080007f5   Thumb Code    66  dflti.o(.text)
    __aeabi_i2d                              0x08000837   Thumb Code    16  dflti.o(.text)
    _dflt                                    0x08000837   Thumb Code     0  dflti.o(.text)
    __aeabi_ui2d                             0x08000847   Thumb Code     6  dflti.o(.text)
    _dfltu                                   0x08000847   Thumb Code     0  dflti.o(.text)
    __aeabi_dmul                             0x0800084d   Thumb Code     0  dmul.o(.text)
    _dmul                                    0x0800084d   Thumb Code   558  dmul.o(.text)
    __aeabi_fdiv                             0x08000a95   Thumb Code     0  fdiv.o(.text)
    _fdiv                                    0x08000a95   Thumb Code   334  fdiv.o(.text)
    _frdiv                                   0x08000be3   Thumb Code     8  fdiv.o(.text)
    __aeabi_f2iz                             0x08000bf5   Thumb Code     0  ffixi.o(.text)
    _ffix                                    0x08000bf5   Thumb Code    76  ffixi.o(.text)
    __aeabi_f2uiz                            0x08000c41   Thumb Code     0  ffixui.o(.text)
    _ffixu                                   0x08000c41   Thumb Code    48  ffixui.o(.text)
    __aeabi_i2f_normalise                    0x08000c71   Thumb Code    72  fflti.o(.text)
    __aeabi_i2f                              0x08000cb9   Thumb Code    16  fflti.o(.text)
    _fflt                                    0x08000cb9   Thumb Code     0  fflti.o(.text)
    __aeabi_ui2f                             0x08000cc9   Thumb Code     6  fflti.o(.text)
    _ffltu                                   0x08000cc9   Thumb Code     0  fflti.o(.text)
    __user_setup_stackheap                   0x08000ccf   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x08000d0d   Thumb Code    16  exit.o(.text)
    __user_libspace                          0x08000d1d   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000d1d   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x08000d1d   Thumb Code     0  libspace.o(.text)
    __decompress                             0x08000d25   Thumb Code     0  __dczerorl2.o(.text)
    __decompress1                            0x08000d25   Thumb Code    86  __dczerorl2.o(.text)
    ADC_CIN_INIT                             0x08000d7d   Thumb Code    76  adc_cin.o(.text.ADC_CIN_INIT)
    ADC_VTS_INIT                             0x08000dc9   Thumb Code    76  adc_cin.o(.text.ADC_VTS_INIT)
    ASPEP_HWDMAReset                         0x08000e25   Thumb Code    22  aspep.o(.text.ASPEP_HWDMAReset)
    ASPEP_HWDataReceivedIT                   0x08000e3d   Thumb Code   140  aspep.o(.text.ASPEP_HWDataReceivedIT)
    ASPEP_HWDataTransmittedIT                0x08000ecd   Thumb Code   162  aspep.o(.text.ASPEP_HWDataTransmittedIT)
    ASPEP_RXframeProcess                     0x08000f71   Thumb Code  1480  aspep.o(.text.ASPEP_RXframeProcess)
    ASPEP_getBuffer                          0x08001621   Thumb Code    88  aspep.o(.text.ASPEP_getBuffer)
    ASPEP_sendPacket                         0x08001679   Thumb Code    78  aspep.o(.text.ASPEP_sendPacket)
    ASPEP_start                              0x080016c7   Thumb Code    36  aspep.o(.text.ASPEP_start)
    Circle_Limitation                        0x080016ed   Thumb Code   120  circle_limitation.o(.text.Circle_Limitation)
    DMA1_Channel1_IRQHandler                 0x0800176d   Thumb Code    16  stm32g0xx_mc_it.o(.text.DMA1_Channel1_IRQHandler)
    DMA1_Channel2_3_IRQHandler               0x08001781   Thumb Code    24  stm32g0xx_mc_it.o(.text.DMA1_Channel2_3_IRQHandler)
    EXTI4_15_IRQHandler                      0x080017a1   Thumb Code   176  stm32g0xx_mc_it.o(.text.EXTI4_15_IRQHandler)
    FOC_CalcCurrRef                          0x0800186d   Thumb Code    36  mc_tasks.o(.text.FOC_CalcCurrRef)
    FOC_Clear                                0x08001891   Thumb Code    80  mc_tasks.o(.text.FOC_Clear)
    FOC_InitAdditionalMethods                0x080018f1   Thumb Code     2  mc_tasks.o(.text.FOC_InitAdditionalMethods)
    GET_ADC_CIN_Digital                      0x080018f5   Thumb Code    52  adc_cin.o(.text.GET_ADC_CIN_Digital)
    GET_ADC_VTS_Voltage                      0x08001929   Thumb Code    80  adc_cin.o(.text.GET_ADC_VTS_Voltage)
    HAL_Delay                                0x08001989   Thumb Code    32  stm32g0xx_hal.o(.text.HAL_Delay)
    HAL_GPIO_DeInit                          0x080019a9   Thumb Code   268  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_DeInit)
    HAL_GPIO_Init                            0x08001ab9   Thumb Code   432  stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init)
    HAL_GetTick                              0x08001c7d   Thumb Code     8  stm32g0xx_hal.o(.text.HAL_GetTick)
    HAL_IncTick                              0x08001c85   Thumb Code    16  stm32g0xx_hal.o(.text.HAL_IncTick)
    HAL_Init                                 0x08001c99   Thumb Code    40  stm32g0xx_hal.o(.text.HAL_Init)
    HAL_InitTick                             0x08001cc5   Thumb Code    64  stm32g0xx_hal.o(.text.HAL_InitTick)
    HAL_MspInit                              0x08001d09   Thumb Code    40  stm32g0xx_hal_msp.o(.text.HAL_MspInit)
    HAL_NVIC_EnableIRQ                       0x08001d35   Thumb Code    20  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    HAL_NVIC_SetPriority                     0x08001d4d   Thumb Code    56  stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    HAL_RCC_GetHCLKFreq                      0x08001d8d   Thumb Code     8  stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    HAL_SYSTICK_Callback                     0x08001d99   Thumb Code     2  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Callback)
    HAL_SYSTICK_Config                       0x08001d9d   Thumb Code    40  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config)
    HAL_SYSTICK_IRQHandler                   0x08001dd1   Thumb Code     8  stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler)
    HAL_TIMEx_Break2Callback                 0x08001dd9   Thumb Code     2  stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback)
    HAL_TIMEx_BreakCallback                  0x08001ddb   Thumb Code     2  stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback)
    HAL_TIMEx_CommutCallback                 0x08001ddd   Thumb Code     2  stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback)
    HAL_TIM_Base_Init                        0x08001de1   Thumb Code   188  stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init)
    HAL_TIM_Base_MspInit                     0x08001ea1   Thumb Code   112  stm32g0xx_hal_msp.o(.text.HAL_TIM_Base_MspInit)
    HAL_TIM_Base_Start_IT                    0x08001f1d   Thumb Code    76  stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT)
    HAL_TIM_IC_CaptureCallback               0x08001f75   Thumb Code     2  stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback)
    HAL_TIM_IRQHandler                       0x08001f79   Thumb Code   352  stm32g0xx_hal_tim.o(.text.HAL_TIM_IRQHandler)
    HAL_TIM_OC_DelayElapsedCallback          0x080020dd   Thumb Code     2  stm32g0xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback)
    HAL_TIM_PWM_PulseFinishedCallback        0x080020df   Thumb Code     2  stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback)
    HAL_TIM_PeriodElapsedCallback            0x080020e1   Thumb Code    20  pwm_mode.o(.text.HAL_TIM_PeriodElapsedCallback)
    HAL_TIM_TriggerCallback                  0x080020fd   Thumb Code     2  stm32g0xx_hal_tim.o(.text.HAL_TIM_TriggerCallback)
    HardFault_Handler                        0x080020ff   Thumb Code     6  stm32g0xx_mc_it.o(.text.HardFault_Handler)
    LL_ADC_Init                              0x08002105   Thumb Code    48  stm32g0xx_ll_adc.o(.text.LL_ADC_Init)
    LL_ADC_REG_Init                          0x08002139   Thumb Code   100  stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init)
    LL_EXTI_Init                             0x080021a1   Thumb Code   172  stm32g0xx_ll_exti.o(.text.LL_EXTI_Init)
    LL_GPIO_Init                             0x08002255   Thumb Code   198  stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init)
    LL_SetSystemCoreClock                    0x0800231d   Thumb Code     8  stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    LL_TIM_BDTR_Init                         0x08002329   Thumb Code   128  stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init)
    LL_TIM_Init                              0x080023b9   Thumb Code   124  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    LL_TIM_OC_Init                           0x08002445   Thumb Code   700  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    Lin_Checksum                             0x08002729   Thumb Code   188  lin.o(.text.Lin_Checksum)
    MCI_Clear_Iqdref                         0x080027e5   Thumb Code    18  mc_interface.o(.text.MCI_Clear_Iqdref)
    MCI_ExecBufferedCommands                 0x080027f7   Thumb Code   104  mc_interface.o(.text.MCI_ExecBufferedCommands)
    MCI_ExecSpeedRamp                        0x08002861   Thumb Code    16  mc_interface.o(.text.MCI_ExecSpeedRamp)
    MCI_ExecTorqueRamp                       0x08002875   Thumb Code    16  mc_interface.o(.text.MCI_ExecTorqueRamp)
    MCI_FaultAcknowledged                    0x08002885   Thumb Code    42  mc_interface.o(.text.MCI_FaultAcknowledged)
    MCI_FaultProcessing                      0x080028af   Thumb Code    16  mc_interface.o(.text.MCI_FaultProcessing)
    MCI_GetAvrgMecSpeedUnit                  0x080028bf   Thumb Code    14  mc_interface.o(.text.MCI_GetAvrgMecSpeedUnit)
    MCI_GetControlMode                       0x080028cd   Thumb Code     4  mc_interface.o(.text.MCI_GetControlMode)
    MCI_GetCurrentFaults                     0x080028d1   Thumb Code     4  mc_interface.o(.text.MCI_GetCurrentFaults)
    MCI_GetFaultState                        0x080028d5   Thumb Code    10  mc_interface.o(.text.MCI_GetFaultState)
    MCI_GetIab                               0x080028df   Thumb Code    12  mc_interface.o(.text.MCI_GetIab)
    MCI_GetIalphabeta                        0x080028eb   Thumb Code    12  mc_interface.o(.text.MCI_GetIalphabeta)
    MCI_GetImposedMotorDirection             0x080028f7   Thumb Code    68  mc_interface.o(.text.MCI_GetImposedMotorDirection)
    MCI_GetIqd                               0x0800293b   Thumb Code    12  mc_interface.o(.text.MCI_GetIqd)
    MCI_GetIqdref                            0x08002947   Thumb Code    12  mc_interface.o(.text.MCI_GetIqdref)
    MCI_GetLastRampFinalDuration             0x08002953   Thumb Code     4  mc_interface.o(.text.MCI_GetLastRampFinalDuration)
    MCI_GetLastRampFinalSpeed                0x08002957   Thumb Code     6  mc_interface.o(.text.MCI_GetLastRampFinalSpeed)
    MCI_GetLastRampFinalTorque               0x0800295d   Thumb Code     6  mc_interface.o(.text.MCI_GetLastRampFinalTorque)
    MCI_GetMecSpeedRefUnit                   0x08002963   Thumb Code    10  mc_interface.o(.text.MCI_GetMecSpeedRefUnit)
    MCI_GetOccurredFaults                    0x0800296d   Thumb Code     4  mc_interface.o(.text.MCI_GetOccurredFaults)
    MCI_GetSTMState                          0x08002971   Thumb Code     4  mc_interface.o(.text.MCI_GetSTMState)
    MCI_GetTeref                             0x08002975   Thumb Code     8  mc_interface.o(.text.MCI_GetTeref)
    MCI_GetValphabeta                        0x0800297d   Thumb Code    12  mc_interface.o(.text.MCI_GetValphabeta)
    MCI_GetVqd                               0x08002989   Thumb Code    12  mc_interface.o(.text.MCI_GetVqd)
    MCI_Init                                 0x08002995   Thumb Code    24  mc_interface.o(.text.MCI_Init)
    MCI_SetCurrentReferences                 0x080029ad   Thumb Code    16  mc_interface.o(.text.MCI_SetCurrentReferences)
    MCI_StartMotor                           0x080029c1   Thumb Code    48  mc_interface.o(.text.MCI_StartMotor)
    MCI_StopMotor                            0x080029f1   Thumb Code    68  mc_interface.o(.text.MCI_StopMotor)
    MCI_StopRamp                             0x08002a35   Thumb Code    10  mc_interface.o(.text.MCI_StopRamp)
    MCM_Clarke                               0x08002a41   Thumb Code    60  mc_math.o(.text.MCM_Clarke)
    MCM_Park                                 0x08002a85   Thumb Code   144  mc_math.o(.text.MCM_Park)
    MCM_Rev_Park                             0x08002b1d   Thumb Code    46  mc_math.o(.text.MCM_Rev_Park)
    MCM_Trig_Functions                       0x08002b4d   Thumb Code   120  mc_math.o(.text.MCM_Trig_Functions)
    MCPA_cfgLog                              0x08002bc9   Thumb Code   228  mcpa.o(.text.MCPA_cfgLog)
    MCPA_dataLog                             0x08002cad   Thumb Code   476  mcpa.o(.text.MCPA_dataLog)
    MCPA_flushDataLog                        0x08002e8d   Thumb Code   108  mcpa.o(.text.MCPA_flushDataLog)
    MCP_ReceivedPacket                       0x08002ef9   Thumb Code   352  mcp.o(.text.MCP_ReceivedPacket)
    MC_APP_BootHook                          0x0800305d   Thumb Code     2  mc_app_hooks.o(.text.MC_APP_BootHook)
    MC_APP_PostMediumFrequencyHook_M1        0x0800305f   Thumb Code     2  mc_app_hooks.o(.text.MC_APP_PostMediumFrequencyHook_M1)
    MC_AcknowledgeFaultMotor1                0x08003061   Thumb Code    12  mc_api.o(.text.MC_AcknowledgeFaultMotor1)
    MC_GetMecSpeedAverageMotor1              0x0800306d   Thumb Code    12  mc_api.o(.text.MC_GetMecSpeedAverageMotor1)
    MC_GetMecSpeedReferenceMotor1            0x08003079   Thumb Code    12  mc_api.o(.text.MC_GetMecSpeedReferenceMotor1)
    MC_GetOccurredFaultsMotor1               0x08003085   Thumb Code    12  mc_api.o(.text.MC_GetOccurredFaultsMotor1)
    MC_GetSTMStateMotor1                     0x08003091   Thumb Code    12  mc_api.o(.text.MC_GetSTMStateMotor1)
    MC_ProfilerCommand                       0x0800309d   Thumb Code     4  mc_api.o(.text.MC_ProfilerCommand)
    MC_ProgramSpeedRampMotor1                0x080030a1   Thumb Code    16  mc_api.o(.text.MC_ProgramSpeedRampMotor1)
    MC_RunMotorControlTasks                  0x080030b1   Thumb Code    20  mc_tasks.o(.text.MC_RunMotorControlTasks)
    MC_Scheduler                             0x080030c5   Thumb Code   112  mc_tasks.o(.text.MC_Scheduler)
    MC_StartMotor1                           0x08003139   Thumb Code    12  mc_api.o(.text.MC_StartMotor1)
    MC_StopMotor1                            0x08003145   Thumb Code    12  mc_api.o(.text.MC_StopMotor1)
    MCboot                                   0x08003151   Thumb Code   200  mc_tasks.o(.text.MCboot)
    MX_MotorControl_Init                     0x08003259   Thumb Code    44  motorcontrol.o(.text.MX_MotorControl_Init)
    MX_TIM17_Init                            0x0800328d   Thumb Code    88  main.o(.text.MX_TIM17_Init)
    NMI_Handler                              0x080032f1   Thumb Code     2  stm32g0xx_it.o(.text.NMI_Handler)
    NTC_CalcAvTemp                           0x080032f5   Thumb Code    56  ntc_temperature_sensor.o(.text.NTC_CalcAvTemp)
    NTC_Clear                                0x08003331   Thumb Code     6  ntc_temperature_sensor.o(.text.NTC_Clear)
    NTC_GetAvTemp_C                          0x08003337   Thumb Code    34  ntc_temperature_sensor.o(.text.NTC_GetAvTemp_C)
    NTC_Init                                 0x08003359   Thumb Code    38  ntc_temperature_sensor.o(.text.NTC_Init)
    NTC_SetFaultState                        0x0800337f   Thumb Code    26  ntc_temperature_sensor.o(.text.NTC_SetFaultState)
    PID_GetKD                                0x08003399   Thumb Code     6  pid_regulator.o(.text.PID_GetKD)
    PID_GetKDDivisorPOW2                     0x0800339f   Thumb Code     4  pid_regulator.o(.text.PID_GetKDDivisorPOW2)
    PID_GetKI                                0x080033a3   Thumb Code     6  pid_regulator.o(.text.PID_GetKI)
    PID_GetKIDivisor                         0x080033a9   Thumb Code     4  pid_regulator.o(.text.PID_GetKIDivisor)
    PID_GetKIDivisorPOW2                     0x080033ad   Thumb Code     4  pid_regulator.o(.text.PID_GetKIDivisorPOW2)
    PID_GetKP                                0x080033b1   Thumb Code     6  pid_regulator.o(.text.PID_GetKP)
    PID_GetKPDivisorPOW2                     0x080033b7   Thumb Code     4  pid_regulator.o(.text.PID_GetKPDivisorPOW2)
    PID_HandleInit                           0x080033bb   Thumb Code    16  pid_regulator.o(.text.PID_HandleInit)
    PID_SetIntegralTerm                      0x080033cb   Thumb Code     4  pid_regulator.o(.text.PID_SetIntegralTerm)
    PID_SetKD                                0x080033cf   Thumb Code     4  pid_regulator.o(.text.PID_SetKD)
    PID_SetKDDivisorPOW2                     0x080033d3   Thumb Code    10  pid_regulator.o(.text.PID_SetKDDivisorPOW2)
    PID_SetKI                                0x080033dd   Thumb Code     4  pid_regulator.o(.text.PID_SetKI)
    PID_SetKIDivisorPOW2                     0x080033e1   Thumb Code    36  pid_regulator.o(.text.PID_SetKIDivisorPOW2)
    PID_SetKP                                0x0800340d   Thumb Code     4  pid_regulator.o(.text.PID_SetKP)
    PID_SetKPDivisorPOW2                     0x08003411   Thumb Code    10  pid_regulator.o(.text.PID_SetKPDivisorPOW2)
    PID_SetLowerIntegralTermLimit            0x0800341b   Thumb Code     4  pid_regulator.o(.text.PID_SetLowerIntegralTermLimit)
    PID_SetUpperIntegralTermLimit            0x0800341f   Thumb Code     4  pid_regulator.o(.text.PID_SetUpperIntegralTermLimit)
    PI_Controller                            0x08003425   Thumb Code   132  pid_regulator.o(.text.PI_Controller)
    PQD_CalcElMotorPower                     0x080034ad   Thumb Code    48  pqd_motor_power_measurement.o(.text.PQD_CalcElMotorPower)
    PQD_Clear                                0x080034dd   Thumb Code     6  pqd_motor_power_measurement.o(.text.PQD_Clear)
    PQD_GetAvrgElMotorPowerW                 0x080034e3   Thumb Code    30  pqd_motor_power_measurement.o(.text.PQD_GetAvrgElMotorPowerW)
    PWMC_CheckOverCurrent                    0x08003501   Thumb Code     8  pwm_curr_fdbk.o(.text.PWMC_CheckOverCurrent)
    PWMC_CurrentReadingCalibr                0x08003509   Thumb Code    68  pwm_curr_fdbk.o(.text.PWMC_CurrentReadingCalibr)
    PWMC_GetPhaseCurrents                    0x0800354d   Thumb Code     8  pwm_curr_fdbk.o(.text.PWMC_GetPhaseCurrents)
    PWMC_SetPhaseVoltage                     0x08003555   Thumb Code   436  pwm_curr_fdbk.o(.text.PWMC_SetPhaseVoltage)
    PWMC_SwitchOffPWM                        0x08003709   Thumb Code     8  pwm_curr_fdbk.o(.text.PWMC_SwitchOffPWM)
    PWMC_SwitchOnPWM                         0x08003711   Thumb Code     8  pwm_curr_fdbk.o(.text.PWMC_SwitchOnPWM)
    PendSV_Handler                           0x08003719   Thumb Code     2  stm32g0xx_it.o(.text.PendSV_Handler)
    R3_1_CurrentReadingCalibration           0x0800371d   Thumb Code   280  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_CurrentReadingCalibration)
    R3_1_GetOffsetCalib                      0x0800384d   Thumb Code    14  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetOffsetCalib)
    R3_1_GetPhaseCurrents                    0x0800385d   Thumb Code   248  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_GetPhaseCurrents)
    R3_1_HFCurrentsCalibrationAB             0x08003965   Thumb Code    76  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationAB)
    R3_1_HFCurrentsCalibrationC              0x080039b1   Thumb Code    68  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_HFCurrentsCalibrationC)
    R3_1_Init                                0x080039f9   Thumb Code   284  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_Init)
    R3_1_IsOverCurrentOccurred               0x08003b35   Thumb Code    50  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_IsOverCurrentOccurred)
    R3_1_OVERCURRENT_IRQHandler              0x08003b67   Thumb Code    58  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_OVERCURRENT_IRQHandler)
    R3_1_OVERVOLTAGE_IRQHandler              0x08003ba1   Thumb Code    28  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_OVERVOLTAGE_IRQHandler)
    R3_1_SetADCSampPointCalibration          0x08003bbd   Thumb Code    30  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointCalibration)
    R3_1_SetADCSampPointSectX                0x08003bdb   Thumb Code   104  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetADCSampPointSectX)
    R3_1_SetOffsetCalib                      0x08003c43   Thumb Code    20  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SetOffsetCalib)
    R3_1_SwitchOffPWM                        0x08003c59   Thumb Code   164  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOffPWM)
    R3_1_SwitchOnPWM                         0x08003cfd   Thumb Code   196  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_SwitchOnPWM)
    R3_1_TIMx_UP_IRQHandler                  0x08003dcd   Thumb Code   108  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TIMx_UP_IRQHandler)
    R3_1_TurnOnLowSides                      0x08003e41   Thumb Code    84  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_TurnOnLowSides)
    R3_1_WriteTIMRegisters                   0x08003e99   Thumb Code    44  r3_g0xx_pwm_curr_fdbk.o(.text.R3_1_WriteTIMRegisters)
    RCM_ExecNextConv                         0x08003ec9   Thumb Code    92  regular_conversion_manager.o(.text.RCM_ExecNextConv)
    RCM_ExecRegularConv                      0x08003f29   Thumb Code   416  regular_conversion_manager.o(.text.RCM_ExecRegularConv)
    RCM_ExecUserConv                         0x080040d5   Thumb Code    60  regular_conversion_manager.o(.text.RCM_ExecUserConv)
    RCM_GetUserConv                          0x08004111   Thumb Code    20  regular_conversion_manager.o(.text.RCM_GetUserConv)
    RCM_GetUserConvState                     0x08004129   Thumb Code     8  regular_conversion_manager.o(.text.RCM_GetUserConvState)
    RCM_ReadOngoingConv                      0x08004131   Thumb Code    64  regular_conversion_manager.o(.text.RCM_ReadOngoingConv)
    RCM_RegisterRegConv                      0x08004171   Thumb Code   296  regular_conversion_manager.o(.text.RCM_RegisterRegConv)
    RCM_RequestUserConv                      0x080042a1   Thumb Code    28  regular_conversion_manager.o(.text.RCM_RequestUserConv)
    REMNG_Calc                               0x080042c1   Thumb Code    44  ramp_ext_mngr.o(.text.REMNG_Calc)
    REMNG_ExecRamp                           0x080042ed   Thumb Code   128  ramp_ext_mngr.o(.text.REMNG_ExecRamp)
    REMNG_Init                               0x0800436d   Thumb Code    16  ramp_ext_mngr.o(.text.REMNG_Init)
    REMNG_RampCompleted                      0x0800437d   Thumb Code     8  ramp_ext_mngr.o(.text.REMNG_RampCompleted)
    RI_GetIDSize                             0x08004385   Thumb Code    32  register_interface.o(.text.RI_GetIDSize)
    RI_GetPtrReg                             0x080043a5   Thumb Code   244  register_interface.o(.text.RI_GetPtrReg)
    RI_GetRegCommandParser                   0x080044a9   Thumb Code  2196  register_interface.o(.text.RI_GetRegCommandParser)
    RI_SetRegCommandParser                   0x08004d6d   Thumb Code  1832  register_interface.o(.text.RI_SetRegCommandParser)
    RUC_Clear                                0x080054ed   Thumb Code   128  revup_ctrl.o(.text.RUC_Clear)
    RUC_Exec                                 0x0800556d   Thumb Code   104  revup_ctrl.o(.text.RUC_Exec)
    RUC_FirstAccelerationStageReached        0x080055d5   Thumb Code    20  revup_ctrl.o(.text.RUC_FirstAccelerationStageReached)
    RUC_GetNumberOfPhases                    0x080055e9   Thumb Code     6  revup_ctrl.o(.text.RUC_GetNumberOfPhases)
    RUC_GetPhase                             0x080055ef   Thumb Code    18  revup_ctrl.o(.text.RUC_GetPhase)
    RUC_Init                                 0x08005601   Thumb Code    96  revup_ctrl.o(.text.RUC_Init)
    RUC_SetPhase                             0x08005665   Thumb Code    18  revup_ctrl.o(.text.RUC_SetPhase)
    RVBS_CalcAvVbus                          0x08005679   Thumb Code   184  r_divider_bus_voltage_sensor.o(.text.RVBS_CalcAvVbus)
    RVBS_CheckFaultState                     0x08005735   Thumb Code    78  r_divider_bus_voltage_sensor.o(.text.RVBS_CheckFaultState)
    RVBS_Clear                               0x08005783   Thumb Code    74  r_divider_bus_voltage_sensor.o(.text.RVBS_Clear)
    RVBS_Init                                0x080057cd   Thumb Code    22  r_divider_bus_voltage_sensor.o(.text.RVBS_Init)
    SPD_GetAvrgMecSpeedUnit                  0x080057e3   Thumb Code     6  speed_pos_fdbk.o(.text.SPD_GetAvrgMecSpeedUnit)
    SPD_GetElAngle                           0x080057e9   Thumb Code     6  speed_pos_fdbk.o(.text.SPD_GetElAngle)
    SPD_GetInstElSpeedDpp                    0x080057ef   Thumb Code     6  speed_pos_fdbk.o(.text.SPD_GetInstElSpeedDpp)
    SPD_GetS16Speed                          0x080057f5   Thumb Code    24  speed_pos_fdbk.o(.text.SPD_GetS16Speed)
    SPD_IsMecSpeedReliable                   0x08005811   Thumb Code    84  speed_pos_fdbk.o(.text.SPD_IsMecSpeedReliable)
    STC_CalcTorqueReference                  0x08005865   Thumb Code   124  speed_torq_ctrl.o(.text.STC_CalcTorqueReference)
    STC_Clear                                0x080058f1   Thumb Code    18  speed_torq_ctrl.o(.text.STC_Clear)
    STC_ExecRamp                             0x08005905   Thumb Code   156  speed_torq_ctrl.o(.text.STC_ExecRamp)
    STC_ForceSpeedReferenceToCurrentSpeed    0x080059a5   Thumb Code    16  speed_torq_ctrl.o(.text.STC_ForceSpeedReferenceToCurrentSpeed)
    STC_GetDefaultIqdref                     0x080059b5   Thumb Code    10  speed_torq_ctrl.o(.text.STC_GetDefaultIqdref)
    STC_GetMecSpeedRefUnit                   0x080059bf   Thumb Code     6  speed_torq_ctrl.o(.text.STC_GetMecSpeedRefUnit)
    STC_GetSpeedSensor                       0x080059c5   Thumb Code     4  speed_torq_ctrl.o(.text.STC_GetSpeedSensor)
    STC_GetTorqueRef                         0x080059c9   Thumb Code     6  speed_torq_ctrl.o(.text.STC_GetTorqueRef)
    STC_Init                                 0x080059cf   Thumb Code    32  speed_torq_ctrl.o(.text.STC_Init)
    STC_SetControlMode                       0x080059ef   Thumb Code     8  speed_torq_ctrl.o(.text.STC_SetControlMode)
    STC_SetSpeedSensor                       0x080059f7   Thumb Code     4  speed_torq_ctrl.o(.text.STC_SetSpeedSensor)
    STC_StopRamp                             0x080059fb   Thumb Code     8  speed_torq_ctrl.o(.text.STC_StopRamp)
    STO_OTF_ResetPLL                         0x08005a03   Thumb Code    14  sto_pll_speed_pos_fdbk.o(.text.STO_OTF_ResetPLL)
    STO_PLL_CalcAvrgElSpeedDpp               0x08005a11   Thumb Code    66  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgElSpeedDpp)
    STO_PLL_CalcAvrgMecSpeedUnit             0x08005a55   Thumb Code   584  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcAvrgMecSpeedUnit)
    STO_PLL_CalcElAngle                      0x08005c9d   Thumb Code   536  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_CalcElAngle)
    STO_PLL_Clear                            0x08005ebd   Thumb Code    90  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Clear)
    STO_PLL_ForceConvergency1                0x08005f17   Thumb Code    12  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_ForceConvergency1)
    STO_PLL_ForceConvergency2                0x08005f23   Thumb Code    12  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_ForceConvergency2)
    STO_PLL_GetEstimatedBemf                 0x08005f2f   Thumb Code     4  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedBemf)
    STO_PLL_GetEstimatedBemfLevel            0x08005f33   Thumb Code     8  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedBemfLevel)
    STO_PLL_GetEstimatedCurrent              0x08005f3b   Thumb Code    22  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetEstimatedCurrent)
    STO_PLL_GetObservedBemfLevel             0x08005f51   Thumb Code     6  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObservedBemfLevel)
    STO_PLL_GetObserverGains                 0x08005f57   Thumb Code    10  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_GetObserverGains)
    STO_PLL_Init                             0x08005f61   Thumb Code   136  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_Init)
    STO_PLL_IsObserverConverged              0x08005ff1   Thumb Code   166  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsObserverConverged)
    STO_PLL_IsVarianceTight                  0x08006097   Thumb Code     8  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_IsVarianceTight)
    STO_PLL_SetObserverGains                 0x0800609f   Thumb Code     6  sto_pll_speed_pos_fdbk.o(.text.STO_PLL_SetObserverGains)
    STO_ResetPLL                             0x080060a5   Thumb Code    12  sto_pll_speed_pos_fdbk.o(.text.STO_ResetPLL)
    SVC_Handler                              0x080060b1   Thumb Code     2  stm32g0xx_it.o(.text.SVC_Handler)
    SysTick_Handler                          0x080060b5   Thumb Code    48  stm32g0xx_mc_it.o(.text.SysTick_Handler)
    SystemClock_Config                       0x080060ed   Thumb Code   228  main.o(.text.SystemClock_Config)
    SystemInit                               0x080061e5   Thumb Code     2  system_stm32g0xx.o(.text.SystemInit)
    TIM14_IRQHandler                         0x080061e9   Thumb Code    12  stm32g0xx_it.o(.text.TIM14_IRQHandler)
    TIM17_IRQHandler                         0x080061f9   Thumb Code    12  stm32g0xx_it.o(.text.TIM17_IRQHandler)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x08006209   Thumb Code    92  stm32g0xx_mc_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    TSK_ChargeBootCapDelayHasElapsedM1       0x0800626d   Thumb Code    12  mc_tasks.o(.text.TSK_ChargeBootCapDelayHasElapsedM1)
    TSK_HardwareFaultTask                    0x08006279   Thumb Code    24  mc_tasks.o(.text.TSK_HardwareFaultTask)
    TSK_HighFrequencyTask                    0x08006291   Thumb Code   384  mc_tasks.o(.text.TSK_HighFrequencyTask)
    TSK_MF_StopProcessing                    0x08006435   Thumb Code    52  mc_tasks.o(.text.TSK_MF_StopProcessing)
    TSK_MediumFrequencyTaskM1                0x08006471   Thumb Code   800  mc_tasks.o(.text.TSK_MediumFrequencyTaskM1)
    TSK_SafetyTask                           0x080067b1   Thumb Code    24  mc_tasks.o(.text.TSK_SafetyTask)
    TSK_SafetyTask_PWMOFF                    0x080067cd   Thumb Code   132  mc_tasks.o(.text.TSK_SafetyTask_PWMOFF)
    TSK_SetChargeBootCapDelayM1              0x08006865   Thumb Code     8  mc_tasks.o(.text.TSK_SetChargeBootCapDelayM1)
    TSK_SetStopPermanencyTimeM1              0x0800686d   Thumb Code     8  mc_tasks.o(.text.TSK_SetStopPermanencyTimeM1)
    TSK_StopPermanencyTimeHasElapsedM1       0x08006875   Thumb Code    12  mc_tasks.o(.text.TSK_StopPermanencyTimeHasElapsedM1)
    UASPEP_IDLE_ENABLE                       0x08006885   Thumb Code    28  usart_aspep_driver.o(.text.UASPEP_IDLE_ENABLE)
    UASPEP_INIT                              0x080068a1   Thumb Code   144  usart_aspep_driver.o(.text.UASPEP_INIT)
    UASPEP_RECEIVE_BUFFER                    0x08006931   Thumb Code    40  usart_aspep_driver.o(.text.UASPEP_RECEIVE_BUFFER)
    UASPEP_SEND_PACKET                       0x08006959   Thumb Code    44  usart_aspep_driver.o(.text.UASPEP_SEND_PACKET)
    UI_HandleStartStopButton_cb              0x0800698d   Thumb Code    22  mc_tasks.o(.text.UI_HandleStartStopButton_cb)
    UI_Process                               0x080069a5   Thumb Code   108  user_logic.o(.text.UI_Process)
    USART1_IRQHandler                        0x08006a1d   Thumb Code   444  lin.o(.text.USART1_IRQHandler)
    USART2_IRQHandler                        0x08006bed   Thumb Code   208  stm32g0xx_mc_it.o(.text.USART2_IRQHandler)
    User_Motor_Control_M1                    0x08006cc9   Thumb Code   140  user_logic.o(.text.User_Motor_Control_M1)
    VBS_GetAvBusVoltage_V                    0x08006d61   Thumb Code    10  bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_V)
    VBS_GetAvBusVoltage_d                    0x08006d6b   Thumb Code     4  bus_voltage_sensor.o(.text.VBS_GetAvBusVoltage_d)
    VSS_CalcAvrgMecSpeedUnit                 0x08006d6f   Thumb Code   138  virtual_speed_sensor.o(.text.VSS_CalcAvrgMecSpeedUnit)
    VSS_CalcElAngle                          0x08006df9   Thumb Code   172  virtual_speed_sensor.o(.text.VSS_CalcElAngle)
    VSS_Clear                                0x08006ea5   Thumb Code    26  virtual_speed_sensor.o(.text.VSS_Clear)
    VSS_Init                                 0x08006ebf   Thumb Code     8  virtual_speed_sensor.o(.text.VSS_Init)
    VSS_SetMecAcceleration                   0x08006ec7   Thumb Code   150  virtual_speed_sensor.o(.text.VSS_SetMecAcceleration)
    VSS_SetMecAngle                          0x08006f5d   Thumb Code    22  virtual_speed_sensor.o(.text.VSS_SetMecAngle)
    VSS_SetStartTransition                   0x08006f73   Thumb Code    34  virtual_speed_sensor.o(.text.VSS_SetStartTransition)
    VSS_TransitionEnded                      0x08006f95   Thumb Code     6  virtual_speed_sensor.o(.text.VSS_TransitionEnded)
    _sys_exit                                0x08006f9b   Thumb Code     2  main.o(.text._sys_exit)
    error_check                              0x08006f9d   Thumb Code   352  app_error.o(.text.error_check)
    error_mode_init                          0x08007125   Thumb Code    84  app_error.o(.text.error_mode_init)
    error_mode_tick                          0x0800717d   Thumb Code    16  app_error.o(.text.error_mode_tick)
    exe_key_func                             0x08007191   Thumb Code    24  led_key.o(.text.exe_key_func)
    getScalingFactor                         0x080071ad   Thumb Code    84  ramp_ext_mngr.o(.text.getScalingFactor)
    get_duty_period                          0x08007201   Thumb Code    56  pwm_mode.o(.text.get_duty_period)
    get_key_state                            0x08007241   Thumb Code   216  led_key.o(.text.get_key_state)
    led_clear                                0x08007325   Thumb Code    28  led_key.o(.text.led_clear)
    led_show_err                             0x08007341   Thumb Code   100  led_key.o(.text.led_show_err)
    led_show_function                        0x080073a9   Thumb Code    80  led_key.o(.text.led_show_function)
    main                                     0x08007401   Thumb Code  1344  main.o(.text.main)
    mc_lock_pins                             0x08007989   Thumb Code   212  mc_tasks.o(.text.mc_lock_pins)
    mode_auto_init                           0x08007a65   Thumb Code    28  app_mode.o(.text.mode_auto_init)
    mode_auto_tick                           0x08007a81   Thumb Code     2  app_mode.o(.text.mode_auto_tick)
    mode_error_init                          0x08007a83   Thumb Code     8  app_mode.o(.text.mode_error_init)
    mode_error_tick                          0x08007a8b   Thumb Code     8  app_mode.o(.text.mode_error_tick)
    mode_max_power_12m_init                  0x08007a95   Thumb Code    28  app_mode.o(.text.mode_max_power_12m_init)
    mode_max_power_12m_tick                  0x08007ab5   Thumb Code     2  app_mode.o(.text.mode_max_power_12m_tick)
    mode_pressure_5m_init                    0x08007ab9   Thumb Code    24  app_mode.o(.text.mode_pressure_5m_init)
    mode_pressure_5m_tick                    0x08007ad1   Thumb Code     2  app_mode.o(.text.mode_pressure_5m_tick)
    mode_pressure_7m_init                    0x08007ad5   Thumb Code    24  app_mode.o(.text.mode_pressure_7m_init)
    mode_pressure_7m_tick                    0x08007aed   Thumb Code     2  app_mode.o(.text.mode_pressure_7m_tick)
    mode_pressure_9m_init                    0x08007af1   Thumb Code    24  app_mode.o(.text.mode_pressure_9m_init)
    mode_pressure_9m_tick                    0x08007b09   Thumb Code     2  app_mode.o(.text.mode_pressure_9m_tick)
    mode_pwm_init                            0x08007b0d   Thumb Code    72  app_mode.o(.text.mode_pwm_init)
    mode_pwm_tick                            0x08007b61   Thumb Code   120  app_mode.o(.text.mode_pwm_tick)
    mode_speed_init                          0x08007be5   Thumb Code    24  app_mode.o(.text.mode_speed_init)
    mode_speed_tick                          0x08007c01   Thumb Code     2  app_mode.o(.text.mode_speed_tick)
    mode_standby_init                        0x08007c05   Thumb Code    32  app_mode.o(.text.mode_standby_init)
    mode_standby_tick                        0x08007c31   Thumb Code    32  app_mode.o(.text.mode_standby_tick)
    pwm_mode_init                            0x08007c55   Thumb Code    88  pwm_mode.o(.text.pwm_mode_init)
    pwm_speed_control                        0x08007ccd   Thumb Code   152  pwm_mode.o(.text.pwm_speed_control)
    waitForPolarizationEnd                   0x08007d79   Thumb Code    60  pwm_common.o(.text.waitForPolarizationEnd)
    work_mode_init                           0x08007db5   Thumb Code    16  app_handle.o(.text.work_mode_init)
    work_mode_perfrom                        0x08007dc5   Thumb Code    52  app_handle.o(.text.work_mode_perfrom)
    work_mode_switch                         0x08007e01   Thumb Code    12  app_handle.o(.text.work_mode_switch)
    __aeabi_uidiv                            0x08007e11   Thumb Code    68  aeabi_sdivfast.o(.text_divfast)
    __aeabi_idiv                             0x08007e55   Thumb Code   434  aeabi_sdivfast.o(.text_divfast)
    __aeabi_fadd                             0x08008009   Thumb Code     0  faddsub.o(x$fpl$fadd)
    _fadd                                    0x08008009   Thumb Code   134  faddsub.o(x$fpl$fadd)
    __aeabi_fmul                             0x08008095   Thumb Code     0  fmul.o(x$fpl$fmul)
    _fmul                                    0x08008095   Thumb Code   172  fmul.o(x$fpl$fmul)
    __aeabi_fsub                             0x08008145   Thumb Code     0  faddsub.o(x$fpl$fsub)
    _fsub                                    0x08008145   Thumb Code   204  faddsub.o(x$fpl$fsub)
    __I$use$fp                               0x08008214   Number         0  usenofp.o(x$fpl$usenofp)
    CTL_BOARD                                0x080083d9   Data          14  mc_configuration_registers.o(.rodata.CTL_BOARD)
    FIRMWARE_NAME                            0x080083e7   Data          20  mc_configuration_registers.o(.rodata.FIRMWARE_NAME)
    M1_MotorConfig_reg                       0x08008418   Data          60  mc_configuration_registers.o(.rodata.M1_MotorConfig_reg)
    R3_1_Params                              0x08008478   Data         120  mc_parameters.o(.rodata.R3_1_Params)
    SqrtTable                                0x080084f0   Data        2050  circle_limitation.o(.rodata.SqrtTable)
    globalConfig_reg                         0x08008d70   Data          10  mc_configuration_registers.o(.rodata.globalConfig_reg)
    hSin_Cos_Table                           0x08008d7a   Data         512  mc_math.o(.rodata.hSin_Cos_Table)
    Region$$Table$$Base                      0x08008f7c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08008f9c   Number         0  anon$$obj.o(Region$$Table)
    uwTickFreq                               0x20000000   Data           1  stm32g0xx_hal.o(.data..L_MergedGlobals)
    uwTickPrio                               0x20000004   Data           4  stm32g0xx_hal.o(.data..L_MergedGlobals)
    g_work_mode_ppre                         0x20000008   Data           1  app_handle.o(.data..L_MergedGlobals)
    g_work_mode_pre                          0x20000009   Data           1  app_handle.o(.data..L_MergedGlobals)
    Acc_M1                                   0x2000000a   Data           2  user_logic.o(.data.Acc_M1)
    ApplicationConfig_reg                    0x2000000c   Data           4  mc_configuration_registers.o(.data.ApplicationConfig_reg)
    BusVoltageSensor_M1                      0x20000010   Data          44  mc_config.o(.data.BusVoltageSensor_M1)
    CircleLimitationM1                       0x2000003c   Data         180  mc_config.o(.data.CircleLimitationM1)
    FOCConfig_reg                            0x200000f0   Data           4  mc_configuration_registers.o(.data.FOCConfig_reg)
    MCPA_UART_A                              0x200000f4   Data          44  mcp_config.o(.data.MCPA_UART_A)
    MCP_Over_UartA                           0x20000120   Data          16  mcp_config.o(.data.MCP_Over_UartA)
    MotorConfig_reg                          0x20000130   Data           4  mc_configuration_registers.o(.data.MotorConfig_reg)
    PIDIdHandle_M1                           0x20000134   Data          44  mc_config.o(.data.PIDIdHandle_M1)
    PIDIqHandle_M1                           0x20000160   Data          44  mc_config.o(.data.PIDIqHandle_M1)
    PIDSpeedHandle_M1                        0x2000018c   Data          44  mc_config.o(.data.PIDSpeedHandle_M1)
    PQD_MotorPowMeasM1                       0x200001b8   Data          16  mc_config.o(.data.PQD_MotorPowMeasM1)
    PWM_Handle_M1                            0x200001c8   Data         144  mc_config.o(.data.PWM_Handle_M1)
    PWR_BOARD_NAME                           0x20000258   Data           4  mc_configuration_registers.o(.data.PWR_BOARD_NAME)
    RampExtMngrHFParamsM1                    0x2000025c   Data          24  mc_config.o(.data.RampExtMngrHFParamsM1)
    RevUpControlM1                           0x20000274   Data         120  mc_config.o(.data.RevUpControlM1)
    STO_M1                                   0x200002ec   Data          20  mc_config.o(.data.STO_M1)
    STO_PLL_M1                               0x20000300   Data         296  mc_config.o(.data.STO_PLL_M1)
    SpeednTorqCtrlM1                         0x20000428   Data          52  mc_config.o(.data.SpeednTorqCtrlM1)
    SystemCoreClock                          0x20000460   Data           4  system_stm32g0xx.o(.data.SystemCoreClock)
    TempSensor_M1                            0x20000464   Data          40  mc_config.o(.data.TempSensor_M1)
    VirtualSpeedSensorM1                     0x200004a0   Data          56  mc_config.o(.data.VirtualSpeedSensorM1)
    aspepOverUartA                           0x200004d8   Data         116  mcp_config.o(.data.aspepOverUartA)
    need_stop_flag                           0x2000054c   Data           1  app_mode.o(.data.need_stop_flag)
    pMPM                                     0x20000550   Data           4  mc_config.o(.data.pMPM)
    pPIDId                                   0x20000554   Data           4  mc_config.o(.data.pPIDId)
    pPIDIq                                   0x20000558   Data           4  mc_config.o(.data.pPIDIq)
    pSTC                                     0x2000055c   Data           4  mc_config.o(.data.pSTC)
    pTemperatureSensor                       0x20000560   Data           4  mc_config.o(.data.pTemperatureSensor)
    switch_mode_tmp                          0x20000564   Data           1  led_key.o(.data.switch_mode_tmp)
    temp_duty                                0x20000565   Data          10  app_mode.o(.data.temp_duty)
    __libspace_start                         0x20000570   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200005d0   Data           0  libspace.o(.bss)
    msta                                     0x200005d0   Data           1  main.o(.bss..L_MergedGlobals)
    sptmp                                    0x200005d2   Data           2  main.o(.bss..L_MergedGlobals)
    mccurrent_err                            0x200005d4   Data           2  main.o(.bss..L_MergedGlobals)
    time_1ms                                 0x200005d8   Data           4  main.o(.bss..L_MergedGlobals)
    time_1000ms                              0x200005dc   Data           4  main.o(.bss..L_MergedGlobals)
    time_30s                                 0x200005e0   Data           4  main.o(.bss..L_MergedGlobals)
    RCM_handle_array                         0x200005ec   Data          16  regular_conversion_manager.o(.bss..L_MergedGlobals)
    M1EnableStartFlag                        0x2000066c   Data           1  user_logic.o(.bss..L_MergedGlobals)
    UARTSpeedCMD_M1                          0x2000066e   Data           2  user_logic.o(.bss..L_MergedGlobals)
    UARTSpeedCMDLast_M1                      0x20000670   Data           2  user_logic.o(.bss..L_MergedGlobals)
    report_speed                             0x20000672   Data           2  user_logic.o(.bss..L_MergedGlobals)
    speed_cmd                                0x20000674   Data           2  user_logic.o(.bss..L_MergedGlobals)
    report_speed_buf                         0x20000678   Data           4  user_logic.o(.bss..L_MergedGlobals)
    lib_debug_compressor_speed_fdbk          0x2000067c   Data           4  user_logic.o(.bss..L_MergedGlobals)
    lib_debug                                0x20000680   Data          10  user_logic.o(.bss..L_MergedGlobals)
    ADC_UserHander_CIN                       0x2000068c   Data           1  adc_cin.o(.bss..L_MergedGlobals)
    user_adc_flag                            0x2000068d   Data           1  adc_cin.o(.bss..L_MergedGlobals)
    ADC_UserHander_VTS                       0x2000068e   Data           1  adc_cin.o(.bss..L_MergedGlobals)
    cin_digital                              0x20000690   Data           4  adc_cin.o(.bss..L_MergedGlobals)
    vts_digital                              0x20000694   Data           4  adc_cin.o(.bss..L_MergedGlobals)
    vts_v                                    0x20000698   Data           4  adc_cin.o(.bss..L_MergedGlobals)
    ADC_UserConv_CIN                         0x2000069c   Data          12  adc_cin.o(.bss..L_MergedGlobals)
    ADC_UserConv_VTS                         0x200006a8   Data          12  adc_cin.o(.bss..L_MergedGlobals)
    start_or_stop                            0x200006b4   Data           1  pwm_mode.o(.bss..L_MergedGlobals)
    pwm_arr                                  0x200006b8   Data           4  pwm_mode.o(.bss..L_MergedGlobals)
    pwm_ccr                                  0x200006bc   Data           4  pwm_mode.o(.bss..L_MergedGlobals)
    rise2_cnt                                0x200006c0   Data           4  pwm_mode.o(.bss..L_MergedGlobals)
    fall_cnt                                 0x200006c4   Data           4  pwm_mode.o(.bss..L_MergedGlobals)
    pwm_tmp                                  0x200006c8   Data           4  pwm_mode.o(.bss..L_MergedGlobals)
    htim16                                   0x200006cc   Data          76  pwm_mode.o(.bss..L_MergedGlobals)
    DataProcess                              0x20000718   Data           1  lin.o(.bss..L_MergedGlobals)
    FrameReceiveOverFlag                     0x20000719   Data           1  lin.o(.bss..L_MergedGlobals)
    ReceivePID                               0x2000071a   Data           1  lin.o(.bss..L_MergedGlobals)
    SumCheck                                 0x2000071b   Data           1  lin.o(.bss..L_MergedGlobals)
    ReceiveCheckSum                          0x2000071c   Data           1  lin.o(.bss..L_MergedGlobals)
    LIN_MODE                                 0x2000071d   Data           1  lin.o(.bss..L_MergedGlobals)
    Lin_LBD_Flag                             0x2000071e   Data           1  lin.o(.bss..L_MergedGlobals)
    test_data                                0x2000071f   Data           1  lin.o(.bss..L_MergedGlobals)
    Data_Index                               0x20000720   Data           1  lin.o(.bss..L_MergedGlobals)
    LIN_SPEED                                0x20000724   Data           4  lin.o(.bss..L_MergedGlobals)
    global_target_speed                      0x20000728   Data           4  lin.o(.bss..L_MergedGlobals)
    global_actual_speed                      0x2000072c   Data           4  lin.o(.bss..L_MergedGlobals)
    send_lin_data                            0x20000730   Data           8  lin.o(.bss..L_MergedGlobals)
    LinReceiveData                           0x20000738   Data          20  lin.o(.bss..L_MergedGlobals)
    VTS_Temperature                          0x2000074c   Data           1  app_error.o(.bss..L_MergedGlobals)
    BusVoltage                               0x2000074e   Data           2  app_error.o(.bss..L_MergedGlobals)
    temp_duty_time                           0x20000758   Data           1  app_mode.o(.bss..L_MergedGlobals)
    duty_average                             0x2000075c   Data           4  app_mode.o(.bss..L_MergedGlobals)
    GLOBAL_TIMESTAMP                         0x20000760   Data           4  mcpa.o(.bss.GLOBAL_TIMESTAMP)
    MCP_UserCallBack                         0x20001880   Data           8  mcp_config.o(.bss.MCP_UserCallBack)
    MOTOR_ERROR_INFO                         0x20001888   Data           1  led_key.o(.bss.MOTOR_ERROR_INFO)
    Mci                                      0x2000188c   Data          32  mc_config.o(.bss.Mci)
    User_Logic_Handle_Counter                0x200018c2   Data           2  stm32g0xx_mc_it.o(.bss.User_Logic_Handle_Counter)
    dataPtrTableA                            0x200018c4   Data          40  mcp_config.o(.bss.dataPtrTableA)
    dataPtrTableBuffA                        0x200018ec   Data          40  mcp_config.o(.bss.dataPtrTableBuffA)
    dataSizeTableA                           0x20001914   Data          10  mcp_config.o(.bss.dataSizeTableA)
    dataSizeTableBuffA                       0x2000191e   Data          10  mcp_config.o(.bss.dataSizeTableBuffA)
    g_work_mode                              0x20001928   Data           1  app_handle.o(.bss.g_work_mode)
    hCurrentReference                        0x2000192a   Data           2  speed_torq_ctrl.o(.bss.hCurrentReference)
    htim14                                   0x2000192c   Data          76  main.o(.bss.htim14)
    htim17                                   0x20001978   Data          76  main.o(.bss.htim17)
    key                                      0x200019c4   Data          12  led_key.o(.bss.key)
    pMCI                                     0x200019d0   Data           4  motorcontrol.o(.bss.pMCI)
    pwm_duty                                 0x200019d4   Data           4  pwm_mode.o(.bss.pwm_duty)
    rise1_cnt                                0x200019d8   Data           4  pwm_mode.o(.bss.rise1_cnt)
    rise_time                                0x200019dc   Data           1  stm32g0xx_mc_it.o(.bss.rise_time)
    timer17_updata_time                      0x200019e0   Data           4  pwm_mode.o(.bss.timer17_updata_time)
    uwTick                                   0x200019e4   Data           4  stm32g0xx_hal.o(.bss.uwTick)
    watch_data                               0x200019e8   Data          64  watch_data.o(.bss.watch_data)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000c1

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00009510, Max: 0x00020000, ABSOLUTE, COMPRESSED[0x00009170])

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00008f9c, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000c0   Data   RO            3    RESET               startup_stm32g030xx.o
    0x080000c0   0x080000c0   0x00000008   Code   RO         2279  * !!!main             c_p.l(__main.o)
    0x080000c8   0x080000c8   0x0000003c   Code   RO         2479    !!!scatter          c_p.l(__scatter.o)
    0x08000104   0x08000104   0x0000001c   Code   RO         2481    !!handler_zi        c_p.l(__scatter_zi.o)
    0x08000120   0x08000120   0x00000002   Code   RO         2346    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2360    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2362    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2364    .ARM.Collect$$libinit$$00000006  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2367    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2369    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2371    .ARM.Collect$$libinit$$00000010  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2374    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2376    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2378    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2380    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2382    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2384    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2386    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2388    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2390    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2392    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2394    .ARM.Collect$$libinit$$00000027  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2398    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2400    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2402    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000000   Code   RO         2404    .ARM.Collect$$libinit$$00000034  c_p.l(libinit2.o)
    0x08000122   0x08000122   0x00000002   Code   RO         2405    .ARM.Collect$$libinit$$00000035  c_p.l(libinit2.o)
    0x08000124   0x08000124   0x00000002   Code   RO         2429    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x08000126   0x08000126   0x00000000   Code   RO         2457    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x08000126   0x08000126   0x00000000   Code   RO         2459    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x08000126   0x08000126   0x00000000   Code   RO         2462    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x08000126   0x08000126   0x00000000   Code   RO         2465    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x08000126   0x08000126   0x00000000   Code   RO         2467    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x08000126   0x08000126   0x00000000   Code   RO         2470    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x08000126   0x08000126   0x00000002   Code   RO         2471    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x08000128   0x08000128   0x00000000   Code   RO         2309    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x08000128   0x08000128   0x00000000   Code   RO         2316    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x08000128   0x08000128   0x00000006   Code   RO         2328    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x0800012e   0x0800012e   0x00000000   Code   RO         2318    .ARM.Collect$$rtentry$$00000009  c_p.l(__rtentry2.o)
    0x0800012e   0x0800012e   0x00000004   Code   RO         2319    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x08000132   0x08000132   0x00000000   Code   RO         2321    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x08000132   0x08000132   0x00000008   Code   RO         2322    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x0800013a   0x0800013a   0x00000002   Code   RO         2351    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x0800013c   0x0800013c   0x00000000   Code   RO         2407    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x0800013c   0x0800013c   0x00000004   Code   RO         2408    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x08000140   0x08000140   0x00000006   Code   RO         2409    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x08000146   0x08000146   0x00000002   PAD
    0x08000148   0x08000148   0x00000038   Code   RO         2263    .emb_text           c_p.l(rt_memcpy.o)
    0x08000180   0x08000180   0x0000004c   Code   RO            4    .text               startup_stm32g030xx.o
    0x080001cc   0x080001cc   0x00000030   Code   RO         2261    .text               c_p.l(llmul.o)
    0x080001fc   0x080001fc   0x00000082   Code   RO         2264    .text               c_p.l(rt_memcpy.o)
    0x0800027e   0x0800027e   0x00000040   Code   RO         2267    .text               c_p.l(rt_memclr.o)
    0x080002be   0x080002be   0x00000006   Code   RO         2277    .text               c_p.l(heapauxi.o)
    0x080002c4   0x080002c4   0x0000007c   Code   RO         2281    .text               fz_ps.l(d2f.o)
    0x08000340   0x08000340   0x00000448   Code   RO         2283    .text               fz_ps.l(ddiv.o)
    0x08000788   0x08000788   0x0000006c   Code   RO         2286    .text               fz_ps.l(dfixi.o)
    0x080007f4   0x080007f4   0x00000058   Code   RO         2288    .text               fz_ps.l(dflti.o)
    0x0800084c   0x0800084c   0x00000248   Code   RO         2290    .text               fz_ps.l(dmul.o)
    0x08000a94   0x08000a94   0x00000160   Code   RO         2298    .text               fz_ps.l(fdiv.o)
    0x08000bf4   0x08000bf4   0x0000004c   Code   RO         2301    .text               fz_ps.l(ffixi.o)
    0x08000c40   0x08000c40   0x00000030   Code   RO         2303    .text               fz_ps.l(ffixui.o)
    0x08000c70   0x08000c70   0x0000005e   Code   RO         2305    .text               fz_ps.l(fflti.o)
    0x08000cce   0x08000cce   0x0000003e   Code   RO         2332    .text               c_p.l(sys_stackheap_outer.o)
    0x08000d0c   0x08000d0c   0x00000010   Code   RO         2335    .text               c_p.l(exit.o)
    0x08000d1c   0x08000d1c   0x00000008   Code   RO         2347    .text               c_p.l(libspace.o)
    0x08000d24   0x08000d24   0x00000056   Code   RO         2477    .text               c_p.l(__dczerorl2.o)
    0x08000d7a   0x08000d7a   0x00000002   PAD
    0x08000d7c   0x08000d7c   0x0000004c   Code   RO         2101    .text.ADC_CIN_INIT  adc_cin.o
    0x08000dc8   0x08000dc8   0x0000005c   Code   RO         2105    .text.ADC_VTS_INIT  adc_cin.o
    0x08000e24   0x08000e24   0x00000016   Code   RO          581    .text.ASPEP_HWDMAReset  aspep.o
    0x08000e3a   0x08000e3a   0x00000002   PAD
    0x08000e3c   0x08000e3c   0x00000090   Code   RO          579    .text.ASPEP_HWDataReceivedIT  aspep.o
    0x08000ecc   0x08000ecc   0x000000a2   Code   RO          575    .text.ASPEP_HWDataTransmittedIT  aspep.o
    0x08000f6e   0x08000f6e   0x00000002   PAD
    0x08000f70   0x08000f70   0x000005c8   Code   RO          577    .text.ASPEP_RXframeProcess  aspep.o
    0x08001538   0x08001538   0x000000e8   Code   RO          565    .text.ASPEP_TXframeProcess  aspep.o
    0x08001620   0x08001620   0x00000058   Code   RO          569    .text.ASPEP_getBuffer  aspep.o
    0x08001678   0x08001678   0x0000004e   Code   RO          573    .text.ASPEP_sendPacket  aspep.o
    0x080016c6   0x080016c6   0x00000024   Code   RO          561    .text.ASPEP_start   aspep.o
    0x080016ea   0x080016ea   0x00000002   PAD
    0x080016ec   0x080016ec   0x00000080   Code   RO         1576    .text.Circle_Limitation  circle_limitation.o
    0x0800176c   0x0800176c   0x00000014   Code   RO          427    .text.DMA1_Channel1_IRQHandler  stm32g0xx_mc_it.o
    0x08001780   0x08001780   0x00000020   Code   RO          431    .text.DMA1_Channel2_3_IRQHandler  stm32g0xx_mc_it.o
    0x080017a0   0x080017a0   0x000000cc   Code   RO          439    .text.EXTI4_15_IRQHandler  stm32g0xx_mc_it.o
    0x0800186c   0x0800186c   0x00000024   Code   RO          474    .text.FOC_CalcCurrRef  mc_tasks.o
    0x08001890   0x08001890   0x00000060   Code   RO          454    .text.FOC_Clear     mc_tasks.o
    0x080018f0   0x080018f0   0x00000002   Code   RO          472    .text.FOC_InitAdditionalMethods  mc_tasks.o
    0x080018f2   0x080018f2   0x00000002   PAD
    0x080018f4   0x080018f4   0x00000034   Code   RO         2103    .text.GET_ADC_CIN_Digital  adc_cin.o
    0x08001928   0x08001928   0x00000060   Code   RO         2107    .text.GET_ADC_VTS_Voltage  adc_cin.o
    0x08001988   0x08001988   0x00000020   Code   RO         1088    .text.HAL_Delay     stm32g0xx_hal.o
    0x080019a8   0x080019a8   0x00000110   Code   RO          884    .text.HAL_GPIO_DeInit  stm32g0xx_hal_gpio.o
    0x08001ab8   0x08001ab8   0x000001c4   Code   RO          882    .text.HAL_GPIO_Init  stm32g0xx_hal_gpio.o
    0x08001c7c   0x08001c7c   0x00000008   Code   RO         1080    .text.HAL_GetTick   stm32g0xx_hal.o
    0x08001c84   0x08001c84   0x00000014   Code   RO         1078    .text.HAL_IncTick   stm32g0xx_hal.o
    0x08001c98   0x08001c98   0x0000002c   Code   RO         1068    .text.HAL_Init      stm32g0xx_hal.o
    0x08001cc4   0x08001cc4   0x00000044   Code   RO         1070    .text.HAL_InitTick  stm32g0xx_hal.o
    0x08001d08   0x08001d08   0x0000002c   Code   RO          621    .text.HAL_MspInit   stm32g0xx_hal_msp.o
    0x08001d34   0x08001d34   0x00000018   Code   RO         1032    .text.HAL_NVIC_EnableIRQ  stm32g0xx_hal_cortex.o
    0x08001d4c   0x08001d4c   0x00000040   Code   RO         1030    .text.HAL_NVIC_SetPriority  stm32g0xx_hal_cortex.o
    0x08001d8c   0x08001d8c   0x0000000c   Code   RO          777    .text.HAL_RCC_GetHCLKFreq  stm32g0xx_hal_rcc.o
    0x08001d98   0x08001d98   0x00000002   Code   RO         1052    .text.HAL_SYSTICK_Callback  stm32g0xx_hal_cortex.o
    0x08001d9a   0x08001d9a   0x00000002   PAD
    0x08001d9c   0x08001d9c   0x00000034   Code   RO         1038    .text.HAL_SYSTICK_Config  stm32g0xx_hal_cortex.o
    0x08001dd0   0x08001dd0   0x00000008   Code   RO         1050    .text.HAL_SYSTICK_IRQHandler  stm32g0xx_hal_cortex.o
    0x08001dd8   0x08001dd8   0x00000002   Code   RO         1479    .text.HAL_TIMEx_Break2Callback  stm32g0xx_hal_tim_ex.o
    0x08001dda   0x08001dda   0x00000002   Code   RO         1477    .text.HAL_TIMEx_BreakCallback  stm32g0xx_hal_tim_ex.o
    0x08001ddc   0x08001ddc   0x00000002   Code   RO         1473    .text.HAL_TIMEx_CommutCallback  stm32g0xx_hal_tim_ex.o
    0x08001dde   0x08001dde   0x00000002   PAD
    0x08001de0   0x08001de0   0x000000c0   Code   RO         1162    .text.HAL_TIM_Base_Init  stm32g0xx_hal_tim.o
    0x08001ea0   0x08001ea0   0x0000007c   Code   RO          623    .text.HAL_TIM_Base_MspInit  stm32g0xx_hal_msp.o
    0x08001f1c   0x08001f1c   0x00000058   Code   RO         1176    .text.HAL_TIM_Base_Start_IT  stm32g0xx_hal_tim.o
    0x08001f74   0x08001f74   0x00000002   Code   RO         1298    .text.HAL_TIM_IC_CaptureCallback  stm32g0xx_hal_tim.o
    0x08001f76   0x08001f76   0x00000002   PAD
    0x08001f78   0x08001f78   0x00000164   Code   RO         1296    .text.HAL_TIM_IRQHandler  stm32g0xx_hal_tim.o
    0x080020dc   0x080020dc   0x00000002   Code   RO         1300    .text.HAL_TIM_OC_DelayElapsedCallback  stm32g0xx_hal_tim.o
    0x080020de   0x080020de   0x00000002   Code   RO         1302    .text.HAL_TIM_PWM_PulseFinishedCallback  stm32g0xx_hal_tim.o
    0x080020e0   0x080020e0   0x0000001c   Code   RO         2127    .text.HAL_TIM_PeriodElapsedCallback  pwm_mode.o
    0x080020fc   0x080020fc   0x00000002   Code   RO         1306    .text.HAL_TIM_TriggerCallback  stm32g0xx_hal_tim.o
    0x080020fe   0x080020fe   0x00000006   Code   RO          435    .text.HardFault_Handler  stm32g0xx_mc_it.o
    0x08002104   0x08002104   0x00000034   Code   RO          715    .text.LL_ADC_Init   stm32g0xx_ll_adc.o
    0x08002138   0x08002138   0x00000068   Code   RO          719    .text.LL_ADC_REG_Init  stm32g0xx_ll_adc.o
    0x080021a0   0x080021a0   0x000000b4   Code   RO          681    .text.LL_EXTI_Init  stm32g0xx_ll_exti.o
    0x08002254   0x08002254   0x000000c6   Code   RO          695    .text.LL_GPIO_Init  stm32g0xx_ll_gpio.o
    0x0800231a   0x0800231a   0x00000002   PAD
    0x0800231c   0x0800231c   0x0000000c   Code   RO          661    .text.LL_SetSystemCoreClock  stm32g0xx_ll_utils.o
    0x08002328   0x08002328   0x00000090   Code   RO         1517    .text.LL_TIM_BDTR_Init  stm32g0xx_ll_tim.o
    0x080023b8   0x080023b8   0x0000008c   Code   RO         1497    .text.LL_TIM_Init   stm32g0xx_ll_tim.o
    0x08002444   0x08002444   0x000002e4   Code   RO         1501    .text.LL_TIM_OC_Init  stm32g0xx_ll_tim.o
    0x08002728   0x08002728   0x000000bc   Code   RO         2154    .text.Lin_Checksum  lin.o
    0x080027e4   0x080027e4   0x00000012   Code   RO          417    .text.MCI_Clear_Iqdref  mc_interface.o
    0x080027f6   0x080027f6   0x00000068   Code   RO          353    .text.MCI_ExecBufferedCommands  mc_interface.o
    0x0800285e   0x0800285e   0x00000002   PAD
    0x08002860   0x08002860   0x00000014   Code   RO          313    .text.MCI_ExecSpeedRamp  mc_interface.o
    0x08002874   0x08002874   0x00000010   Code   RO          317    .text.MCI_ExecTorqueRamp  mc_interface.o
    0x08002884   0x08002884   0x0000002a   Code   RO          349    .text.MCI_FaultAcknowledged  mc_interface.o
    0x080028ae   0x080028ae   0x00000010   Code   RO          351    .text.MCI_FaultProcessing  mc_interface.o
    0x080028be   0x080028be   0x0000000e   Code   RO          379    .text.MCI_GetAvrgMecSpeedUnit  mc_interface.o
    0x080028cc   0x080028cc   0x00000004   Code   RO          359    .text.MCI_GetControlMode  mc_interface.o
    0x080028d0   0x080028d0   0x00000004   Code   RO          337    .text.MCI_GetCurrentFaults  mc_interface.o
    0x080028d4   0x080028d4   0x0000000a   Code   RO          357    .text.MCI_GetFaultState  mc_interface.o
    0x080028de   0x080028de   0x0000000c   Code   RO          387    .text.MCI_GetIab    mc_interface.o
    0x080028ea   0x080028ea   0x0000000c   Code   RO          391    .text.MCI_GetIalphabeta  mc_interface.o
    0x080028f6   0x080028f6   0x00000044   Code   RO          361    .text.MCI_GetImposedMotorDirection  mc_interface.o
    0x0800293a   0x0800293a   0x0000000c   Code   RO          393    .text.MCI_GetIqd    mc_interface.o
    0x08002946   0x08002946   0x0000000c   Code   RO          399    .text.MCI_GetIqdref  mc_interface.o
    0x08002952   0x08002952   0x00000004   Code   RO          367    .text.MCI_GetLastRampFinalDuration  mc_interface.o
    0x08002956   0x08002956   0x00000006   Code   RO          363    .text.MCI_GetLastRampFinalSpeed  mc_interface.o
    0x0800295c   0x0800295c   0x00000006   Code   RO          365    .text.MCI_GetLastRampFinalTorque  mc_interface.o
    0x08002962   0x08002962   0x0000000a   Code   RO          383    .text.MCI_GetMecSpeedRefUnit  mc_interface.o
    0x0800296c   0x0800296c   0x00000004   Code   RO          335    .text.MCI_GetOccurredFaults  mc_interface.o
    0x08002970   0x08002970   0x00000004   Code   RO          333    .text.MCI_GetSTMState  mc_interface.o
    0x08002974   0x08002974   0x00000008   Code   RO          409    .text.MCI_GetTeref  mc_interface.o
    0x0800297c   0x0800297c   0x0000000c   Code   RO          405    .text.MCI_GetValphabeta  mc_interface.o
    0x08002988   0x08002988   0x0000000c   Code   RO          403    .text.MCI_GetVqd    mc_interface.o
    0x08002994   0x08002994   0x00000018   Code   RO          311    .text.MCI_Init      mc_interface.o
    0x080029ac   0x080029ac   0x00000014   Code   RO          321    .text.MCI_SetCurrentReferences  mc_interface.o
    0x080029c0   0x080029c0   0x00000030   Code   RO          331    .text.MCI_StartMotor  mc_interface.o
    0x080029f0   0x080029f0   0x00000044   Code   RO          347    .text.MCI_StopMotor  mc_interface.o
    0x08002a34   0x08002a34   0x0000000a   Code   RO          375    .text.MCI_StopRamp  mc_interface.o
    0x08002a3e   0x08002a3e   0x00000002   PAD
    0x08002a40   0x08002a40   0x00000044   Code   RO          290    .text.MCM_Clarke    mc_math.o
    0x08002a84   0x08002a84   0x00000098   Code   RO          292    .text.MCM_Park      mc_math.o
    0x08002b1c   0x08002b1c   0x0000002e   Code   RO          296    .text.MCM_Rev_Park  mc_math.o
    0x08002b4a   0x08002b4a   0x00000002   PAD
    0x08002b4c   0x08002b4c   0x0000007c   Code   RO          294    .text.MCM_Trig_Functions  mc_math.o
    0x08002bc8   0x08002bc8   0x000000e4   Code   RO         2043    .text.MCPA_cfgLog   mcpa.o
    0x08002cac   0x08002cac   0x000001e0   Code   RO         2039    .text.MCPA_dataLog  mcpa.o
    0x08002e8c   0x08002e8c   0x0000006c   Code   RO         2041    .text.MCPA_flushDataLog  mcpa.o
    0x08002ef8   0x08002ef8   0x00000164   Code   RO         2027    .text.MCP_ReceivedPacket  mcp.o
    0x0800305c   0x0800305c   0x00000002   Code   RO          593    .text.MC_APP_BootHook  mc_app_hooks.o
    0x0800305e   0x0800305e   0x00000002   Code   RO          595    .text.MC_APP_PostMediumFrequencyHook_M1  mc_app_hooks.o
    0x08003060   0x08003060   0x0000000c   Code   RO          121    .text.MC_AcknowledgeFaultMotor1  mc_api.o
    0x0800306c   0x0800306c   0x0000000c   Code   RO           79    .text.MC_GetMecSpeedAverageMotor1  mc_api.o
    0x08003078   0x08003078   0x0000000c   Code   RO           77    .text.MC_GetMecSpeedReferenceMotor1  mc_api.o
    0x08003084   0x08003084   0x0000000c   Code   RO          123    .text.MC_GetOccurredFaultsMotor1  mc_api.o
    0x08003090   0x08003090   0x0000000c   Code   RO          127    .text.MC_GetSTMStateMotor1  mc_api.o
    0x0800309c   0x0800309c   0x00000004   Code   RO          137    .text.MC_ProfilerCommand  mc_api.o
    0x080030a0   0x080030a0   0x00000010   Code   RO           57    .text.MC_ProgramSpeedRampMotor1  mc_api.o
    0x080030b0   0x080030b0   0x00000014   Code   RO          456    .text.MC_RunMotorControlTasks  mc_tasks.o
    0x080030c4   0x080030c4   0x00000074   Code   RO          458    .text.MC_Scheduler  mc_tasks.o
    0x08003138   0x08003138   0x0000000c   Code   RO           53    .text.MC_StartMotor1  mc_api.o
    0x08003144   0x08003144   0x0000000c   Code   RO           55    .text.MC_StopMotor1  mc_api.o
    0x08003150   0x08003150   0x00000108   Code   RO          452    .text.MCboot        mc_tasks.o
    0x08003258   0x08003258   0x00000034   Code   RO           44    .text.MX_MotorControl_Init  motorcontrol.o
    0x0800328c   0x0800328c   0x00000064   Code   RO           25    .text.MX_TIM17_Init  main.o
    0x080032f0   0x080032f0   0x00000002   Code   RO          604    .text.NMI_Handler   stm32g0xx_it.o
    0x080032f2   0x080032f2   0x00000002   PAD
    0x080032f4   0x080032f4   0x0000003c   Code   RO         1604    .text.NTC_CalcAvTemp  ntc_temperature_sensor.o
    0x08003330   0x08003330   0x00000006   Code   RO         1602    .text.NTC_Clear     ntc_temperature_sensor.o
    0x08003336   0x08003336   0x00000022   Code   RO         1608    .text.NTC_GetAvTemp_C  ntc_temperature_sensor.o
    0x08003358   0x08003358   0x00000026   Code   RO         1600    .text.NTC_Init      ntc_temperature_sensor.o
    0x0800337e   0x0800337e   0x0000001a   Code   RO         1598    .text.NTC_SetFaultState  ntc_temperature_sensor.o
    0x08003398   0x08003398   0x00000006   Code   RO         1680    .text.PID_GetKD     pid_regulator.o
    0x0800339e   0x0800339e   0x00000004   Code   RO         1684    .text.PID_GetKDDivisorPOW2  pid_regulator.o
    0x080033a2   0x080033a2   0x00000006   Code   RO         1648    .text.PID_GetKI     pid_regulator.o
    0x080033a8   0x080033a8   0x00000004   Code   RO         1662    .text.PID_GetKIDivisor  pid_regulator.o
    0x080033ac   0x080033ac   0x00000004   Code   RO         1664    .text.PID_GetKIDivisorPOW2  pid_regulator.o
    0x080033b0   0x080033b0   0x00000006   Code   RO         1646    .text.PID_GetKP     pid_regulator.o
    0x080033b6   0x080033b6   0x00000004   Code   RO         1658    .text.PID_GetKPDivisorPOW2  pid_regulator.o
    0x080033ba   0x080033ba   0x00000010   Code   RO         1640    .text.PID_HandleInit  pid_regulator.o
    0x080033ca   0x080033ca   0x00000004   Code   RO         1654    .text.PID_SetIntegralTerm  pid_regulator.o
    0x080033ce   0x080033ce   0x00000004   Code   RO         1678    .text.PID_SetKD     pid_regulator.o
    0x080033d2   0x080033d2   0x0000000a   Code   RO         1686    .text.PID_SetKDDivisorPOW2  pid_regulator.o
    0x080033dc   0x080033dc   0x00000004   Code   RO         1644    .text.PID_SetKI     pid_regulator.o
    0x080033e0   0x080033e0   0x0000002c   Code   RO         1666    .text.PID_SetKIDivisorPOW2  pid_regulator.o
    0x0800340c   0x0800340c   0x00000004   Code   RO         1642    .text.PID_SetKP     pid_regulator.o
    0x08003410   0x08003410   0x0000000a   Code   RO         1660    .text.PID_SetKPDivisorPOW2  pid_regulator.o
    0x0800341a   0x0800341a   0x00000004   Code   RO         1670    .text.PID_SetLowerIntegralTermLimit  pid_regulator.o
    0x0800341e   0x0800341e   0x00000004   Code   RO         1668    .text.PID_SetUpperIntegralTermLimit  pid_regulator.o
    0x08003422   0x08003422   0x00000002   PAD
    0x08003424   0x08003424   0x00000088   Code   RO         1688    .text.PI_Controller  pid_regulator.o
    0x080034ac   0x080034ac   0x00000030   Code   RO         1700    .text.PQD_CalcElMotorPower  pqd_motor_power_measurement.o
    0x080034dc   0x080034dc   0x00000006   Code   RO         1702    .text.PQD_Clear     pqd_motor_power_measurement.o
    0x080034e2   0x080034e2   0x0000001e   Code   RO         1704    .text.PQD_GetAvrgElMotorPowerW  pqd_motor_power_measurement.o
    0x08003500   0x08003500   0x00000008   Code   RO          211    .text.PWMC_CheckOverCurrent  pwm_curr_fdbk.o
    0x08003508   0x08003508   0x00000044   Code   RO          205    .text.PWMC_CurrentReadingCalibr  pwm_curr_fdbk.o
    0x0800354c   0x0800354c   0x00000008   Code   RO          197    .text.PWMC_GetPhaseCurrents  pwm_curr_fdbk.o
    0x08003554   0x08003554   0x000001b4   Code   RO          199    .text.PWMC_SetPhaseVoltage  pwm_curr_fdbk.o
    0x08003708   0x08003708   0x00000008   Code   RO          201    .text.PWMC_SwitchOffPWM  pwm_curr_fdbk.o
    0x08003710   0x08003710   0x00000008   Code   RO          203    .text.PWMC_SwitchOnPWM  pwm_curr_fdbk.o
    0x08003718   0x08003718   0x00000002   Code   RO          608    .text.PendSV_Handler  stm32g0xx_it.o
    0x0800371a   0x0800371a   0x00000002   PAD
    0x0800371c   0x0800371c   0x00000130   Code   RO         1987    .text.R3_1_CurrentReadingCalibration  r3_g0xx_pwm_curr_fdbk.o
    0x0800384c   0x0800384c   0x0000000e   Code   RO         1985    .text.R3_1_GetOffsetCalib  r3_g0xx_pwm_curr_fdbk.o
    0x0800385a   0x0800385a   0x00000002   PAD
    0x0800385c   0x0800385c   0x00000108   Code   RO         1999    .text.R3_1_GetPhaseCurrents  r3_g0xx_pwm_curr_fdbk.o
    0x08003964   0x08003964   0x0000004c   Code   RO         1989    .text.R3_1_HFCurrentsCalibrationAB  r3_g0xx_pwm_curr_fdbk.o
    0x080039b0   0x080039b0   0x00000048   Code   RO         1997    .text.R3_1_HFCurrentsCalibrationC  r3_g0xx_pwm_curr_fdbk.o
    0x080039f8   0x080039f8   0x0000013c   Code   RO         1981    .text.R3_1_Init     r3_g0xx_pwm_curr_fdbk.o
    0x08003b34   0x08003b34   0x00000032   Code   RO         2017    .text.R3_1_IsOverCurrentOccurred  r3_g0xx_pwm_curr_fdbk.o
    0x08003b66   0x08003b66   0x0000003a   Code   RO         2013    .text.R3_1_OVERCURRENT_IRQHandler  r3_g0xx_pwm_curr_fdbk.o
    0x08003ba0   0x08003ba0   0x0000001c   Code   RO         2015    .text.R3_1_OVERVOLTAGE_IRQHandler  r3_g0xx_pwm_curr_fdbk.o
    0x08003bbc   0x08003bbc   0x0000001e   Code   RO         1991    .text.R3_1_SetADCSampPointCalibration  r3_g0xx_pwm_curr_fdbk.o
    0x08003bda   0x08003bda   0x00000068   Code   RO         2005    .text.R3_1_SetADCSampPointSectX  r3_g0xx_pwm_curr_fdbk.o
    0x08003c42   0x08003c42   0x00000014   Code   RO         1983    .text.R3_1_SetOffsetCalib  r3_g0xx_pwm_curr_fdbk.o
    0x08003c56   0x08003c56   0x00000002   PAD
    0x08003c58   0x08003c58   0x000000a4   Code   RO         1995    .text.R3_1_SwitchOffPWM  r3_g0xx_pwm_curr_fdbk.o
    0x08003cfc   0x08003cfc   0x000000d0   Code   RO         1993    .text.R3_1_SwitchOnPWM  r3_g0xx_pwm_curr_fdbk.o
    0x08003dcc   0x08003dcc   0x00000074   Code   RO         2011    .text.R3_1_TIMx_UP_IRQHandler  r3_g0xx_pwm_curr_fdbk.o
    0x08003e40   0x08003e40   0x00000058   Code   RO         2009    .text.R3_1_TurnOnLowSides  r3_g0xx_pwm_curr_fdbk.o
    0x08003e98   0x08003e98   0x00000030   Code   RO         2003    .text.R3_1_WriteTIMRegisters  r3_g0xx_pwm_curr_fdbk.o
    0x08003ec8   0x08003ec8   0x00000060   Code   RO          277    .text.RCM_ExecNextConv  regular_conversion_manager.o
    0x08003f28   0x08003f28   0x000001ac   Code   RO          265    .text.RCM_ExecRegularConv  regular_conversion_manager.o
    0x080040d4   0x080040d4   0x0000003c   Code   RO          271    .text.RCM_ExecUserConv  regular_conversion_manager.o
    0x08004110   0x08004110   0x00000018   Code   RO          269    .text.RCM_GetUserConv  regular_conversion_manager.o
    0x08004128   0x08004128   0x00000008   Code   RO          273    .text.RCM_GetUserConvState  regular_conversion_manager.o
    0x08004130   0x08004130   0x00000040   Code   RO          279    .text.RCM_ReadOngoingConv  regular_conversion_manager.o
    0x08004170   0x08004170   0x00000130   Code   RO          263    .text.RCM_RegisterRegConv  regular_conversion_manager.o
    0x080042a0   0x080042a0   0x00000020   Code   RO          267    .text.RCM_RequestUserConv  regular_conversion_manager.o
    0x080042c0   0x080042c0   0x0000002c   Code   RO         1746    .text.REMNG_Calc    ramp_ext_mngr.o
    0x080042ec   0x080042ec   0x00000080   Code   RO         1748    .text.REMNG_ExecRamp  ramp_ext_mngr.o
    0x0800436c   0x0800436c   0x00000010   Code   RO         1744    .text.REMNG_Init    ramp_ext_mngr.o
    0x0800437c   0x0800437c   0x00000008   Code   RO         1754    .text.REMNG_RampCompleted  ramp_ext_mngr.o
    0x08004384   0x08004384   0x00000020   Code   RO          511    .text.RI_GetIDSize  register_interface.o
    0x080043a4   0x080043a4   0x00000104   Code   RO          513    .text.RI_GetPtrReg  register_interface.o
    0x080044a8   0x080044a8   0x000008c4   Code   RO          509    .text.RI_GetRegCommandParser  register_interface.o
    0x08004d6c   0x08004d6c   0x00000780   Code   RO          507    .text.RI_SetRegCommandParser  register_interface.o
    0x080054ec   0x080054ec   0x00000080   Code   RO         1768    .text.RUC_Clear     revup_ctrl.o
    0x0800556c   0x0800556c   0x00000068   Code   RO         1772    .text.RUC_Exec      revup_ctrl.o
    0x080055d4   0x080055d4   0x00000014   Code   RO         1780    .text.RUC_FirstAccelerationStageReached  revup_ctrl.o
    0x080055e8   0x080055e8   0x00000006   Code   RO         1796    .text.RUC_GetNumberOfPhases  revup_ctrl.o
    0x080055ee   0x080055ee   0x00000012   Code   RO         1798    .text.RUC_GetPhase  revup_ctrl.o
    0x08005600   0x08005600   0x00000064   Code   RO         1766    .text.RUC_Init      revup_ctrl.o
    0x08005664   0x08005664   0x00000012   Code   RO         1788    .text.RUC_SetPhase  revup_ctrl.o
    0x08005676   0x08005676   0x00000002   PAD
    0x08005678   0x08005678   0x000000bc   Code   RO         1734    .text.RVBS_CalcAvVbus  r_divider_bus_voltage_sensor.o
    0x08005734   0x08005734   0x0000004e   Code   RO         1732    .text.RVBS_CheckFaultState  r_divider_bus_voltage_sensor.o
    0x08005782   0x08005782   0x0000004a   Code   RO         1728    .text.RVBS_Clear    r_divider_bus_voltage_sensor.o
    0x080057cc   0x080057cc   0x00000016   Code   RO         1726    .text.RVBS_Init     r_divider_bus_voltage_sensor.o
    0x080057e2   0x080057e2   0x00000006   Code   RO         1814    .text.SPD_GetAvrgMecSpeedUnit  speed_pos_fdbk.o
    0x080057e8   0x080057e8   0x00000006   Code   RO         1810    .text.SPD_GetElAngle  speed_pos_fdbk.o
    0x080057ee   0x080057ee   0x00000006   Code   RO         1818    .text.SPD_GetInstElSpeedDpp  speed_pos_fdbk.o
    0x080057f4   0x080057f4   0x0000001c   Code   RO         1824    .text.SPD_GetS16Speed  speed_pos_fdbk.o
    0x08005810   0x08005810   0x00000054   Code   RO         1822    .text.SPD_IsMecSpeedReliable  speed_pos_fdbk.o
    0x08005864   0x08005864   0x0000008c   Code   RO         1858    .text.STC_CalcTorqueReference  speed_torq_ctrl.o
    0x080058f0   0x080058f0   0x00000012   Code   RO         1844    .text.STC_Clear     speed_torq_ctrl.o
    0x08005902   0x08005902   0x00000002   PAD
    0x08005904   0x08005904   0x000000a0   Code   RO         1854    .text.STC_ExecRamp  speed_torq_ctrl.o
    0x080059a4   0x080059a4   0x00000010   Code   RO         1874    .text.STC_ForceSpeedReferenceToCurrentSpeed  speed_torq_ctrl.o
    0x080059b4   0x080059b4   0x0000000a   Code   RO         1870    .text.STC_GetDefaultIqdref  speed_torq_ctrl.o
    0x080059be   0x080059be   0x00000006   Code   RO         1846    .text.STC_GetMecSpeedRefUnit  speed_torq_ctrl.o
    0x080059c4   0x080059c4   0x00000004   Code   RO         1842    .text.STC_GetSpeedSensor  speed_torq_ctrl.o
    0x080059c8   0x080059c8   0x00000006   Code   RO         1848    .text.STC_GetTorqueRef  speed_torq_ctrl.o
    0x080059ce   0x080059ce   0x00000020   Code   RO         1838    .text.STC_Init      speed_torq_ctrl.o
    0x080059ee   0x080059ee   0x00000008   Code   RO         1850    .text.STC_SetControlMode  speed_torq_ctrl.o
    0x080059f6   0x080059f6   0x00000004   Code   RO         1840    .text.STC_SetSpeedSensor  speed_torq_ctrl.o
    0x080059fa   0x080059fa   0x00000008   Code   RO         1856    .text.STC_StopRamp  speed_torq_ctrl.o
    0x08005a02   0x08005a02   0x0000000e   Code   RO         1915    .text.STO_OTF_ResetPLL  sto_pll_speed_pos_fdbk.o
    0x08005a10   0x08005a10   0x00000042   Code   RO         1897    .text.STO_PLL_CalcAvrgElSpeedDpp  sto_pll_speed_pos_fdbk.o
    0x08005a52   0x08005a52   0x00000002   PAD
    0x08005a54   0x08005a54   0x00000248   Code   RO         1895    .text.STO_PLL_CalcAvrgMecSpeedUnit  sto_pll_speed_pos_fdbk.o
    0x08005c9c   0x08005c9c   0x00000220   Code   RO         1893    .text.STO_PLL_CalcElAngle  sto_pll_speed_pos_fdbk.o
    0x08005ebc   0x08005ebc   0x0000005a   Code   RO         1889    .text.STO_PLL_Clear  sto_pll_speed_pos_fdbk.o
    0x08005f16   0x08005f16   0x0000000c   Code   RO         1931    .text.STO_PLL_ForceConvergency1  sto_pll_speed_pos_fdbk.o
    0x08005f22   0x08005f22   0x0000000c   Code   RO         1933    .text.STO_PLL_ForceConvergency2  sto_pll_speed_pos_fdbk.o
    0x08005f2e   0x08005f2e   0x00000004   Code   RO         1901    .text.STO_PLL_GetEstimatedBemf  sto_pll_speed_pos_fdbk.o
    0x08005f32   0x08005f32   0x00000008   Code   RO         1921    .text.STO_PLL_GetEstimatedBemfLevel  sto_pll_speed_pos_fdbk.o
    0x08005f3a   0x08005f3a   0x00000016   Code   RO         1903    .text.STO_PLL_GetEstimatedCurrent  sto_pll_speed_pos_fdbk.o
    0x08005f50   0x08005f50   0x00000006   Code   RO         1923    .text.STO_PLL_GetObservedBemfLevel  sto_pll_speed_pos_fdbk.o
    0x08005f56   0x08005f56   0x0000000a   Code   RO         1905    .text.STO_PLL_GetObserverGains  sto_pll_speed_pos_fdbk.o
    0x08005f60   0x08005f60   0x00000090   Code   RO         1887    .text.STO_PLL_Init  sto_pll_speed_pos_fdbk.o
    0x08005ff0   0x08005ff0   0x000000a6   Code   RO         1899    .text.STO_PLL_IsObserverConverged  sto_pll_speed_pos_fdbk.o
    0x08006096   0x08006096   0x00000008   Code   RO         1929    .text.STO_PLL_IsVarianceTight  sto_pll_speed_pos_fdbk.o
    0x0800609e   0x0800609e   0x00000006   Code   RO         1907    .text.STO_PLL_SetObserverGains  sto_pll_speed_pos_fdbk.o
    0x080060a4   0x080060a4   0x0000000c   Code   RO         1917    .text.STO_ResetPLL  sto_pll_speed_pos_fdbk.o
    0x080060b0   0x080060b0   0x00000002   Code   RO          606    .text.SVC_Handler   stm32g0xx_it.o
    0x080060b2   0x080060b2   0x00000002   PAD
    0x080060b4   0x080060b4   0x00000038   Code   RO          437    .text.SysTick_Handler  stm32g0xx_mc_it.o
    0x080060ec   0x080060ec   0x000000f8   Code   RO           21    .text.SystemClock_Config  main.o
    0x080061e4   0x080061e4   0x00000002   Code   RO         1545    .text.SystemInit    system_stm32g0xx.o
    0x080061e6   0x080061e6   0x00000002   PAD
    0x080061e8   0x080061e8   0x00000010   Code   RO          610    .text.TIM14_IRQHandler  stm32g0xx_it.o
    0x080061f8   0x080061f8   0x00000010   Code   RO          612    .text.TIM17_IRQHandler  stm32g0xx_it.o
    0x08006208   0x08006208   0x00000064   Code   RO          429    .text.TIM1_BRK_UP_TRG_COM_IRQHandler  stm32g0xx_mc_it.o
    0x0800626c   0x0800626c   0x0000000c   Code   RO          470    .text.TSK_ChargeBootCapDelayHasElapsedM1  mc_tasks.o
    0x08006278   0x08006278   0x00000018   Code   RO          484    .text.TSK_HardwareFaultTask  mc_tasks.o
    0x08006290   0x08006290   0x000001a4   Code   RO          478    .text.TSK_HighFrequencyTask  mc_tasks.o
    0x08006434   0x08006434   0x0000003c   Code   RO          462    .text.TSK_MF_StopProcessing  mc_tasks.o
    0x08006470   0x08006470   0x00000340   Code   RO          466    .text.TSK_MediumFrequencyTaskM1  mc_tasks.o
    0x080067b0   0x080067b0   0x0000001c   Code   RO          460    .text.TSK_SafetyTask  mc_tasks.o
    0x080067cc   0x080067cc   0x00000098   Code   RO          480    .text.TSK_SafetyTask_PWMOFF  mc_tasks.o
    0x08006864   0x08006864   0x00000008   Code   RO          468    .text.TSK_SetChargeBootCapDelayM1  mc_tasks.o
    0x0800686c   0x0800686c   0x00000008   Code   RO          464    .text.TSK_SetStopPermanencyTimeM1  mc_tasks.o
    0x08006874   0x08006874   0x00000010   Code   RO          476    .text.TSK_StopPermanencyTimeHasElapsedM1  mc_tasks.o
    0x08006884   0x08006884   0x0000001c   Code   RO          534    .text.UASPEP_IDLE_ENABLE  usart_aspep_driver.o
    0x080068a0   0x080068a0   0x00000090   Code   RO          524    .text.UASPEP_INIT   usart_aspep_driver.o
    0x08006930   0x08006930   0x00000028   Code   RO          532    .text.UASPEP_RECEIVE_BUFFER  usart_aspep_driver.o
    0x08006958   0x08006958   0x00000034   Code   RO          530    .text.UASPEP_SEND_PACKET  usart_aspep_driver.o
    0x0800698c   0x0800698c   0x00000016   Code   RO          486    .text.UI_HandleStartStopButton_cb  mc_tasks.o
    0x080069a2   0x080069a2   0x00000002   PAD
    0x080069a4   0x080069a4   0x00000078   Code   RO          645    .text.UI_Process    user_logic.o
    0x08006a1c   0x08006a1c   0x000001d0   Code   RO         2162    .text.USART1_IRQHandler  lin.o
    0x08006bec   0x08006bec   0x000000dc   Code   RO          433    .text.USART2_IRQHandler  stm32g0xx_mc_it.o
    0x08006cc8   0x08006cc8   0x00000098   Code   RO          643    .text.User_Motor_Control_M1  user_logic.o
    0x08006d60   0x08006d60   0x0000000a   Code   RO         1564    .text.VBS_GetAvBusVoltage_V  bus_voltage_sensor.o
    0x08006d6a   0x08006d6a   0x00000004   Code   RO         1562    .text.VBS_GetAvBusVoltage_d  bus_voltage_sensor.o
    0x08006d6e   0x08006d6e   0x0000008a   Code   RO         1953    .text.VSS_CalcAvrgMecSpeedUnit  virtual_speed_sensor.o
    0x08006df8   0x08006df8   0x000000ac   Code   RO         1951    .text.VSS_CalcElAngle  virtual_speed_sensor.o
    0x08006ea4   0x08006ea4   0x0000001a   Code   RO         1949    .text.VSS_Clear     virtual_speed_sensor.o
    0x08006ebe   0x08006ebe   0x00000008   Code   RO         1947    .text.VSS_Init      virtual_speed_sensor.o
    0x08006ec6   0x08006ec6   0x00000096   Code   RO         1957    .text.VSS_SetMecAcceleration  virtual_speed_sensor.o
    0x08006f5c   0x08006f5c   0x00000016   Code   RO         1955    .text.VSS_SetMecAngle  virtual_speed_sensor.o
    0x08006f72   0x08006f72   0x00000022   Code   RO         1963    .text.VSS_SetStartTransition  virtual_speed_sensor.o
    0x08006f94   0x08006f94   0x00000006   Code   RO         1967    .text.VSS_TransitionEnded  virtual_speed_sensor.o
    0x08006f9a   0x08006f9a   0x00000002   Code   RO           13    .text._sys_exit     main.o
    0x08006f9c   0x08006f9c   0x00000188   Code   RO         2176    .text.error_check   app_error.o
    0x08007124   0x08007124   0x00000058   Code   RO         2178    .text.error_mode_init  app_error.o
    0x0800717c   0x0800717c   0x00000014   Code   RO         2180    .text.error_mode_tick  app_error.o
    0x08007190   0x08007190   0x0000001c   Code   RO         2082    .text.exe_key_func  led_key.o
    0x080071ac   0x080071ac   0x00000054   Code   RO         1750    .text.getScalingFactor  ramp_ext_mngr.o
    0x08007200   0x08007200   0x00000040   Code   RO         2129    .text.get_duty_period  pwm_mode.o
    0x08007240   0x08007240   0x000000e4   Code   RO         2080    .text.get_key_state  led_key.o
    0x08007324   0x08007324   0x0000001c   Code   RO         2084    .text.led_clear     led_key.o
    0x08007340   0x08007340   0x00000068   Code   RO         2086    .text.led_show_err  led_key.o
    0x080073a8   0x080073a8   0x00000058   Code   RO         2088    .text.led_show_function  led_key.o
    0x08007400   0x08007400   0x00000588   Code   RO           19    .text.main          main.o
    0x08007988   0x08007988   0x000000dc   Code   RO          488    .text.mc_lock_pins  mc_tasks.o
    0x08007a64   0x08007a64   0x0000001c   Code   RO         2213    .text.mode_auto_init  app_mode.o
    0x08007a80   0x08007a80   0x00000002   Code   RO         2215    .text.mode_auto_tick  app_mode.o
    0x08007a82   0x08007a82   0x00000008   Code   RO         2241    .text.mode_error_init  app_mode.o
    0x08007a8a   0x08007a8a   0x00000008   Code   RO         2243    .text.mode_error_tick  app_mode.o
    0x08007a92   0x08007a92   0x00000002   PAD
    0x08007a94   0x08007a94   0x00000020   Code   RO         2233    .text.mode_max_power_12m_init  app_mode.o
    0x08007ab4   0x08007ab4   0x00000002   Code   RO         2235    .text.mode_max_power_12m_tick  app_mode.o
    0x08007ab6   0x08007ab6   0x00000002   PAD
    0x08007ab8   0x08007ab8   0x00000018   Code   RO         2221    .text.mode_pressure_5m_init  app_mode.o
    0x08007ad0   0x08007ad0   0x00000002   Code   RO         2223    .text.mode_pressure_5m_tick  app_mode.o
    0x08007ad2   0x08007ad2   0x00000002   PAD
    0x08007ad4   0x08007ad4   0x00000018   Code   RO         2225    .text.mode_pressure_7m_init  app_mode.o
    0x08007aec   0x08007aec   0x00000002   Code   RO         2227    .text.mode_pressure_7m_tick  app_mode.o
    0x08007aee   0x08007aee   0x00000002   PAD
    0x08007af0   0x08007af0   0x00000018   Code   RO         2229    .text.mode_pressure_9m_init  app_mode.o
    0x08007b08   0x08007b08   0x00000002   Code   RO         2231    .text.mode_pressure_9m_tick  app_mode.o
    0x08007b0a   0x08007b0a   0x00000002   PAD
    0x08007b0c   0x08007b0c   0x00000054   Code   RO         2237    .text.mode_pwm_init  app_mode.o
    0x08007b60   0x08007b60   0x00000084   Code   RO         2239    .text.mode_pwm_tick  app_mode.o
    0x08007be4   0x08007be4   0x0000001c   Code   RO         2217    .text.mode_speed_init  app_mode.o
    0x08007c00   0x08007c00   0x00000002   Code   RO         2219    .text.mode_speed_tick  app_mode.o
    0x08007c02   0x08007c02   0x00000002   PAD
    0x08007c04   0x08007c04   0x0000002c   Code   RO         2209    .text.mode_standby_init  app_mode.o
    0x08007c30   0x08007c30   0x00000024   Code   RO         2211    .text.mode_standby_tick  app_mode.o
    0x08007c54   0x08007c54   0x00000078   Code   RO         2117    .text.pwm_mode_init  pwm_mode.o
    0x08007ccc   0x08007ccc   0x000000ac   Code   RO         2131    .text.pwm_speed_control  pwm_mode.o
    0x08007d78   0x08007d78   0x0000003c   Code   RO         1717    .text.waitForPolarizationEnd  pwm_common.o
    0x08007db4   0x08007db4   0x00000010   Code   RO         2191    .text.work_mode_init  app_handle.o
    0x08007dc4   0x08007dc4   0x0000003c   Code   RO         2193    .text.work_mode_perfrom  app_handle.o
    0x08007e00   0x08007e00   0x00000010   Code   RO         2195    .text.work_mode_switch  app_handle.o
    0x08007e10   0x08007e10   0x000001f6   Code   RO         2270    .text_divfast       c_p.l(aeabi_sdivfast.o)
    0x08008006   0x08008006   0x00000002   PAD
    0x08008008   0x08008008   0x0000008c   Code   RO         2292    x$fpl$fadd          fz_ps.l(faddsub.o)
    0x08008094   0x08008094   0x000000b0   Code   RO         2307    x$fpl$fmul          fz_ps.l(fmul.o)
    0x08008144   0x08008144   0x000000d0   Code   RO         2294    x$fpl$fsub          fz_ps.l(faddsub.o)
    0x08008214   0x08008214   0x00000000   Code   RO         2314    x$fpl$usenofp       fz_ps.l(usenofp.o)
    0x08008214   0x08008214   0x00000080   Data   RO         2284    .constdata          fz_ps.l(ddiv.o)
    0x08008294   0x08008294   0x00000040   Data   RO         2299    .constdata          fz_ps.l(fdiv.o)
    0x080082d4   0x080082d4   0x00000005   Data   RO          536    .rodata.CHANNEL_OFFSET_TAB  usart_aspep_driver.o
    0x080082d9   0x080082d9   0x00000100   Data   RO          583    .rodata.CRC4_Lookup8  aspep.o
    0x080083d9   0x080083d9   0x0000000e   Data   RO          545    .rodata.CTL_BOARD   mc_configuration_registers.o
    0x080083e7   0x080083e7   0x00000014   Data   RO          546    .rodata.FIRMWARE_NAME  mc_configuration_registers.o
    0x080083fb   0x080083fb   0x0000000e   Data   RO          554    .rodata.M1_ApplicationConfig_reg  mc_configuration_registers.o
    0x08008409   0x08008409   0x0000000e   Data   RO          551    .rodata.M1_FOCConfig_reg  mc_configuration_registers.o
    0x08008417   0x08008417   0x00000001   PAD
    0x08008418   0x08008418   0x0000003c   Data   RO          548    .rodata.M1_MotorConfig_reg  mc_configuration_registers.o
    0x08008454   0x08008454   0x00000024   Data   RO          549    .rodata.M1_PWR_BOARD  mc_configuration_registers.o
    0x08008478   0x08008478   0x00000078   Data   RO          501    .rodata.R3_1_Params  mc_parameters.o
    0x080084f0   0x080084f0   0x00000802   Data   RO         1578    .rodata.SqrtTable   circle_limitation.o
    0x08008cf2   0x08008cf2   0x00000010   Data   RO          584    .rodata.cst16       aspep.o
    0x08008d02   0x08008d02   0x00000002   PAD
    0x08008d04   0x08008d04   0x0000006c   Data   RO         2198    .rodata.g_work_mode_state  app_handle.o
    0x08008d70   0x08008d70   0x0000000a   Data   RO          547    .rodata.globalConfig_reg  mc_configuration_registers.o
    0x08008d7a   0x08008d7a   0x00000200   Data   RO          302    .rodata.hSin_Cos_Table  mc_math.o
    0x08008f7a   0x08008f7a   0x00000002   PAD
    0x08008f7c   0x08008f7c   0x00000020   Data   RO         2476    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08008fa0, Size: 0x00001f28, Max: 0x00009000, ABSOLUTE, COMPRESSED[0x000001d0])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000008   Data   RW         1127    .data..L_MergedGlobals  stm32g0xx_hal.o
    0x20000008   COMPRESSED   0x00000002   Data   RW         2199    .data..L_MergedGlobals  app_handle.o
    0x2000000a   COMPRESSED   0x00000002   Data   RW          647    .data.Acc_M1        user_logic.o
    0x2000000c   COMPRESSED   0x00000004   Data   RW          555    .data.ApplicationConfig_reg  mc_configuration_registers.o
    0x20000010   COMPRESSED   0x0000002c   Data   RW          159    .data.BusVoltageSensor_M1  mc_config.o
    0x2000003c   COMPRESSED   0x000000b4   Data   RW          161    .data.CircleLimitationM1  mc_config.o
    0x200000f0   COMPRESSED   0x00000004   Data   RW          552    .data.FOCConfig_reg  mc_configuration_registers.o
    0x200000f4   COMPRESSED   0x0000002c   Data   RW          184    .data.MCPA_UART_A   mcp_config.o
    0x20000120   COMPRESSED   0x00000010   Data   RW          179    .data.MCP_Over_UartA  mcp_config.o
    0x20000130   COMPRESSED   0x00000004   Data   RW          553    .data.MotorConfig_reg  mc_configuration_registers.o
    0x20000134   COMPRESSED   0x0000002c   Data   RW          150    .data.PIDIdHandle_M1  mc_config.o
    0x20000160   COMPRESSED   0x0000002c   Data   RW          149    .data.PIDIqHandle_M1  mc_config.o
    0x2000018c   COMPRESSED   0x0000002c   Data   RW          148    .data.PIDSpeedHandle_M1  mc_config.o
    0x200001b8   COMPRESSED   0x00000010   Data   RW          147    .data.PQD_MotorPowMeasM1  mc_config.o
    0x200001c8   COMPRESSED   0x00000090   Data   RW          153    .data.PWM_Handle_M1  mc_config.o
    0x20000258   COMPRESSED   0x00000004   Data   RW          550    .data.PWR_BOARD_NAME  mc_configuration_registers.o
    0x2000025c   COMPRESSED   0x00000018   Data   RW          160    .data.RampExtMngrHFParamsM1  mc_config.o
    0x20000274   COMPRESSED   0x00000078   Data   RW          152    .data.RevUpControlM1  mc_config.o
    0x200002ec   COMPRESSED   0x00000014   Data   RW          156    .data.STO_M1        mc_config.o
    0x20000300   COMPRESSED   0x00000128   Data   RW          155    .data.STO_PLL_M1    mc_config.o
    0x20000428   COMPRESSED   0x00000034   Data   RW          151    .data.SpeednTorqCtrlM1  mc_config.o
    0x2000045c   COMPRESSED   0x00000001   Data   RW          442    .data.SysTick_Handler.SystickDividerCounter  stm32g0xx_mc_it.o
    0x2000045d   COMPRESSED   0x00000003   PAD
    0x20000460   COMPRESSED   0x00000004   Data   RW         1549    .data.SystemCoreClock  system_stm32g0xx.o
    0x20000464   COMPRESSED   0x00000028   Data   RW          157    .data.TempSensor_M1  mc_config.o
    0x2000048c   COMPRESSED   0x00000014   Data   RW          173    .data.UASPEP_A      mcp_config.o
    0x200004a0   COMPRESSED   0x00000038   Data   RW          154    .data.VirtualSpeedSensorM1  mc_config.o
    0x200004d8   COMPRESSED   0x00000074   Data   RW          178    .data.aspepOverUartA  mcp_config.o
    0x2000054c   COMPRESSED   0x00000001   Data   RW         2246    .data.need_stop_flag  app_mode.o
    0x2000054d   COMPRESSED   0x00000003   PAD
    0x20000550   COMPRESSED   0x00000004   Data   RW          166    .data.pMPM          mc_config.o
    0x20000554   COMPRESSED   0x00000004   Data   RW          165    .data.pPIDId        mc_config.o
    0x20000558   COMPRESSED   0x00000004   Data   RW          164    .data.pPIDIq        mc_config.o
    0x2000055c   COMPRESSED   0x00000004   Data   RW          162    .data.pSTC          mc_config.o
    0x20000560   COMPRESSED   0x00000004   Data   RW          163    .data.pTemperatureSensor  mc_config.o
    0x20000564   COMPRESSED   0x00000001   Data   RW         2090    .data.switch_mode_tmp  led_key.o
    0x20000565   COMPRESSED   0x0000000a   Data   RW         2248    .data.temp_duty     app_mode.o
    0x2000056f   COMPRESSED   0x00000001   PAD
    0x20000570        -       0x00000060   Zero   RW         2348    .bss                c_p.l(libspace.o)
    0x200005d0        -       0x00000014   Zero   RW           35    .bss..L_MergedGlobals  main.o
    0x200005e4        -       0x00000050   Zero   RW          281    .bss..L_MergedGlobals  regular_conversion_manager.o
    0x20000634        -       0x00000036   Zero   RW          492    .bss..L_MergedGlobals  mc_tasks.o
    0x2000066a   COMPRESSED   0x00000002   PAD
    0x2000066c        -       0x0000001e   Zero   RW          648    .bss..L_MergedGlobals  user_logic.o
    0x2000068a   COMPRESSED   0x00000002   PAD
    0x2000068c        -       0x00000028   Zero   RW         2109    .bss..L_MergedGlobals  adc_cin.o
    0x200006b4        -       0x00000064   Zero   RW         2136    .bss..L_MergedGlobals  pwm_mode.o
    0x20000718        -       0x00000034   Zero   RW         2165    .bss..L_MergedGlobals  lin.o
    0x2000074c        -       0x0000000a   Zero   RW         2183    .bss..L_MergedGlobals  app_error.o
    0x20000756   COMPRESSED   0x00000002   PAD
    0x20000758        -       0x00000008   Zero   RW         2250    .bss..L_MergedGlobals  app_mode.o
    0x20000760        -       0x00000004   Zero   RW         2045    .bss.GLOBAL_TIMESTAMP  mcpa.o
    0x20000764        -       0x00000806   Zero   RW          176    .bss.MCPAsyncBuffUARTA_A  mcp_config.o
    0x20000f6a   COMPRESSED   0x00000002   PAD
    0x20000f6c        -       0x00000806   Zero   RW          177    .bss.MCPAsyncBuffUARTA_B  mcp_config.o
    0x20001772   COMPRESSED   0x00000002   PAD
    0x20001774        -       0x00000082   Zero   RW          174    .bss.MCPSyncRXBuff  mcp_config.o
    0x200017f6   COMPRESSED   0x00000002   PAD
    0x200017f8        -       0x00000086   Zero   RW          175    .bss.MCPSyncTxBuff  mcp_config.o
    0x2000187e   COMPRESSED   0x00000002   PAD
    0x20001880        -       0x00000008   Zero   RW          185    .bss.MCP_UserCallBack  mcp_config.o
    0x20001888        -       0x00000001   Zero   RW         2092    .bss.MOTOR_ERROR_INFO  led_key.o
    0x20001889   COMPRESSED   0x00000003   PAD
    0x2000188c        -       0x00000020   Zero   RW          167    .bss.Mci            mc_config.o
    0x200018ac        -       0x00000002   Zero   RW          515    .bss.RI_GetPtrReg.nullData16  register_interface.o
    0x200018ae        -       0x00000014   Zero   RW          158    .bss.RealBusVoltageSensorFilterBufferM1  mc_config.o
    0x200018c2        -       0x00000002   Zero   RW          441    .bss.User_Logic_Handle_Counter  stm32g0xx_mc_it.o
    0x200018c4        -       0x00000028   Zero   RW          180    .bss.dataPtrTableA  mcp_config.o
    0x200018ec        -       0x00000028   Zero   RW          181    .bss.dataPtrTableBuffA  mcp_config.o
    0x20001914        -       0x0000000a   Zero   RW          182    .bss.dataSizeTableA  mcp_config.o
    0x2000191e        -       0x0000000a   Zero   RW          183    .bss.dataSizeTableBuffA  mcp_config.o
    0x20001928        -       0x00000001   Zero   RW         2197    .bss.g_work_mode    app_handle.o
    0x20001929   COMPRESSED   0x00000001   PAD
    0x2000192a        -       0x00000002   Zero   RW         1876    .bss.hCurrentReference  speed_torq_ctrl.o
    0x2000192c        -       0x0000004c   Zero   RW           33    .bss.htim14         main.o
    0x20001978        -       0x0000004c   Zero   RW           31    .bss.htim17         main.o
    0x200019c4        -       0x0000000c   Zero   RW         2091    .bss.key            led_key.o
    0x200019d0        -       0x00000004   Zero   RW           46    .bss.pMCI           motorcontrol.o
    0x200019d4        -       0x00000004   Zero   RW         2135    .bss.pwm_duty       pwm_mode.o
    0x200019d8        -       0x00000004   Zero   RW         2134    .bss.rise1_cnt      pwm_mode.o
    0x200019dc        -       0x00000001   Zero   RW          443    .bss.rise_time      stm32g0xx_mc_it.o
    0x200019dd   COMPRESSED   0x00000003   PAD
    0x200019e0        -       0x00000004   Zero   RW         2133    .bss.timer17_updata_time  pwm_mode.o
    0x200019e4        -       0x00000004   Zero   RW         1126    .bss.uwTick         stm32g0xx_hal.o
    0x200019e8        -       0x00000040   Zero   RW          635    .bss.watch_data     watch_data.o
    0x20001a28        -       0x00000200   Zero   RW            2    HEAP                startup_stm32g030xx.o
    0x20001c28        -       0x00000300   Zero   RW            1    STACK               startup_stm32g030xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       316         32          0          0         40       3467   adc_cin.o
       500         48          0          0         10       2408   app_error.o
        92         12        108          2          1       1607   app_handle.o
       484         48          0         11          8       6047   app_mode.o
      2242         32        272          0          0      17205   aspep.o
        14          0          0          0          0       1762   bus_voltage_sensor.o
       128          8       2050          0          0       2107   circle_limitation.o
       476         36          0          1         13       4774   led_key.o
       652         20          0          0         52       7681   lin.o
      1766        116          0          0        172      20813   main.o
       104          0          0          0          0       7969   mc_api.o
         4          0          0          0          0        547   mc_app_hooks.o
         0          0          0       1144         52      13989   mc_config.o
         0          0        168         16          0       2264   mc_configuration_registers.o
       600          8          0          0          0      18194   mc_interface.o
       390         24        512          0          0       4679   mc_math.o
         0          0        120          0          0       2297   mc_parameters.o
      2336        216          0          0         54      14578   mc_tasks.o
       356         38          0          0          0       8171   mcp.o
         0          0          0        196       4480       4466   mcp_config.o
       816          4          0          0          4       4319   mcpa.o
        52          8          0          0          4       7070   motorcontrol.o
       164          4          0          0          0       3768   ntc_temperature_sensor.o
       274         12          0          0          0       6307   pid_regulator.o
        84          0          0          0          0       2572   pqd_motor_power_measurement.o
        60          0          0          0          0       2168   pwm_common.o
       536          0          0          0          0      10401   pwm_curr_fdbk.o
       384         68          0          0        112      10562   pwm_mode.o
      1960        104          0          0          0      21804   r3_g0xx_pwm_curr_fdbk.o
       362          4          0          0          0       5163   r_divider_bus_voltage_sensor.o
       280          0          0          0          0       3471   ramp_ext_mngr.o
      4456        808          0          0          2      28573   register_interface.o
      1016         32          0          0         80       8819   regular_conversion_manager.o
       394          4          0          0          0      13124   revup_ctrl.o
       130          4          0          0          0       3681   speed_pos_fdbk.o
       412         20          0          0          2       7204   speed_torq_ctrl.o
        76         28        192          0       1280        704   startup_stm32g030xx.o
       172         12          0          8          4       6716   stm32g0xx_hal.o
       150         24          0          0          0       6620   stm32g0xx_hal_cortex.o
       724         24          0          0          0       4845   stm32g0xx_hal_gpio.o
       168         16          0          0          0       5770   stm32g0xx_hal_msp.o
        12          4          0          0          0       9226   stm32g0xx_hal_rcc.o
       644         20          0          0          0      68539   stm32g0xx_hal_tim.o
         6          0          0          0          0      26549   stm32g0xx_hal_tim_ex.o
        38          8          0          0          0       1709   stm32g0xx_it.o
       156          8          0          0          0       6718   stm32g0xx_ll_adc.o
       180         12          0          0          0       2823   stm32g0xx_ll_exti.o
       198          0          0          0          0       3851   stm32g0xx_ll_gpio.o
      1024         72          0          0          0      13373   stm32g0xx_ll_tim.o
        12          4          0          0          0       8488   stm32g0xx_ll_utils.o
       638         68          0          1          3       9254   stm32g0xx_mc_it.o
      1708         16          0          0          0      15596   sto_pll_speed_pos_fdbk.o
         2          0          0          4          0       2012   system_stm32g0xx.o
       264          8          5          0          0       7502   usart_aspep_driver.o
       272         24          0          2         30       3253   user_logic.o
       556          0          0          0          0       5951   virtual_speed_sensor.o
         0          0          0          0         64       1608   watch_data.o

    ----------------------------------------------------------------------
     28896       2058       3464       1392       6488     495138   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        56          0          5          7         21          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        86          0          0          0          0          0   __dczerorl2.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
       502          0          0          0          0         92   aeabi_sdivfast.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        48          0          0          0          0         72   llmul.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        62          0          0          0          0         80   sys_stackheap_outer.o
       124          4          0          0          0         72   d2f.o
      1096         26        128          0          0        112   ddiv.o
       108         10          0          0          0         72   dfixi.o
        88          0          0          0          0         92   dflti.o
       584         26          0          0          0         84   dmul.o
       348          8          0          0          0        160   faddsub.o
       352         10         64          0          0         92   fdiv.o
        76          0          0          0          0         68   ffixi.o
        48          0          0          0          0         60   ffixui.o
        94          0          0          0          0         92   fflti.o
       176          4          0          0          0         80   fmul.o
         0          0          0          0          0          0   usenofp.o

    ----------------------------------------------------------------------
      4212        100        192          0         96       1820   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1112         12          0          0         96        836   c_p.l
      3094         88        192          0          0        984   fz_ps.l

    ----------------------------------------------------------------------
      4212        100        192          0         96       1820   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     33108       2158       3656       1392       6584     495178   Grand Totals
     33108       2158       3656        464       6584     495178   ELF Image Totals (compressed)
     33108       2158       3656        464          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                36764 (  35.90kB)
    Total RW  Size (RW Data + ZI Data)              7976 (   7.79kB)
    Total ROM Size (Code + RO Data + RW Data)      37228 (  36.36kB)

==============================================================================

